(undo-tree-save-format-version . 1)
"c8f64700637500c5a454a712557f7f696fc4385e"
[nil nil nil nil (25843 6661 306926 985000) 0 nil]
([nil nil ((1 . 4) (t 25843 6214 926680 604000)) nil (25843 6661 306925 733000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 4) nil (25843 6661 306924 922000) 0 nil])
([nil nil ((3 . 4)) nil (25843 6661 306923 559000) 0 nil])
([nil nil ((1 . 17) (#("pac" 0 3 (fontified nil)) . 1) (1 . 4) (#("package commands" 0 16 (fontified nil)) . -1) (1 . 17) (#("pac" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -3) (undo-tree-id7 . -1) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) 4) nil (25843 6661 306922 106000) 0 nil])
([nil nil ((17 . 19)) nil (25843 6661 306860 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19 . 20) (#("
" 0 1 (fontified nil)) . -488) (19 . 489) (t 25843 6661 311599 547000)) nil (25843 11040 455619 239000) 0 nil])
([nil nil ((488 . 490)) nil (25843 11040 455617 646000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -510) (510 . 511) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -510) (510 . 511) (490 . 511)) nil (25843 11040 455616 474000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -513) (513 . 514) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -513) (513 . 514) (511 . 514)) nil (25843 11040 455614 520000) 0 nil])
([nil nil ((514 . 515) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 514) (514 . 515) (513 . 515)) nil (25843 11040 455612 497000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -516) (516 . 517) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -516) (516 . 517) (511 . 517)) nil (25843 11040 455610 453000) 0 nil])
([nil nil ((516 . 522)) nil (25843 11040 455608 18000) 0 nil])
([nil nil ((523 . 533)) nil (25843 11040 455607 187000) 0 nil])
([nil nil ((537 . 544)) nil (25843 11040 455606 415000) 0 nil])
([nil nil ((535 . 537)) nil (25843 11040 455605 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 538 . 539) (#("
" 0 1 (fontified nil)) . -789) (537 . 790) 536) nil (25843 11040 455603 991000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 536) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (25843 11040 455601 466000) 0 nil])
([nil nil ((796 . 797)) nil (25843 11040 455579 746000) 0 nil])
([nil nil ((797 . 802)) nil (25843 11040 455578 374000) 0 nil])
([nil nil ((804 . 805)) nil (25843 11040 455572 383000) 0 nil])
([nil nil ((18 . 19) (t 25843 11040 556514 987000)) nil (25843 11060 253567 332000) 0 nil])
([nil nil ((19 . 21)) nil (25843 11060 253566 130000) 0 nil])
([nil nil ((21 . 25)) nil (25843 11060 253565 188000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -22) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -23) (undo-tree-id21 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -24) (undo-tree-id22 . -1) 25) nil (25843 11060 253563 606000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -27) (27 . 28) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -27) (27 . 28) (22 . 28)) nil (25843 11060 253547 316000) 0 nil])
([nil nil ((28 . 29) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 28) (28 . 29) (27 . 29)) nil (25843 11060 253545 482000) 0 nil])
([nil nil ((30 . 33) (29 . 31) (#("\"" 0 1 (fontified nil)) . -29) (29 . 30)) nil (25843 11060 253544 40000) 0 nil])
([nil nil ((34 . 36)) nil (25843 11060 253542 487000) 0 nil])
([nil nil ((37 . 43) (36 . 38) (#("\"" 0 1 (fontified nil)) . -36) (36 . 37)) nil (25843 11060 253533 450000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t syntax-table (9) face tree-sitter-hl-face:escape)) . -333) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("n" 0 1 (fontified t face (tree-sitter-hl-face:string tree-sitter-hl-face:escape))) . -334) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 335 (t 25843 11060 261623 302000)) nil (25843 11079 845555 81000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -323) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("n" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -324) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 325) nil (25843 11079 845545 814000) 0 nil])
([nil nil ((331 . 335)) nil (25843 11079 845522 50000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . -53) (undo-tree-id47 . -1) 54 (t 25843 11079 945738 718000)) nil (25843 11525 659400 924000) 0 nil])
([nil nil ((53 . 54)) nil (25843 11525 659398 249000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face tree-sitter-hl-face:type)) . -53) (undo-tree-id46 . -1) 54) nil (25843 11525 659396 696000) 0 nil])
([nil nil ((53 . 54)) nil (25843 11525 659377 197000) 0 nil])
([nil nil ((53 . 54) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . 53) (171 . 172) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . 171) (551 . 552) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . 551) (585 . 586) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . 585) (t 25843 11525 760043 222000)) nil (25843 11569 874086 919000) 0 nil])
([nil nil ((74 . 75) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -74) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 75 (612 . 613) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 612) (722 . 723) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 722) (t 25843 11569 972850 325000)) nil (25843 11778 618525 26000) 0 nil])
([nil nil ((94 . 95) (#("d" 0 1 (fontified t face tree-sitter-hl-face:property)) . 94) (396 . 397) (#("d" 0 1 (fontified t face tree-sitter-hl-face:property)) . 396) (636 . 637) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 636) (746 . 747) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 746)) nil (25843 11778 618515 317000) 0 nil])
([nil nil ((114 . 115) (#("c" 0 1 (fontified t face tree-sitter-hl-face:property)) . 114) (676 . 677) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 676) (782 . 783) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 782)) nil (25843 11778 618510 367000) 0 nil])
([nil nil ((516 . 518) (t 25843 11778 718257 109000)) nil (25843 15182 128441 902000) 0 nil])
([nil nil ((518 . 534)) nil (25843 15182 128441 330000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -533) (undo-tree-id142 . -1) 534) nil (25843 15182 128440 769000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -543) (543 . 544) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -543) (543 . 544) (535 . 544) (#(")" 0 1 (fontified nil)) . -534) (534 . 535) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -534) (534 . 535) (533 . 535)) nil (25843 15182 128439 978000) 0 nil])
([nil nil ((544 . 545) (#("	" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 544) (544 . 545) (543 . 545)) nil (25843 15182 128439 16000) 0 nil])
([nil nil ((545 . 546)) nil (25843 15182 128438 185000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -545) (undo-tree-id141 . -1) 546) nil (25843 15182 128437 543000) 0 nil])
([nil nil ((545 . 549)) nil (25843 15182 128436 612000) 0 nil])
([nil nil ((#("v" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -545) (undo-tree-id137 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -546) (undo-tree-id138 . -1) (#("r" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -547) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t)) . -548) (undo-tree-id140 . -1) 549) nil (25843 15182 128435 610000) 0 nil])
([nil nil ((545 . 556)) nil (25843 15182 128433 796000) 0 nil])
([nil nil ((556 . 561)) nil (25843 15182 128433 145000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -557) (undo-tree-id136 . -1) 558) nil (25843 15182 128432 504000) 0 nil])
([nil nil ((557 . 559)) nil (25843 15182 128431 712000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -558) (undo-tree-id135 . -1) 559) nil (25843 15182 128431 332000) 0 nil])
([nil nil ((558 . 563)) nil (25843 15182 128430 650000) 0 nil])
([nil nil ((566 . 571)) nil (25843 15182 128430 79000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -570) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 571) nil (25843 15182 128429 769000) 0 nil])
([nil nil ((44 . 45)) nil (25843 15182 128428 727000) 0 nil])
([nil nil ((#("Å±" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -44) (undo-tree-id132 . -1) 45) nil (25843 15182 128428 326000) 0 nil])
([nil nil ((44 . 46)) nil (25843 15182 128427 94000) 0 nil])
([nil nil ((47 . 51) (46 . 48) (#("\"" 0 1 (fontified nil)) . -46) (46 . 47)) nil (25843 15182 128426 332000) 0 nil])
([nil nil ((47 . 57) (#("GoPo" 0 4 (fontified nil)) . 47) (47 . 51) (#("GoPokedex/" 0 10 (fontified nil)) . -47) (47 . 57) (#("GoPo" 0 4 (face tree-sitter-hl-face:string fontified t)) . -47) (undo-tree-id130 . -4) (undo-tree-id131 . -4) 51) nil (25843 15182 128425 100000) 0 nil])
([nil nil ((57 . 60)) nil (25843 15182 128423 267000) 0 nil])
([nil nil ((57 . 64) (#("ser" 0 3 (fontified nil)) . 57) (57 . 60) (#("service" 0 7 (fontified nil)) . -57) (57 . 64) (#("ser" 0 3 (face tree-sitter-hl-face:string fontified t)) . -57) (undo-tree-id128 . -3) (undo-tree-id129 . -3) 60) nil (25843 15182 128422 585000) 0 nil])
([nil nil ((#("G" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -587) (undo-tree-id124 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -588) (undo-tree-id125 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -589) (undo-tree-id126 . -1) (#("L" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -590) (undo-tree-id127 . -1) 591) nil (25843 15182 128420 351000) 0 nil])
([nil nil ((587 . 590)) nil (25843 15182 128418 157000) 0 nil])
([nil nil ((587 . 594) (#("ser" 0 3 (fontified nil)) . 587) (587 . 590) (#("service" 0 7 (fontified nil)) . -587) (587 . 594) (#("ser" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -587) (undo-tree-id122 . -3) (undo-tree-id123 . -3) 590) nil (25843 15182 128417 436000) 0 nil])
([nil nil ((594 . 595)) nil (25843 15182 128415 953000) 0 nil])
([nil nil ((595 . 623) (#("GetLocation" 0 11 (fontified nil)) . -595) (595 . 606)) nil (25843 15182 128415 242000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -607) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -608) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -609) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#(":" 0 1 (fontified t)) . -610) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -611) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -612) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -613) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t)) . -614) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("s" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -615) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -616) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -617) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -618) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -619) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("g" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -620) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -621) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . 1) (undo-tree-id121 . -1) 622) nil (25843 15182 128412 907000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -606) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 607)) nil (25843 15182 128231 77000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -605) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 606) nil (25843 15182 128229 975000) 0 nil])
([nil nil ((605 . 606)) nil (25843 15182 128228 642000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 607 607 nil nil nil t nil)) nil 6 nil #s(yas--field 1 607 607 nil nil nil t nil) nil nil)) (595 . 618) (#("GetLocation(${1:url string})" 0 28 (fontified nil)) . 595) (595 . 623) (#("GetLocation" 0 11 (fontified nil)) . 595) (595 . 606) (#("GetLocation" 0 11 (face tree-sitter-hl-face:property fontified t)) . -595) (undo-tree-id84 . -11) (undo-tree-id85 . -11) 606) nil (25843 15182 128227 781000) 0 nil])
([nil nil ((#("url string" 0 3 (face tree-sitter-hl-face:variable fontified nil) 3 4 (fontified nil) 4 10 (face tree-sitter-hl-face:variable fontified nil)) . 608) (607 . 608)) nil (25843 15182 128226 148000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -607) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 608) nil (25843 15182 128225 436000) 0 nil])
([nil nil ((apply yas--snippet-revive 595 608 #s(yas--snippet nil (#s(yas--field 1 607 607 nil nil nil t nil)) nil 6 nil #s(yas--field 1 607 607 nil nil nil t nil) nil nil))) nil (25843 15182 128224 24000) 0 nil])
([nil nil ((564 . 566)) nil (25843 15182 128223 333000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -565) (undo-tree-id81 . -1) 566) nil (25843 15182 128222 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 565 . 566) (#("
" 0 1 (fontified nil)) . -619) (565 . 620)) nil (25843 15182 128222 110000) 0 nil])
([nil nil ((566 . 569)) nil (25843 15182 128221 730000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -568) (undo-tree-id80 . -1) 569) nil (25843 15182 128221 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -564) (undo-tree-id79 . -1) 565) nil (25843 15182 128220 848000) 0 nil])
([nil nil ((663 . 666)) nil (25843 15182 128220 307000) 0 nil])
([nil nil ((667 . 669)) nil (25843 15182 128219 836000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15182 128219 345000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15182 128218 854000) 0 nil])
([nil nil ((539 . 556)) nil (25843 15182 128218 493000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -554) (undo-tree-id77 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -555) (undo-tree-id78 . -1) 556) nil (25843 15182 128217 982000) 0 nil])
([nil nil ((554 . 556)) nil (25843 15182 128217 141000) 0 nil])
([nil nil ((#("\"https://pokeapi.co/api/v2/location-area\"" 0 1 (face tree-sitter-hl-face:string fontified t) 1 39 (face tree-sitter-hl-face:string fontified t) 39 40 (face tree-sitter-hl-face:string fontified t rear-nonsticky t) 40 41 (face tree-sitter-hl-face:string fontified t)) . 598) (undo-tree-id71 . -40) (undo-tree-id72 . 38) (undo-tree-id73 . -40) (undo-tree-id74 . -40) (undo-tree-id75 . -40) (undo-tree-id76 . -40) 638) nil (25843 15182 128216 750000) 0 nil])
([nil nil ((556 . 559)) nil (25843 15182 128214 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 599 . 600) (nil fontified nil 559 . 600) (559 . 600) 558) nil (25843 15182 128214 496000) 0 nil])
([nil nil ((#("  const url = 
" 0 2 (fontified t) 2 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 11 (face tree-sitter-hl-face:variable fontified t) 11 12 (fontified t) 12 13 (face tree-sitter-hl-face:operator fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 628) (undo-tree-id63 . 1) (undo-tree-id64 . -13) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . 1) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) 641) nil (25843 15182 128213 875000) 0 nil])
([nil nil ((674 . 676)) nil (25843 15182 128209 487000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -670) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -671) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -672) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 673) nil (25843 15182 128208 835000) 0 nil])
([nil nil ((670 . 674)) nil (25843 15182 128205 910000) 0 nil])
([nil nil ((apply yas--snippet-revive 670 683 #s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 7 nil nil nil nil)) (670 . 683) (#("commandMapUrl" 0 13 (fontified nil)) . 670) (670 . 683) (#("comm" 0 4 (fontified nil)) . 670) (670 . 674) (#("commandMapUrl" 0 13 (fontified nil)) . -670) (670 . 683) (#("comm" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -670) (undo-tree-id52 . -4) (undo-tree-id53 . -4) 674) nil (25843 15182 128205 158000) 0 nil])
([nil nil ((684 . 686)) nil (25843 15182 128203 726000) 0 nil])
([nil nil ((686 . 693)) nil (25843 15182 128203 45000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -686) (undo-tree-id41 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -687) (undo-tree-id42 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -688) (undo-tree-id43 . -1) (#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -689) (undo-tree-id44 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -690) (undo-tree-id45 . -1) (#("n" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -691) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id47 . -1) (#("
" 0 1 (fontified t)) . -693) (undo-tree-id48 . -1) (#("	" 0 1 (fontified t)) . -694) (undo-tree-id49 . -1) (#("
" 0 1 (fontified t)) . -695) (undo-tree-id50 . -1) (#("	" 0 1 (fontified t)) . -696) (undo-tree-id51 . -1) 697) nil (25843 15182 128201 582000) 0 nil])
([nil nil ((686 . 690)) nil (25843 15182 128195 561000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -689) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 690) nil (25843 15182 128195 60000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -686) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -687) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -688) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 689) nil (25843 15182 128193 567000) 0 nil])
([nil nil ((686 . 690)) nil (25843 15182 128190 962000) 0 nil])
([nil nil ((690 . 694)) nil (25843 15182 128190 241000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -690) (undo-tree-id29 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -691) (undo-tree-id30 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -692) (undo-tree-id31 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -693) (undo-tree-id32 . -1) 694) nil (25843 15182 128189 439000) 0 nil])
([nil nil ((690 . 691)) nil (25843 15182 128187 616000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -690) (undo-tree-id28 . -1) 691) nil (25843 15182 128187 65000) 0 nil])
([nil nil ((690 . 699)) nil (25843 15182 128186 83000) 0 nil])
([nil nil ((699 . 712)) nil (25843 15182 128185 412000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:type fontified t)) . -710) (undo-tree-id26 . -1) (#("e" 0 1 (face tree-sitter-hl-face:type fontified t)) . -711) (undo-tree-id27 . -1) 712) nil (25843 15182 128184 450000) 0 nil])
([nil nil ((710 . 713)) nil (25843 15182 128183 288000) 0 nil])
([nil nil ((713 . 715)) nil (25843 15182 128182 727000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:type fontified t)) . -713) (undo-tree-id24 . -1) (#("t" 0 1 (face tree-sitter-hl-face:type fontified t)) . -714) (undo-tree-id25 . -1) 715) nil (25843 15182 128182 15000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -718) (718 . 719) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -718) (718 . 719) (713 . 719)) nil (25843 15182 128180 853000) 0 nil])
([nil nil ((719 . 721) (720 . 721) (#("		" 0 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 719) (719 . 721) (718 . 720)) nil (25843 15182 128180 52000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -692) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -693) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 694) nil (25843 15182 128179 50000) 0 nil])
([nil nil ((692 . 694)) nil (25843 15182 128176 575000) 0 nil])
([nil nil ((694 . 700)) nil (25843 15182 128176 24000) 0 nil])
([nil nil ((722 . 723)) nil (25843 15182 128175 513000) 0 nil])
([nil nil ((728 . 732)) nil (25843 15182 128174 852000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -728) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -729) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -730) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -731) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 732) nil (25843 15182 128174 361000) 0 nil])
([nil nil ((728 . 734)) nil (25843 15182 128171 395000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:property fontified t)) . -732) (undo-tree-id10 . -1) (#("r" 0 1 (face tree-sitter-hl-face:property fontified t)) . -733) (undo-tree-id11 . -1) 734) nil (25843 15182 128170 644000) 0 nil])
([nil nil ((732 . 736)) nil (25843 15182 128169 131000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 740 746 nil nil nil t nil)) nil 8 nil #s(yas--field 1 740 746 nil nil nil t nil) nil nil)) (732 . 749) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 732) (732 . 754) (#("Prin" 0 4 (fontified nil)) . 732) (732 . 736) (#("Println" 0 7 (fontified nil)) . -732) (732 . 739) (#("Prin" 0 4 (face tree-sitter-hl-face:property fontified t)) . -732) (undo-tree-id8 . -4) (undo-tree-id9 . -4) 736) nil (25843 15182 128167 839000) 0 nil])
([nil nil ((741 . 746) (#("a ...any" 0 1 (face tree-sitter-hl-face:variable fontified nil) 1 2 (fontified nil) 2 5 (face tree-sitter-hl-face:operator fontified nil) 5 8 (face tree-sitter-hl-face:variable fontified nil)) . 741) (740 . 741)) nil (25843 15182 128166 75000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -742) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("a" 0 1 (face tree-sitter-hl-face:property fontified t)) . -743) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified t)) . -744) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -745) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 746) nil (25843 15182 128164 953000) 0 nil])
([nil nil ((742 . 746)) nil (25843 15182 128132 132000) 0 nil])
([nil nil ((apply yas--snippet-revive 732 747 #s(yas--snippet nil (#s(yas--field 1 740 746 nil nil nil t nil)) nil 8 nil #s(yas--field 1 740 746 nil nil nil t nil) nil nil))) nil (25843 15182 128131 601000) 0 nil])
([nil nil ((690 . 692)) nil (25843 15182 128128 385000) 0 nil])
([nil nil ((752 . 754) (t 25843 15182 134793 630000)) nil (25843 15249 899488 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -752) (undo-tree-id156 . -1) (#("	" 0 1 (fontified t)) . -753) (undo-tree-id157 . -1) 754) nil (25843 15249 899487 303000) 0 nil])
([nil nil ((752 . 754)) nil (25843 15249 899485 480000) 0 nil])
([nil nil ((754 . 764)) nil (25843 15249 899485 69000) 0 nil])
([nil nil ((627 . 629)) nil (25843 15249 899484 448000) 0 nil])
([nil nil ((754 . 756)) nil (25843 15249 899483 376000) 0 nil])
([nil nil ((756 . 761)) nil (25843 15249 899482 715000) 0 nil])
([nil nil ((apply yas--snippet-revive 756 769 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (756 . 769) (#("commandMapUrl" 0 13 (fontified nil)) . 756) (756 . 769) (#("comma" 0 5 (fontified nil)) . 756) (756 . 761) (#("commandMapUrl" 0 13 (fontified nil)) . -756) (756 . 769) (#("comma" 0 5 (face tree-sitter-hl-face:variable fontified t)) . -756) (undo-tree-id154 . -5) (undo-tree-id155 . -5) 761) nil (25843 15249 899481 853000) 0 nil])
([nil nil ((769 . 772)) nil (25843 15249 899479 559000) 0 nil])
([nil nil ((772 . 776)) nil (25843 15249 899479 28000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15249 899477 966000) 0 nil])
([nil nil ((539 . 547)) nil (25843 15249 899477 315000) 0 nil])
([nil nil ((547 . 560)) nil (25843 15249 899476 713000) 0 nil])
([nil nil ((623 . 627)) nil (25843 15249 899475 742000) 0 nil])
([nil nil ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -555) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -556) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -557) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -558) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constant\.builtin fontified t)) . -559) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 560) nil (25843 15249 899474 399000) 0 nil])
([nil nil ((555 . 561)) nil (25843 15249 899236 3000) 0 nil])
([nil nil ((627 . 629)) nil (25843 15249 899235 392000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -628) (undo-tree-id143 . -1) 629) nil (25843 15249 899234 590000) 0 nil])
([nil nil ((628 . 630)) nil (25843 15249 899227 527000) 0 nil])
([nil nil ((630 . 646)) nil (25843 15249 899224 451000) 0 nil])
([nil nil ((822 . 825) (t 25843 15250 250 300000)) nil (25843 15280 29642 859000) 0 nil])
([nil nil ((#("	commandMapUrl = locatio
" 0 1 (fontified t) 1 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 24 (face tree-sitter-hl-face:variable fontified t) 24 25 (fontified t)) . 801) (undo-tree-id178 . 1) (undo-tree-id179 . -24) (undo-tree-id180 . -23) (undo-tree-id181 . -23) 824) nil (25843 15280 29642 218000) 0 nil])
([nil nil ((800 . 802)) nil (25843 15280 29640 324000) 0 nil])
([nil nil ((816 . 818)) nil (25843 15280 29640 74000) 0 nil])
([nil nil ((818 . 821)) nil (25843 15280 29639 543000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -819) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -820) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 821) nil (25843 15280 29639 42000) 0 nil])
([nil nil ((819 . 828)) nil (25843 15280 29637 138000) 0 nil])
([nil nil ((#("var nextCommand string 
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 15 (face tree-sitter-hl-face:variable fontified t) 15 16 (fontified t) 16 22 (face tree-sitter-hl-face:type fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 624) (undo-tree-id158 . 14) (undo-tree-id159 . -23) (undo-tree-id160 . -9) (undo-tree-id161 . -4) (undo-tree-id162 . -9) (undo-tree-id163 . -9) (undo-tree-id164 . -9) (undo-tree-id165 . -9) (undo-tree-id166 . -4) (undo-tree-id167 . -15) (undo-tree-id168 . -9) (undo-tree-id169 . -9) (undo-tree-id170 . -9) (undo-tree-id171 . -9) (undo-tree-id172 . -9) (undo-tree-id173 . -24) 633) nil (25843 15280 29634 523000) 0 nil])
([nil nil ((804 . 806) (t 25843 15280 130011 433000)) nil (25843 15393 28457 680000) 0 nil])
([nil nil ((651 . 652)) nil (25843 15393 28457 79000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -654) (654 . 655) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -654) (654 . 655) (652 . 655)) nil (25843 15393 28456 458000) 0 nil])
([nil nil ((654 . 661)) nil (25843 15393 28455 987000) 0 nil])
([nil nil ((apply yas--snippet-revive 654 667 #s(yas--snippet nil nil nil 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 10 nil nil nil nil)) (654 . 667) (#("commandMapUrl" 0 13 (fontified nil)) . 654) (654 . 667) (#("command" 0 7 (fontified nil)) . 654) (654 . 661) (#("commandMapUrl" 0 13 (fontified nil)) . -654) (654 . 667) (#("command" 0 7 (face tree-sitter-hl-face:variable fontified t)) . -654) (undo-tree-id211 . -7) (undo-tree-id212 . -7) 661) nil (25843 15393 28455 5000) 0 nil])
([nil nil ((667 . 674)) nil (25843 15393 28452 520000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -677) (677 . 678) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -677) (677 . 678) (675 . 678)) nil (25843 15393 28451 629000) 0 nil])
([nil nil ((678 . 680) (679 . 680) (#("		" 0 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 678) (678 . 680) (677 . 679)) nil (25843 15393 28450 527000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28449 324000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -680) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -681) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -682) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 684) nil (25843 15393 28448 653000) 0 nil])
([nil nil ((680 . 681)) nil (25843 15393 28446 269000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -680) (undo-tree-id202 . -1) 681) nil (25843 15393 28445 878000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28445 16000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -680) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -681) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -682) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 684) nil (25843 15393 28444 165000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28441 249000) 0 nil])
([nil nil ((684 . 687)) nil (25843 15393 28440 999000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 692 718 nil nil nil t nil)) nil 11 nil #s(yas--field 1 692 718 nil nil nil t nil) nil nil)) (684 . 701) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 684) (684 . 706) (#("Pri" 0 3 (fontified nil)) . 684) (684 . 687) (#("Println" 0 7 (fontified nil)) . -684) (684 . 691) (#("Pri" 0 3 (face tree-sitter-hl-face:property fontified t)) . -684) (undo-tree-id192 . -3) (undo-tree-id193 . -3) 687) nil (25843 15393 28440 308000) 0 nil])
([nil nil ((693 . 701) (692 . 694) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -692) (#("a ...any" 0 1 (face tree-sitter-hl-face:variable fontified nil) 1 2 (fontified nil) 2 5 (face tree-sitter-hl-face:operator fontified nil) 5 8 (face tree-sitter-hl-face:variable fontified nil)) . 693) (692 . 693)) nil (25843 15393 28438 634000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -698) (undo-tree-id189 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string fontified t)) . -699) (undo-tree-id190 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -700) (undo-tree-id191 . -1) 701) nil (25843 15393 28437 592000) 0 nil])
([nil nil ((698 . 701)) nil (25843 15393 28435 468000) 0 nil])
([nil nil ((701 . 717)) nil (25843 15393 28434 917000) 0 nil])
([nil nil ((717 . 718)) nil (25843 15393 28434 416000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -717) (undo-tree-id188 . -1) 718) nil (25843 15393 28433 705000) 0 nil])
([nil nil ((apply yas--snippet-revive 684 719 #s(yas--snippet nil (#s(yas--field 1 692 718 nil nil nil t nil)) nil 11 nil #s(yas--field 1 692 718 nil nil nil t nil) nil nil))) nil (25843 15393 28432 563000) 0 nil])
([nil nil ((717 . 725)) nil (25843 15393 28432 82000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -715) (undo-tree-id186 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -716) (undo-tree-id187 . -1) 717) nil (25843 15393 28431 421000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:string fontified t)) . -711) (undo-tree-id182 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -712) (undo-tree-id183 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -713) (undo-tree-id184 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -714) (undo-tree-id185 . -1) 715) nil (25843 15393 28428 425000) 0 nil])
([nil nil ((711 . 720)) nil (25843 15393 28416 824000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 859) (undo-tree-id286 . -1) (t 25843 15393 36127 507000)) nil (25843 15449 724214 214000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -892) (892 . 893) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -892) (892 . 893) (886 . 893)) nil (25843 15449 724213 483000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -901) (901 . 902) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -901) (901 . 902) (893 . 902)) nil (25843 15449 724212 732000) 0 nil])
([nil nil ((902 . 903) (#("	" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 902) (902 . 903) (901 . 903)) nil (25843 15449 724212 171000) 0 nil])
([nil nil ((730 . 733)) nil (25843 15449 724211 780000) 0 nil])
([nil nil ((733 . 735)) nil (25843 15449 724211 509000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -733) (undo-tree-id284 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -734) (undo-tree-id285 . -1) 735) nil (25843 15449 724210 748000) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil)) . -712) (undo-tree-id261 . -1) (#("c" 0 1 (fontified nil)) . -713) (undo-tree-id262 . -1) (#("a" 0 1 (fontified t)) . -714) (undo-tree-id263 . -1) (#("t" 0 1 (fontified t)) . -715) (undo-tree-id264 . -1) (#("i" 0 1 (fontified t)) . -716) (undo-tree-id265 . -1) (#("o" 0 1 (fontified t)) . -717) (undo-tree-id266 . -1) (#("n" 0 1 (fontified t)) . -718) (undo-tree-id267 . -1) (#("s" 0 1 (fontified t)) . -719) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -720) (undo-tree-id269 . -1) (#("t" 0 1 (fontified t)) . -721) (undo-tree-id270 . -1) (#("o" 0 1 (fontified t)) . -722) (undo-tree-id271 . -1) (#(" " 0 1 (fontified t)) . -723) (undo-tree-id272 . -1) (#("s" 0 1 (fontified t)) . -724) (undo-tree-id273 . -1) (#("h" 0 1 (fontified t)) . -725) (undo-tree-id274 . -1) (#("o" 0 1 (fontified t)) . -726) (undo-tree-id275 . -1) (#("w" 0 1 (fontified t)) . -727) (undo-tree-id276 . -1) (#("\"" 0 1 (face tree-sitter-hl-face:string fontified t)) . -728) (undo-tree-id277 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -729) (undo-tree-id278 . -1) (undo-tree-id279 . 1) (undo-tree-id280 . -1) (#("
" 0 1 (fontified t)) . -730) (undo-tree-id281 . -1) (#("	" 0 1 (fontified t)) . -731) (undo-tree-id282 . -1) (#("	" 0 1 (fontified t)) . -732) (undo-tree-id283 . -1) 733) nil (25843 15449 724207 762000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -691) (undo-tree-id240 . -1) (#("\"" 0 1 (fontified t)) . -692) (undo-tree-id241 . -1) (#("N" 0 1 (fontified t)) . -693) (undo-tree-id242 . -1) (#("o" 0 1 (fontified t)) . -694) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id244 . -1) (#("m" 0 1 (fontified t)) . -696) (undo-tree-id245 . -1) (#("o" 0 1 (fontified t)) . -697) (undo-tree-id246 . -1) (#("r" 0 1 (fontified t)) . -698) (undo-tree-id247 . -1) (#("e" 0 1 (fontified t)) . -699) (undo-tree-id248 . -1) (#(" " 0 1 (fontified t)) . -700) (undo-tree-id249 . -1) (#("a" 0 1 (fontified t)) . -701) (undo-tree-id250 . -1) (#("v" 0 1 (fontified t)) . -702) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t)) . -703) (undo-tree-id252 . -1) (#("i" 0 1 (fontified t)) . -704) (undo-tree-id253 . -1) (#("l" 0 1 (fontified t)) . -705) (undo-tree-id254 . -1) (#("a" 0 1 (fontified t)) . -706) (undo-tree-id255 . -1) (#("b" 0 1 (fontified t)) . -707) (undo-tree-id256 . -1) (#("l" 0 1 (fontified t)) . -708) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t)) . -709) (undo-tree-id258 . -1) (#(" " 0 1 (fontified t)) . -710) (undo-tree-id259 . -1) (#("l" 0 1 (fontified t)) . -711) (undo-tree-id260 . -1) 712) nil (25843 15449 724196 50000) 0 nil])
([nil nil ((#("P" 0 1 (face tree-sitter-hl-face:property fontified t)) . -684) (undo-tree-id233 . -1) (#("r" 0 1 (face tree-sitter-hl-face:property fontified t)) . -685) (undo-tree-id234 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -686) (undo-tree-id235 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -687) (undo-tree-id236 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -688) (undo-tree-id237 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -689) (undo-tree-id238 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -690) (undo-tree-id239 . -1) 691) nil (25843 15449 724186 312000) 0 nil])
([nil nil ((684 . 685)) nil (25843 15449 723941 143000) 0 nil])
([nil nil ((#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -681) (undo-tree-id229 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -682) (undo-tree-id230 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id231 . -1) (#("E" 0 1 (face tree-sitter-hl-face:property fontified t)) . -684) (undo-tree-id232 . -1) 685) nil (25843 15449 723940 362000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -680) (undo-tree-id228 . -1) 681) nil (25843 15449 723938 809000) 0 nil])
([nil nil ((680 . 687)) nil (25843 15449 723938 208000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 691 700 nil nil nil t nil)) nil 12 nil #s(yas--field 1 691 700 nil nil nil t nil) nil nil)) (687 . 703) (#("New(${1:text string})" 0 21 (fontified nil)) . 687) (687 . 708) (#("New" 0 3 (fontified nil)) . -687) (687 . 690)) nil (25843 15449 723937 757000) 0 nil])
([nil nil ((692 . 699) (691 . 693) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -691) (#("text string" 0 4 (face tree-sitter-hl-face:variable fontified nil) 4 5 (fontified nil) 5 11 (face tree-sitter-hl-face:variable fontified nil)) . 692) (691 . 692)) nil (25843 15449 723936 755000) 0 nil])
([nil nil ((apply yas--snippet-revive 687 701 #s(yas--snippet nil (#s(yas--field 1 691 700 nil nil nil t nil)) nil 12 nil #s(yas--field 1 691 700 nil nil nil t nil) nil nil))) nil (25843 15449 723936 54000) 0 nil])
([nil nil ((#("e" 0 1 (face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable) fontified t)) . -680) (undo-tree-id218 . -1) (#("r" 0 1 (face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable) fontified t)) . -681) (undo-tree-id219 . -1) (#("r" 0 1 (face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable) fontified t)) . -682) (undo-tree-id220 . -1) (#("o" 0 1 (face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable) fontified t)) . -683) (undo-tree-id221 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified nil)) . -684) (undo-tree-id222 . -1) (#("s" 0 1 (face tree-sitter-hl-face:variable fontified nil)) . -685) (undo-tree-id223 . -1) (#("." 0 1 (fontified t)) . -686) (undo-tree-id224 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -687) (undo-tree-id225 . -1) (#("e" 0 1 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -688) (undo-tree-id226 . -1) (#("w" 0 1 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -689) (undo-tree-id227 . -1) 690) nil (25843 15449 723934 220000) 0 nil])
([nil nil ((680 . 689)) nil (25843 15449 723930 754000) 0 nil])
([nil nil ((apply yas--snippet-revive 684 691 #s(yas--snippet nil nil nil 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 13 nil nil nil nil)) (684 . 691) (#("Println" 0 7 (fontified nil)) . 684) (684 . 691) (#("Print" 0 5 (fontified nil)) . 684) (684 . 689) (#("Println" 0 7 (fontified nil)) . -684) (684 . 691) (#("Print" 0 5 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -684) (undo-tree-id216 . -5) (undo-tree-id217 . -5) 689) nil (25843 15449 723929 762000) 0 nil])
([nil nil ((700 . 704)) nil (25843 15449 723927 287000) 0 nil])
([nil nil ((704 . 714)) nil (25843 15449 723926 776000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -713) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 714) nil (25843 15449 723925 755000) 0 nil])
([nil nil ((713 . 728)) nil (25843 15449 723915 115000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -906) (906 . 907) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -906) (906 . 907) (903 . 907) (t 25843 15449 732689 501000)) nil (25843 15568 35731 124000) 0 nil])
([nil nil ((906 . 910)) nil (25843 15568 35730 683000) 0 nil])
([nil nil ((apply yas--snippet-revive 906 917 #s(yas--snippet nil nil nil 14 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 14 nil nil nil nil)) (906 . 917) (#("prevCommand" 0 11 (fontified nil)) . 906) (906 . 917) (#("prev" 0 4 (fontified nil)) . 906) (906 . 910) (#("prevCommand" 0 11 (fontified nil)) . -906) (906 . 917) (#("prev" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -906) (undo-tree-id350 . -4) (undo-tree-id351 . -4) 910) nil (25843 15568 35729 942000) 0 nil])
([nil nil ((917 . 924)) nil (25843 15568 35728 78000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -927) (927 . 928) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -927) (927 . 928) (925 . 928)) nil (25843 15568 35727 657000) 0 nil])
([nil nil ((928 . 930) (929 . 930) (#("		" 0 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 928) (928 . 930) (927 . 929)) nil (25843 15568 35727 106000) 0 nil])
([nil nil ((930 . 937)) nil (25843 15568 35726 725000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 941 977 nil nil nil t nil)) nil 15 nil #s(yas--field 1 941 977 nil nil nil t nil) nil nil)) (937 . 953) (#("New(${1:text string})" 0 21 (fontified nil)) . 937) (937 . 958) (#("New" 0 3 (fontified nil)) . -937) (937 . 940)) nil (25843 15568 35726 415000) 0 nil])
([nil nil ((942 . 945) (941 . 943) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -941) (#("text string" 0 4 (face tree-sitter-hl-face:variable fontified nil) 4 5 (fontified nil) 5 11 (face tree-sitter-hl-face:variable fontified nil)) . 942) (941 . 942)) nil (25843 15568 35725 804000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -942) (undo-tree-id347 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -943) (undo-tree-id348 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -944) (undo-tree-id349 . -1) 945) nil (25843 15568 35724 962000) 0 nil])
([nil nil ((942 . 944)) nil (25843 15568 35723 840000) 0 nil])
([nil nil ((#("N" 0 1 (face tree-sitter-hl-face:string fontified t)) . -942) (undo-tree-id345 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -943) (undo-tree-id346 . -1) 944) nil (25843 15568 35722 948000) 0 nil])
([nil nil ((942 . 946)) nil (25843 15568 35721 836000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:string fontified t)) . -943) (undo-tree-id342 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -944) (undo-tree-id343 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -945) (undo-tree-id344 . -1) 946) nil (25843 15568 35721 285000) 0 nil])
([nil nil ((943 . 945)) nil (25843 15568 35462 190000) 0 nil])
([nil nil ((#("M" 0 1 (face tree-sitter-hl-face:string fontified t)) . -942) (undo-tree-id339 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -943) (undo-tree-id340 . -1) (#("p" 0 1 (face tree-sitter-hl-face:string fontified t)) . -944) (undo-tree-id341 . -1) 945) nil (25843 15568 35461 559000) 0 nil])
([nil nil ((942 . 957)) nil (25843 15568 35460 207000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:string fontified t)) . -956) (undo-tree-id338 . -1) 957) nil (25843 15568 35459 906000) 0 nil])
([nil nil ((956 . 959)) nil (25843 15568 35459 475000) 0 nil])
([nil nil ((959 . 961)) nil (25843 15568 35459 315000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -960) (undo-tree-id337 . -1) 961) nil (25843 15568 35458 924000) 0 nil])
([nil nil ((960 . 976)) nil (25843 15568 35458 423000) 0 nil])
([nil nil ((apply yas--snippet-revive 937 978 #s(yas--snippet nil (#s(yas--field 1 941 977 nil nil nil t nil)) nil 15 nil #s(yas--field 1 941 977 nil nil nil t nil) nil nil))) nil (25843 15568 35458 193000) 0 nil])
([nil nil ((978 . 981)) nil (25843 15568 35457 872000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -978) (undo-tree-id334 . -1) (#("	" 0 1 (fontified t)) . -979) (undo-tree-id335 . -1) (#("	" 0 1 (fontified t)) . -980) (undo-tree-id336 . -1) 981) nil (25843 15568 35457 331000) 0 nil])
([nil nil ((981 . 983)) nil (25843 15568 35456 319000) 0 nil])
([nil nil ((983 . 1004)) nil (25843 15568 35455 899000) 0 nil])
([nil nil ((1004 . 1011)) nil (25843 15568 35455 678000) 0 nil])
([nil nil ((1011 . 1014)) nil (25843 15568 35455 348000) 0 nil])
([nil nil ((1014 . 1015)) nil (25843 15568 35455 117000) 0 nil])
([nil nil ((1015 . 1017)) nil (25843 15568 35454 776000) 0 nil])
([nil nil ((1017 . 1025)) nil (25843 15568 35454 606000) 0 nil])
([nil nil ((apply yas--snippet-revive 1025 1029 #s(yas--snippet nil nil nil 16 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 16 nil nil nil nil)) (1025 . 1029) (#("chan" 0 4 (fontified nil)) . 1025) (1014 . 1029) (#("chan" 0 4 (fontified nil)) . -1014) (1014 . 1018) (#("GetLocation" 0 11 (face tree-sitter-hl-face:type fontified t)) . -1014) (undo-tree-id332 . -11) (undo-tree-id333 . -11) 1025) nil (25843 15568 35453 935000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . -1025) (undo-tree-id328 . -1) (#("h" 0 1 (face tree-sitter-hl-face:type fontified t)) . -1026) (undo-tree-id329 . -1) (#("a" 0 1 (face tree-sitter-hl-face:type fontified t)) . -1027) (undo-tree-id330 . -1) (#("n" 0 1 (face tree-sitter-hl-face:type fontified t)) . -1028) (undo-tree-id331 . -1) 1029) nil (25843 15568 35452 652000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1026) (1026 . 1027) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1026) (1026 . 1027) (1025 . 1027)) nil (25843 15568 35450 248000) 0 nil])
([nil nil ((#(":" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1003) (undo-tree-id327 . -1) 1004) nil (25843 15568 35448 905000) 0 nil])
([nil nil ((1025 . 1028)) nil (25843 15568 35447 853000) 0 nil])
([nil nil ((apply yas--snippet-revive 1025 1036 #s(yas--snippet nil nil nil 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 17 nil nil nil nil)) (1025 . 1036) (#("prevCommand" 0 11 (fontified nil)) . 1025) (1025 . 1036) (#("pre" 0 3 (fontified nil)) . 1025) (1025 . 1028) (#("prevCommand" 0 11 (fontified nil)) . -1025) (1025 . 1036) (#("pre" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1025) (undo-tree-id325 . -3) (undo-tree-id326 . -3) 1028) nil (25843 15568 35446 731000) 0 nil])
([nil nil ((624 . 625)) nil (25843 15568 35444 978000) 0 nil])
([nil nil ((539 . 540)) nil (25843 15568 35444 387000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -673) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -674) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constant\.builtin fontified t)) . -675) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 676) nil (25843 15568 35443 255000) 0 nil])
([nil nil ((673 . 675) (#("\"" 0 1 (fontified nil)) . -673) (673 . 674)) nil (25843 15568 35432 465000) 0 nil])
([nil nil ((#("\"" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -673) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("\"" 0 1 (face tree-sitter-hl-face:string fontified t)) . 674)) nil (25843 15568 35431 142000) 0 nil])
([nil nil ((673 . 676)) nil (25843 15568 35417 777000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -673) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -674) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constant\.builtin fontified t)) . -675) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 676 (t 25843 15568 40785 961000)) nil (25843 15575 770073 147000) 0 nil])
([nil nil ((673 . 675) (#("\"" 0 1 (fontified nil)) . -673) (673 . 674)) nil (25843 15575 770039 174000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -922) (undo-tree-id433 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -923) (undo-tree-id434 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constant\.builtin fontified t)) . -924) (undo-tree-id435 . -1) 925 (t 25843 15575 777727 310000)) nil (25843 15624 868837 800000) 0 nil])
([nil nil ((922 . 924) (#("\"" 0 1 (fontified nil)) . -922) (922 . 923)) nil (25843 15624 868836 117000) 0 nil])
([nil nil ((1002 . 1003)) nil (25843 15624 868835 727000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1002) (undo-tree-id432 . -1) 1003) nil (25843 15624 868835 386000) 0 nil])
([nil nil ((1037 . 1039)) nil (25843 15624 868834 314000) 0 nil])
([nil nil ((1039 . 1045)) nil (25843 15624 868834 134000) 0 nil])
([nil nil ((1045 . 1060)) nil (25843 15624 868833 853000) 0 nil])
([nil nil ((apply yas--snippet-revive 1056 1079 #s(yas--snippet nil nil nil 18 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 18 nil nil nil nil)) (1056 . 1079) (#("locationsObject.Results" 0 23 (fontified nil)) . 1056) (1056 . 1079) (#("loca" 0 4 (fontified nil)) . 1056) (1056 . 1060) (#("locationsObject.Results" 0 23 (fontified nil)) . -1056) (1056 . 1079) (#("loca" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -1056) (undo-tree-id430 . -4) (undo-tree-id431 . -4) 1060) nil (25843 15624 868833 102000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1081) (1081 . 1082) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1081) (1081 . 1082) (1079 . 1082)) nil (25843 15624 868831 569000) 0 nil])
([nil nil ((1082 . 1084) (1083 . 1084) (#("		" 0 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1082) (1082 . 1084) (1081 . 1083)) nil (25843 15624 868830 958000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1086 . 1087) (#("
" 0 1 (fontified nil)) . -1106) (1084 . 1107) 1083) nil (25843 15624 868830 266000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t) 2 3 (fontified t)) . 1082) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -1) 1083) nil (25843 15624 868829 445000) 0 nil])
([nil nil ((1106 . 1108)) nil (25843 15624 868827 271000) 0 nil])
([nil nil ((1108 . 1113)) nil (25843 15624 868826 830000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1111) (undo-tree-id424 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1112) (undo-tree-id425 . -1) 1113) nil (25843 15624 868826 99000) 0 nil])
([nil nil ((1111 . 1118)) nil (25843 15624 868818 655000) 0 nil])
([nil nil ((930 . 937)) nil (25843 15624 868815 619000) 0 nil])
([nil nil ((731 . 734) (t 25843 15624 877356 198000)) nil (25843 15634 686274 198000) 0 nil])
([nil nil ((734 . 743)) nil (25843 15634 686270 611000) 0 nil])
([nil nil ((739 . 740) (t 25843 15634 788281 514000)) nil (25843 15637 810477 632000) 0 nil])
([nil nil ((872 . 874) (t 25843 15637 818258 693000)) nil (25843 15671 134860 918000) 0 nil])
([nil nil ((874 . 877)) nil (25843 15671 134860 608000) 0 nil])
([nil nil ((apply yas--snippet-revive 874 885 #s(yas--snippet nil nil nil 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 19 nil nil nil nil)) (874 . 885) (#("prevCommand" 0 11 (fontified nil)) . 874) (874 . 885) (#("pre" 0 3 (fontified nil)) . 874) (874 . 877) (#("prevCommand" 0 11 (fontified nil)) . -874) (874 . 885) (#("pre" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -874) (undo-tree-id465 . -3) (undo-tree-id466 . -3) 877) nil (25843 15671 134859 816000) 0 nil])
([nil nil ((885 . 892)) nil (25843 15671 134858 43000) 0 nil])
([nil nil ((apply yas--snippet-revive 888 901 #s(yas--snippet nil nil nil 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 20 nil nil nil nil)) (888 . 901) (#("commandMapUrl" 0 13 (fontified nil)) . 888) (888 . 901) (#("comm" 0 4 (fontified nil)) . 888) (888 . 892) (#("commandMapUrl" 0 13 (fontified nil)) . -888) (888 . 901) (#("comm" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -888) (undo-tree-id463 . -4) (undo-tree-id464 . -4) 892) nil (25843 15671 134857 251000) 0 nil])
([nil nil ((901 . 903)) nil (25843 15671 134855 699000) 0 nil])
([nil nil ((903 . 907)) nil (25843 15671 134855 298000) 0 nil])
([nil nil ((907 . 911)) nil (25843 15671 134854 897000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 916 #s(yas--snippet nil nil nil 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 21 nil nil nil nil)) (903 . 916) (#("commandMapUrl" 0 13 (fontified nil)) . 903) (903 . 916) (#("commandM" 0 8 (fontified nil)) . 903) (903 . 911) (#("commandMapUrl" 0 13 (fontified nil)) . -903) (903 . 916) (#("commandM" 0 8 (face tree-sitter-hl-face:variable fontified t)) . -903) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -7) (undo-tree-id453 . -7) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) 911) nil (25843 15671 134853 815000) 0 nil])
([nil nil ((916 . 919)) nil (25843 15671 134848 285000) 0 nil])
([nil nil ((919 . 923)) nil (25843 15671 134847 804000) 0 nil])
([nil nil ((apply yas--snippet-revive 919 938 #s(yas--snippet nil nil nil 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 22 nil nil nil nil)) (919 . 938) (#("locationObject.Next" 0 19 (fontified nil)) . 919) (919 . 938) (#("loca" 0 4 (fontified nil)) . 919) (919 . 923) (#("locationObject.Next" 0 19 (fontified nil)) . -919) (919 . 938) (#("loca" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -919) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -1) (undo-tree-id439 . -2) (undo-tree-id440 . -3) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) 923) nil (25843 15671 134844 978000) 0 nil])
([nil nil ((1192 . 1194) (t 25843 15671 143008 162000)) nil (25843 15779 185889 56000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -888) (undo-tree-id559 . -1) (#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -889) (undo-tree-id560 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -890) (undo-tree-id561 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -891) (undo-tree-id562 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -892) (undo-tree-id563 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -893) (undo-tree-id564 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -894) (undo-tree-id565 . -1) (#("M" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -895) (undo-tree-id566 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -896) (undo-tree-id567 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -897) (undo-tree-id568 . -1) (#("U" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -898) (undo-tree-id569 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -899) (undo-tree-id570 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -900) (undo-tree-id571 . -1) 901) nil (25843 15779 185887 704000) 0 nil])
([nil nil ((888 . 892)) nil (25843 15779 185881 462000) 0 nil])
([nil nil ((apply yas--snippet-revive 888 902 #s(yas--snippet nil nil nil 23 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 23 nil nil nil nil)) (888 . 902) (#("locationObject" 0 14 (fontified nil)) . 888) (888 . 902) (#("loca" 0 4 (fontified nil)) . 888) (888 . 892) (#("locationObject" 0 14 (fontified nil)) . -888) (888 . 902) (#("loca" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -888) (undo-tree-id557 . -4) (undo-tree-id558 . -4) 892) nil (25843 15779 185880 310000) 0 nil])
([nil nil ((902 . 903)) nil (25843 15779 185878 887000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 911 #s(yas--snippet nil nil nil 24 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 24 nil nil nil nil)) (903 . 911) (#("Previous" 0 8 (fontified nil)) . 903) (903 . 911) (#("Previous" 0 8 (fontified nil)) . -903) (903 . 911)) nil (25843 15779 185878 427000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -902) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("P" 0 1 (face tree-sitter-hl-face:property fontified t)) . -903) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("r" 0 1 (face tree-sitter-hl-face:property fontified t)) . -904) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -905) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -906) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -907) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -908) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -909) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -910) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 911) nil (25843 15779 185875 531000) 0 nil])
([nil nil ((902 . 903)) nil (25843 15779 185839 133000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 911 #s(yas--snippet nil nil nil 25 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 25 nil nil nil nil)) (903 . 911) (#("Previous" 0 8 (fontified nil)) . 903) (903 . 911) (#("Previous" 0 8 (fontified nil)) . -903) (903 . 911)) nil (25843 15779 185836 7000) 0 nil])
([nil nil ((1204 . 1216) (t 25843 15779 287200 101000)) nil (25843 15865 425811 815000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1215) (undo-tree-id627 . -1) (undo-tree-id628 . -1) 1216) nil (25843 15865 425811 244000) 0 nil])
([nil nil ((1215 . 1227)) nil (25843 15865 425803 650000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1226) (undo-tree-id626 . -1) 1227) nil (25843 15865 425803 29000) 0 nil])
([nil nil ((1226 . 1227)) nil (25843 15865 425802 478000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1226) (undo-tree-id625 . -1) 1227) nil (25843 15865 425802 17000) 0 nil])
([nil nil ((1226 . 1227)) nil (25843 15865 425801 345000) 0 nil])
([nil nil ((apply yas--snippet-revive 1218 1238 #s(yas--snippet nil nil nil 26 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 26 nil nil nil nil)) (1218 . 1238) (#("locationsObject.Next" 0 20 (fontified nil)) . 1218) (1218 . 1238) (#("locationO" 0 9 (fontified nil)) . 1218) (1218 . 1227) (#("locationsObject.Next" 0 20 (fontified nil)) . -1218) (1218 . 1238) (#("locationO" 0 9 (face tree-sitter-hl-face:variable fontified t)) . -1218) (undo-tree-id623 . -9) (undo-tree-id624 . -9) 1227) nil (25843 15865 425800 514000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1233) (undo-tree-id618 . -1) (#("N" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1234) (undo-tree-id619 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1235) (undo-tree-id620 . -1) (#("x" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1236) (undo-tree-id621 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1237) (undo-tree-id622 . -1) 1238) nil (25843 15865 425798 200000) 0 nil])
([nil nil ((1233 . 1234)) nil (25843 15865 425796 106000) 0 nil])
([nil nil ((apply yas--snippet-revive 1234 1242 #s(yas--snippet nil nil nil 27 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 27 nil nil nil nil)) (1234 . 1242) (#("Previous" 0 8 (fontified nil)) . 1234) (1234 . 1242) (#("Previous" 0 8 (fontified nil)) . -1234) (1234 . 1242)) nil (25843 15865 425795 585000) 0 nil])
([nil nil ((1242 . 1244)) nil (25843 15865 425794 974000) 0 nil])
([nil nil ((1244 . 1262)) nil (25843 15865 425794 553000) 0 nil])
([nil nil ((apply yas--snippet-revive 1258 1273 #s(yas--snippet nil nil nil 28 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 28 nil nil nil nil)) (1258 . 1273) (#("locationsObject" 0 15 (fontified nil)) . 1258) (1258 . 1273) (#("loca" 0 4 (fontified nil)) . 1258) (1258 . 1262) (#("locationsObject" 0 15 (fontified nil)) . -1258) (1258 . 1273) (#("loca" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -1258) (undo-tree-id616 . -4) (undo-tree-id617 . -4) 1262) nil (25843 15865 425793 892000) 0 nil])
([nil nil ((1273 . 1278)) nil (25843 15865 425792 148000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1244) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1245) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("x" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1246) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1247) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1248) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1249) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1250) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1251) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1252) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1253) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1254) (undo-tree-id615 . -1) 1255) nil (25843 15865 425790 605000) 0 nil])
([nil nil ((1244 . 1250)) nil (25843 15865 425617 241000) 0 nil])
([nil nil ((apply yas--snippet-revive 1244 1257 #s(yas--snippet nil nil nil 29 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 29 nil nil nil nil)) (1244 . 1257) (#("commandMapUrl" 0 13 (fontified nil)) . 1244) (1244 . 1257) (#("comman" 0 6 (fontified nil)) . 1244) (1244 . 1250) (#("commandMapUrl" 0 13 (fontified nil)) . -1244) (1244 . 1257) (#("comman" 0 6 (face tree-sitter-hl-face:variable fontified t)) . -1244) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -2) (undo-tree-id575 . -3) (undo-tree-id576 . -4) (undo-tree-id577 . -5) (undo-tree-id578 . -6) (undo-tree-id579 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) 1250) nil (25843 15865 425614 375000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -567) (undo-tree-id633 . -1) (#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -568) (undo-tree-id634 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -569) (undo-tree-id635 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -570) (undo-tree-id636 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -571) (undo-tree-id637 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -572) (undo-tree-id638 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -573) (undo-tree-id639 . -1) (#("M" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -574) (undo-tree-id640 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -575) (undo-tree-id641 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -576) (undo-tree-id642 . -1) (#("U" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -577) (undo-tree-id643 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -578) (undo-tree-id644 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -579) (undo-tree-id645 . -1) 580 (t 25843 15865 433561 97000)) nil (25843 15927 127748 462000) 0 nil])
([nil nil ((567 . 580)) nil (25843 15927 127743 653000) 0 nil])
([nil nil ((567 . 572) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 567) (569 . 570) (#("mm" 0 1 (face tree-sitter-hl-face:variable fontified t) 1 2 (face tree-sitter-hl-face:variable fontified t)) . 569) (572 . 575) (#("dMap" 0 1 (face tree-sitter-hl-face:variable fontified t) 1 2 (face tree-sitter-hl-face:variable fontified t) 2 3 (face tree-sitter-hl-face:variable fontified t) 3 4 (face tree-sitter-hl-face:variable fontified t)) . 573) 578 (656 . 661) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 656) (658 . 659) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 658) (661 . 664) (#("dMap" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 662) 656 (790 . 795) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 790) (792 . 793) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 792) (795 . 798) (#("dMap" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 796) 790 (913 . 918) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 913) (915 . 916) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 915) (918 . 921) (#("dMap" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 919) 913 (1244 . 1249) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1244) (1246 . 1247) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 1246) (1249 . 1252) (#("dMap" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 1250) 1244 (t 25843 15865 433561 97000)) nil (25843 15927 127741 910000) 0 nil])
([nil nil ((548 . 549) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 548) (550 . 551) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 550) (undo-tree-id629 . -2) (undo-tree-id630 . -1) (553 . 556) (554 . 558) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 554) (undo-tree-id631 . -1) 550 (884 . 885) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 884) (886 . 887) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 886) (889 . 892) (890 . 894) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 890) 880 (1008 . 1009) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1008) (1010 . 1011) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 1010) (1013 . 1016) (1014 . 1018) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1014) 1004 (1133 . 1134) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1133) (1135 . 1136) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 1135) (1138 . 1141) (1139 . 1143) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1139) 1129 (1216 . 1217) (#("C" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1216) (1218 . 1219) (#("mm" 0 2 (face tree-sitter-hl-face:variable fontified t)) . 1218) (1221 . 1224) (1222 . 1226) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1222) (undo-tree-id632 . -1) 1212) nil (25843 15927 127736 439000) 0 nil])
([nil nil ((1625 . 1628) (t 25843 15927 137105 551000)) nil (25843 16067 458908 29000) 0 nil])
([nil nil ((1629 . 1632) (1628 . 1630) (#("\"" 0 1 (fontified nil)) . -1628) (1628 . 1629)) nil (25843 16067 458907 668000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1636) (1636 . 1637) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -1636) (1636 . 1637) (1633 . 1637)) nil (25843 16067 458907 17000) 0 nil])
([nil nil ((1637 . 1640) (1638 . 1640) (#("			" 0 3 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 1637) (1637 . 1640) (1636 . 1638)) nil (25843 16067 458906 476000) 0 nil])
([nil nil ((1640 . 1641)) nil (25843 16067 458906 145000) 0 nil])
([nil nil ((1647 . 1650) (1646 . 1648) (#("\"" 0 1 (fontified nil)) . -1646) (1641 . 1647)) nil (25843 16067 458905 574000) 0 nil])
([nil nil ((1651 . 1652)) nil (25843 16067 458905 283000) 0 nil])
([nil nil ((1652 . 1656)) nil (25843 16067 458905 33000) 0 nil])
([nil nil ((1656 . 1659)) nil (25843 16067 458904 612000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1669 1699 nil nil nil t nil)) nil 30 nil #s(yas--field 1 1669 1699 nil nil nil t nil) nil nil)) (1656 . 1676) (#("Description: ${1:string}," 0 25 (fontified nil)) . 1656) (1656 . 1681) (#("Des" 0 3 (fontified nil)) . 1656) (1656 . 1659) (#("Description" 0 11 (fontified nil)) . -1656) (1656 . 1667) (#("Des" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1656) (undo-tree-id676 . -3) (undo-tree-id677 . -3) 1659) nil (25843 16067 458903 670000) 0 nil])
([nil nil ((1669 . 1671) (#("\"" 0 1 (fontified nil)) . -1669) (#("string" 0 6 (face tree-sitter-hl-face:variable fontified nil)) . 1670) (1669 . 1670)) nil (25843 16067 458901 847000) 0 nil])
([nil nil ((1670 . 1684)) nil (25843 16067 458901 476000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1679) (undo-tree-id671 . -1) (#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1680) (undo-tree-id672 . -1) (#("x" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1681) (undo-tree-id673 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1682) (undo-tree-id674 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -1683) (undo-tree-id675 . -1) 1684) nil (25843 16067 458900 735000) 0 nil])
([nil nil ((1679 . 1688)) nil (25843 16067 458898 621000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1687) (undo-tree-id670 . -1) 1688) nil (25843 16067 458898 330000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1679) (undo-tree-id662 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1680) (undo-tree-id663 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1681) (undo-tree-id664 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1682) (undo-tree-id665 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1683) (undo-tree-id666 . -1) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1684) (undo-tree-id667 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1685) (undo-tree-id668 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1686) (undo-tree-id669 . -1) 1687) nil (25843 16067 458896 717000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1680) (1680 . 1681) (#(")" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -1680) (1680 . 1681) (1679 . 1681)) nil (25843 16067 458893 722000) 0 nil])
([nil nil ((1680 . 1685)) nil (25843 16067 458893 191000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -1684) (undo-tree-id661 . -1) 1685) nil (25843 16067 458892 630000) 0 nil])
([nil nil ((1685 . 1686)) nil (25843 16067 458891 908000) 0 nil])
([nil nil ((#("(" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1679) (undo-tree-id660 . -1) 1680) nil (25843 16067 458891 518000) 0 nil])
([nil nil ((1675 . 1676)) nil (25843 16067 458890 876000) 0 nil])
([nil nil ((1686 . 1691)) nil (25843 16067 458890 696000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1690) (undo-tree-id659 . -1) 1691) nil (25843 16067 458890 235000) 0 nil])
([nil nil ((1690 . 1698)) nil (25843 16067 458889 624000) 0 nil])
([nil nil ((1698 . 1699)) nil (25843 16067 458889 283000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1698) (undo-tree-id658 . -1) 1699) nil (25843 16067 458888 903000) 0 nil])
([nil nil ((apply yas--snippet-revive 1656 1700 #s(yas--snippet nil (#s(yas--field 1 1669 1699 nil nil nil t nil)) nil 30 nil #s(yas--field 1 1669 1699 nil nil nil t nil) nil nil))) nil (25843 16067 458888 292000) 0 nil])
([nil nil ((1700 . 1704)) nil (25843 16067 458888 51000) 0 nil])
([nil nil ((1704 . 1708)) nil (25843 16067 458887 801000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1714 1724 nil nil nil t nil)) nil 31 nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil nil)) (1704 . 1727) (#("Callback: ${1:func() error}," 0 28 (fontified nil)) . 1704) (1704 . 1732) (#("Call" 0 4 (fontified nil)) . 1704) (1704 . 1708) (#("Callback" 0 8 (fontified nil)) . -1704) (1704 . 1712) (#("Call" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -1704) (undo-tree-id656 . -4) (undo-tree-id657 . -4) 1708) nil (25843 16067 458887 360000) 0 nil])
([nil nil ((1715 . 1720) (#("func() error" 0 4 (face tree-sitter-hl-face:keyword fontified nil) 4 5 (face (rainbow-delimiters-depth-4-face) fontified nil) 5 6 (face (rainbow-delimiters-depth-4-face) fontified nil) 6 7 (fontified nil) 7 12 (face tree-sitter-hl-face:type fontified nil)) . 1715) (1714 . 1715)) nil (25843 16067 458885 587000) 0 nil])
([nil nil ((apply yas--snippet-revive 1714 1724 #s(yas--snippet nil nil nil 32 nil nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 32 nil nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil)) (1714 . 1724) (#("commandMap" 0 10 (fontified nil)) . 1714) (1714 . 1724) (#("comman" 0 6 (fontified nil)) . 1714) (1714 . 1720) (#("commandMap" 0 10 (fontified nil)) . -1714) (1714 . 1724) (#("comman" 0 6 (face tree-sitter-hl-face:variable fontified t)) . -1714) (undo-tree-id654 . -6) (undo-tree-id655 . -6) 1720) nil (25843 16067 458884 755000) 0 nil])
([nil nil ((apply yas--snippet-revive 1704 1725 #s(yas--snippet nil (#s(yas--field 1 1714 1724 nil nil nil t nil)) nil 31 nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil nil))) nil (25843 16067 458883 162000) 0 nil])
([nil nil ((1729 . 1730)) nil (25843 16067 458882 731000) 0 nil])
([nil nil ((1730 . 1733)) nil (25843 16067 458882 120000) 0 nil])
([nil nil ((1734 . 1738) (1733 . 1735) (#("\"" 0 1 (fontified nil)) . -1733) (1733 . 1734)) nil (25843 16067 458881 459000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1742) (1742 . 1743) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -1742) (1742 . 1743) (1739 . 1743)) nil (25843 16067 458880 557000) 0 nil])
([nil nil ((1743 . 1746) (1744 . 1746) (#("			" 0 3 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 1743) (1743 . 1746) (1742 . 1744)) nil (25843 16067 458879 806000) 0 nil])
([nil nil ((1746 . 1749)) nil (25843 16067 458879 335000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1752 1758 nil nil nil t nil)) nil 33 nil #s(yas--field 1 1752 1758 nil nil nil t nil) nil nil)) (1746 . 1759) (#("Name: ${1:string}," 0 18 (fontified nil)) . 1746) (1746 . 1764) (#("Nam" 0 3 (fontified nil)) . 1746) (1746 . 1749) (#("Name" 0 4 (fontified nil)) . -1746) (1746 . 1750) (#("Nam" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1746) (undo-tree-id652 . -3) (undo-tree-id653 . -3) 1749) nil (25843 16067 458878 443000) 0 nil])
([nil nil ((1753 . 1757) (1752 . 1754) (#("\"" 0 1 (fontified nil)) . -1752) (#("string" 0 6 (face tree-sitter-hl-face:variable fontified nil)) . 1753) (1752 . 1753)) nil (25843 16067 458875 688000) 0 nil])
([nil nil ((apply yas--snippet-revive 1746 1759 #s(yas--snippet nil (#s(yas--field 1 1752 1758 nil nil nil t nil)) nil 33 nil #s(yas--field 1 1752 1758 nil nil nil t nil) nil nil))) nil (25843 16067 458875 57000) 0 nil])
([nil nil ((1759 . 1763)) nil (25843 16067 458874 526000) 0 nil])
([nil nil ((1763 . 1766)) nil (25843 16067 458873 784000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1776 1808 nil nil nil t nil)) nil 34 nil #s(yas--field 1 1776 1808 nil nil nil t nil) nil nil)) (1763 . 1783) (#("Description: ${1:string}," 0 25 (fontified nil)) . 1763) (1763 . 1788) (#("Des" 0 3 (fontified nil)) . 1763) (1763 . 1766) (#("Description" 0 11 (fontified nil)) . -1763) (1763 . 1774) (#("Des" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1763) (undo-tree-id650 . -3) (undo-tree-id651 . -3) 1766) nil (25843 16067 458872 522000) 0 nil])
([nil nil ((1777 . 1795) (1776 . 1778) (#("\"" 0 1 (fontified nil)) . -1776) (#("string" 0 6 (face tree-sitter-hl-face:variable fontified nil)) . 1777) (1776 . 1777)) nil (25843 16067 458869 967000) 0 nil])
([nil nil ((1795 . 1807)) nil (25843 16067 458868 615000) 0 nil])
([nil nil ((apply yas--snippet-revive 1763 1809 #s(yas--snippet nil (#s(yas--field 1 1776 1808 nil nil nil t nil)) nil 34 nil #s(yas--field 1 1776 1808 nil nil nil t nil) nil nil))) nil (25843 16067 458867 643000) 0 nil])
([nil nil ((1809 . 1813)) nil (25843 16067 458867 403000) 0 nil])
([nil nil ((1813 . 1816)) nil (25843 16067 458866 691000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1823 1834 nil nil nil t nil)) nil 35 nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil nil)) (1813 . 1836) (#("Callback: ${1:func() error}," 0 28 (fontified nil)) . 1813) (1813 . 1841) (#("Cal" 0 3 (fontified nil)) . 1813) (1813 . 1816) (#("Callback" 0 8 (fontified nil)) . -1813) (1813 . 1821) (#("Cal" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1813) (undo-tree-id648 . -3) (undo-tree-id649 . -3) 1816) nil (25843 16067 458865 900000) 0 nil])
([nil nil ((1824 . 1828) (#("func() error" 0 4 (face tree-sitter-hl-face:keyword fontified nil) 4 5 (face (rainbow-delimiters-depth-4-face) fontified nil) 5 6 (face (rainbow-delimiters-depth-4-face) fontified nil) 6 7 (fontified nil) 7 12 (face tree-sitter-hl-face:type fontified nil)) . 1824) (1823 . 1824)) nil (25843 16067 458862 974000) 0 nil])
([nil nil ((apply yas--snippet-revive 1823 1834 #s(yas--snippet nil nil nil 36 nil nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 36 nil nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil)) (1823 . 1834) (#("commandMapB" 0 11 (fontified nil)) . 1823) (1823 . 1834) (#("comma" 0 5 (fontified nil)) . 1823) (1823 . 1828) (#("commandMapB" 0 11 (fontified nil)) . -1823) (1823 . 1834) (#("comma" 0 5 (face tree-sitter-hl-face:variable fontified t)) . -1823) (undo-tree-id646 . -5) (undo-tree-id647 . -5) 1828) nil (25843 16067 458861 511000) 0 nil])
([nil nil ((apply yas--snippet-revive 1813 1835 #s(yas--snippet nil (#s(yas--field 1 1823 1834 nil nil nil t nil)) nil 35 nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil nil))) nil (25843 16067 458852 124000) 0 nil])
([nil nil ((1839 . 1840)) nil (25843 16067 458848 978000) 0 nil])
([nil nil ((1009 . 1011) (t 25843 16067 560074 439000)) nil (25843 16752 21851 881000) 0 nil])
([nil nil ((1011 . 1019)) nil (25843 16752 21851 430000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1023 1031 nil nil nil t nil)) nil 37 nil #s(yas--field 1 1023 1031 nil nil nil t nil) nil nil)) (1015 . 1032) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 1015) (1015 . 1037) (#("Prin" 0 4 (fontified nil)) . 1015) (1015 . 1019) (#("Println" 0 7 (fontified nil)) . -1015) (1015 . 1022) (#("Prin" 0 4 (face tree-sitter-hl-face:property fontified t)) . -1015) (undo-tree-id694 . -4) (undo-tree-id695 . -4) 1019) nil (25843 16752 21850 699000) 0 nil])
([nil nil ((1023 . 1025) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1023) (#("a ...any" 0 1 (face tree-sitter-hl-face:variable fontified nil) 1 2 (fontified nil) 2 5 (face tree-sitter-hl-face:operator fontified nil) 5 8 (face tree-sitter-hl-face:variable fontified nil)) . 1024) (1023 . 1024)) nil (25843 16752 21848 465000) 0 nil])
([nil nil ((1024 . 1027)) nil (25843 16752 21847 954000) 0 nil])
([nil nil ((#("m" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1024) (undo-tree-id691 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1025) (undo-tree-id692 . -1) (#("p" 0 1 (face tree-sitter-hl-face:string fontified t)) . -1026) (undo-tree-id693 . -1) 1027) nil (25843 16752 21847 323000) 0 nil])
([nil nil ((1024 . 1030)) nil (25843 16752 21845 850000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:string fontified nil)) . 1029) (undo-tree-id690 . -1) (1030 . 1031)) nil (25843 16752 21845 419000) 0 nil])
([nil nil ((apply yas--snippet-revive 1015 1032 #s(yas--snippet nil (#s(yas--field 1 1023 1031 nil nil nil t nil)) nil 37 nil #s(yas--field 1 1023 1031 nil nil nil t nil) nil nil))) nil (25843 16752 21844 638000) 0 nil])
([nil nil ((1010 . 1011)) nil (25843 16752 21844 297000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 1010)) nil (25843 16752 21843 916000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . 1029) (1029 . 1030) (#("\"" 0 1 (fontified nil)) . -1029) (1029 . 1030)) nil (25843 16752 21843 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1029) (undo-tree-id689 . -1) 1030) nil (25843 16752 21842 574000) 0 nil])
([nil nil ((1029 . 1030)) nil (25843 16752 21841 842000) 0 nil])
([nil nil ((1031 . 1033)) nil (25843 16752 21841 502000) 0 nil])
([nil nil ((1033 . 1037)) nil (25843 16752 21840 810000) 0 nil])
([nil nil ((apply yas--snippet-revive 1033 1049 #s(yas--snippet nil nil nil 38 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 38 nil nil nil nil)) (1033 . 1049) (#("prevLocationsUrl" 0 16 (fontified nil)) . 1033) (1033 . 1049) (#("prec" 0 4 (fontified nil)) . 1033) (1033 . 1037) (#("prevLocationsUrl" 0 16 (fontified nil)) . -1033) (1033 . 1049) (#("prec" 0 4 (face tree-sitter-hl-face:variable fontified t)) . -1033) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -2) (undo-tree-id681 . -3) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) 1037) nil (25843 16752 21838 346000) 0 nil])
([nil nil ((1053 . 1055) (#("\"" 0 1 (fontified nil)) . -1053) (1049 . 1054) (t 25843 16752 125113 456000)) nil (25843 16789 526121 385000) 0 nil])
([nil nil ((1086 . 1089) (t 25843 16789 533844 144000)) nil (25843 17074 268025 746000) 0 nil])
([nil nil ((1089 . 1091)) nil (25843 17074 268025 315000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1089) (undo-tree-id699 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1090) (undo-tree-id700 . -1) 1091) nil (25843 17074 268024 644000) 0 nil])
([nil nil ((1089 . 1093)) nil (25843 17074 268023 81000) 0 nil])
([nil nil ((1093 . 1094)) nil (25843 17074 268022 440000) 0 nil])
([nil nil ((1094 . 1095)) nil (25843 17074 268021 789000) 0 nil])
([nil nil ((1095 . 1096)) nil (25843 17074 268021 157000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1101 1117 nil nil nil t nil)) nil 39 nil #s(yas--field 1 1101 1117 nil nil nil t nil) nil nil)) (1093 . 1110) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 1093) (1093 . 1115) (#("Pri" 0 3 (fontified nil)) . 1093) (1093 . 1096) (#("Println" 0 7 (fontified nil)) . -1093) (1093 . 1100) (#("Pri" 0 3 (face tree-sitter-hl-face:property fontified t)) . -1093) (undo-tree-id697 . -3) (undo-tree-id698 . -3) 1096) nil (25843 17074 268019 955000) 0 nil])
([nil nil ((1102 . 1116) (1101 . 1103) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -1101) (#("a ...any" 0 1 (face tree-sitter-hl-face:variable fontified nil) 1 2 (fontified nil) 2 5 (face tree-sitter-hl-face:operator fontified nil) 5 8 (face tree-sitter-hl-face:variable fontified nil)) . 1102) (1101 . 1102)) nil (25843 17074 268016 238000) 0 nil])
([nil nil ((1116 . 1117)) nil (25843 17074 268015 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1116) (undo-tree-id696 . -1) 1117) nil (25843 17074 268014 555000) 0 nil])
([nil nil ((apply yas--snippet-revive 1093 1118 #s(yas--snippet nil (#s(yas--field 1 1101 1117 nil nil nil t nil)) nil 39 nil #s(yas--field 1 1101 1117 nil nil nil t nil) nil nil))) nil (25843 17074 268004 95000) 0 nil])
([nil nil ((#("		fmt.Println(\"Error happened\")
" 0 2 (fontified t) 2 5 (face tree-sitter-hl-face:variable fontified t) 5 6 (fontified t) 6 13 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t) 14 30 (face tree-sitter-hl-face:string fontified t) 30 31 (face (rainbow-delimiters-depth-3-face) fontified t) 31 32 (fontified t)) . 1087) (undo-tree-id701 . 1) (undo-tree-id702 . -31) (undo-tree-id703 . -14) (undo-tree-id704 . 3) (undo-tree-id705 . -30) (undo-tree-id706 . -30) (undo-tree-id707 . -30) (undo-tree-id708 . -30) (undo-tree-id709 . -30) (undo-tree-id710 . -30) (undo-tree-id711 . -30) (undo-tree-id712 . -30) (undo-tree-id713 . -30) (undo-tree-id714 . 2) (undo-tree-id715 . -31) (undo-tree-id716 . 19) (undo-tree-id717 . -14) (undo-tree-id718 . -30) (undo-tree-id719 . -30) (undo-tree-id720 . -30) (undo-tree-id721 . -32) 1117 (t 25843 17074 277797 254000)) nil (25843 17090 797208 667000) 0 nil])
([nil nil ((756 . 758) (t 25843 17090 805678 575000)) nil (25846 21104 122624 972000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -761) (761 . 762) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -761) (761 . 762) (758 . 762)) nil (25846 21104 122623 499000) 0 nil])
([nil nil ((761 . 762)) nil (25846 21104 122622 207000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -761) (undo-tree-id106 . -1) 762) nil (25846 21104 122621 375000) 0 nil])
([nil nil ((161 . 163)) nil (25846 21104 122619 973000) 0 nil])
([nil nil ((163 . 166)) nil (25846 21104 122619 522000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -163) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -164) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -165) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 166) nil (25846 21104 122618 29000) 0 nil])
([nil nil ((163 . 171)) nil (25846 21104 122614 432000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -168) (undo-tree-id97 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -169) (undo-tree-id98 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -170) (undo-tree-id99 . -1) 171) nil (25846 21104 122613 110000) 0 nil])
([nil nil ((168 . 175)) nil (25846 21104 122537 151000) 0 nil])
([nil nil ((65 . 67)) nil (25846 21104 122536 309000) 0 nil])
([nil nil ((67 . 68)) nil (25846 21104 122536 19000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -67) (undo-tree-id96 . -1) 68) nil (25846 21104 122535 518000) 0 nil])
([nil nil ((68 . 73) (67 . 69) (#("\"" 0 1 (fontified nil)) . -67) (67 . 68)) nil (25846 21104 122534 236000) 0 nil])
([nil nil ((68 . 78) (#("GoPok" 0 5 (fontified nil)) . 68) (68 . 73) (#("GoPokedex/" 0 10 (fontified nil)) . -68) (68 . 78) (#("GoPok" 0 5 (fontified t face tree-sitter-hl-face:string)) . -68) (undo-tree-id94 . -5) (undo-tree-id95 . -5) 73) nil (25846 21104 122532 993000) 0 nil])
([nil nil ((78 . 82)) nil (25846 21104 122531 390000) 0 nil])
([nil nil ((78 . 87) (#("poke" 0 4 (fontified nil)) . 78) (78 . 82) (#("pokecache" 0 9 (fontified nil)) . -78) (78 . 87) (#("poke" 0 4 (fontified t face tree-sitter-hl-face:string)) . -78) (undo-tree-id92 . -4) (undo-tree-id93 . -4) 82) nil (25846 21104 122530 198000) 0 nil])
([nil nil ((198 . 202)) nil (25846 21104 122528 595000) 0 nil])
([nil nil ((198 . 207) (#("poke" 0 4 (fontified nil)) . 198) (198 . 202) (#("pokecache" 0 9 (fontified nil)) . -198) (198 . 207) (#("poke" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -198) (undo-tree-id90 . -4) (undo-tree-id91 . -4) 202) nil (25846 21104 122527 583000) 0 nil])
([nil nil ((207 . 208)) nil (25846 21104 122526 31000) 0 nil])
([nil nil ((208 . 245) (#("NewCache" 0 8 (fontified nil)) . -208) (208 . 216)) nil (25846 21104 122525 389000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -224) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -225) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -226) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("a" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -227) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("l" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -228) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified nil)) . -229) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("t" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -230) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("i" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -231) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -232) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -233) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("." 0 1 (fontified t)) . -234) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("D" 0 1 (fontified t face tree-sitter-hl-face:type)) . -235) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:type)) . -236) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:type)) . -237) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:type)) . -238) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -239) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:type)) . -240) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:type)) . -241) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:type)) . -242) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -243) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . 1) (undo-tree-id85 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -244) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . 1) (undo-tree-id89 . -1) 245) nil (25846 21104 122521 272000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face tree-sitter-hl-face:property)) . -211) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -212) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:property)) . -213) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:property)) . -214) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -215) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -216) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("$" 0 1 (fontified t)) . -217) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -218) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("1" 0 1 (fontified t face tree-sitter-hl-face:number)) . -219) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(":" 0 1 (fontified t)) . -220) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -221) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -222) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -223) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 224) nil (25846 21104 122488 462000) 0 nil])
([nil nil ((211 . 212)) nil (25846 21104 122475 689000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 217 221 nil nil nil t nil)) nil 7 nil #s(yas--field 1 217 221 nil nil nil t nil) nil nil)) (208 . 240) (#("NewCache(${1:interval time.Duration})" 0 37 (fontified nil)) . 208) (208 . 245) (#("NewC" 0 4 (fontified nil)) . 208) (208 . 212) (#("NewCache" 0 8 (fontified nil)) . -208) (208 . 216) (#("NewC" 0 4 (fontified t face tree-sitter-hl-face:property)) . -208) (undo-tree-id6 . -4) (undo-tree-id7 . -4) 212) nil (25846 21104 122474 466000) 0 nil])
([nil nil ((218 . 221) (#("interval time.Duration" 0 8 (fontified nil face tree-sitter-hl-face:variable) 8 9 (fontified nil) 9 13 (fontified nil face tree-sitter-hl-face:variable) 13 14 (fontified nil) 14 22 (fontified nil face tree-sitter-hl-face:property)) . 218) (217 . 218)) nil (25846 21104 122472 593000) 0 nil])
([nil nil ((apply yas--snippet-revive 208 222 #s(yas--snippet nil (#s(yas--field 1 217 221 nil nil nil t nil)) nil 7 nil #s(yas--field 1 217 221 nil nil nil t nil) nil nil))) nil (25846 21104 122472 162000) 0 nil])
([nil nil ((88 . 90)) nil (25846 21104 122471 992000) 0 nil])
([nil nil ((90 . 91)) nil (25846 21104 122471 541000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -90) (undo-tree-id5 . -1) 91) nil (25846 21104 122470 780000) 0 nil])
([nil nil ((91 . 95) (90 . 92) (#("\"" 0 1 (fontified nil)) . -90) (90 . 91)) nil (25846 21104 122469 257000) 0 nil])
([nil nil ((229 . 230)) nil (25846 21104 122468 435000) 0 nil])
([nil nil ((230 . 235)) nil (25846 21104 122467 764000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -232) (undo-tree-id2 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -233) (undo-tree-id3 . -1) (#("." 0 1 (fontified t)) . -234) (undo-tree-id4 . -1) 235) nil (25846 21104 122467 153000) 0 nil])
([nil nil ((232 . 239)) nil (25846 21104 122463 907000) 0 nil])
([nil nil ((apply yas--snippet-revive 236 242 #s(yas--snippet nil nil nil 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 8 nil nil nil nil)) (236 . 242) (#("Second" 0 6 (fontified nil)) . 236) (236 . 242) (#("Sec" 0 3 (fontified nil)) . 236) (236 . 239) (#("Second" 0 6 (fontified nil)) . -236) (236 . 242) (#("Sec" 0 3 (fontified t face tree-sitter-hl-face:property)) . -236) (undo-tree-id0 . -3) (undo-tree-id1 . -3) 239) nil (25846 21104 122458 918000) 0 nil])
([nil nil ((843 . 846) (t 25846 21104 226634 285000)) nil (25846 21208 248865 266000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -845) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 846) nil (25846 21208 248864 435000) 0 nil])
([nil nil ((845 . 846)) nil (25846 21208 248863 22000) 0 nil])
([nil nil ((apply yas--snippet-revive 843 848 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (843 . 848) (#("cache" 0 5 (fontified nil)) . 843) (843 . 848) (#("cac" 0 3 (fontified nil)) . 843) (843 . 846) (#("cache" 0 5 (fontified nil)) . -843) (843 . 848) (#("cac" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -843) (undo-tree-id153 . -3) (undo-tree-id154 . -3) 846) nil (25846 21208 248862 30000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -843) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -844) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -845) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -846) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -847) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 848) nil (25846 21208 248858 664000) 0 nil])
([nil nil ((843 . 846)) nil (25846 21208 248789 926000) 0 nil])
([nil nil ((apply yas--snippet-revive 843 848 #s(yas--snippet nil nil nil 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 10 nil nil nil nil)) (843 . 848) (#("cache" 0 5 (fontified nil)) . 843) (843 . 848) (#("cac" 0 3 (fontified nil)) . 843) (843 . 846) (#("cache" 0 5 (fontified nil)) . -843) (843 . 848) (#("cac" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -843) (undo-tree-id141 . -3) (undo-tree-id142 . -3) 846) nil (25846 21208 248787 902000) 0 nil])
([nil nil ((848 . 849)) nil (25846 21208 248785 999000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 853 868 nil nil nil t nil)) nil 11 nil #s(yas--field 1 853 868 nil nil nil t nil) nil nil)) (849 . 864) (#("Get(${1:key string})" 0 20 (fontified nil)) . 849) (849 . 869) (#("Get" 0 3 (fontified nil)) . -849) (849 . 852)) nil (25846 21208 248785 227000) 0 nil])
([nil nil ((854 . 856) (#("key string" 0 3 (fontified nil face tree-sitter-hl-face:variable) 3 4 (fontified nil) 4 10 (fontified nil face tree-sitter-hl-face:variable)) . 854) (853 . 854)) nil (25846 21208 248784 646000) 0 nil])
([nil nil ((apply yas--snippet-revive 853 868 #s(yas--snippet nil nil nil 12 nil nil #s(yas--field 1 853 868 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 12 nil nil #s(yas--field 1 853 868 nil nil nil t nil) nil)) (853 . 868) (#("nextLocationUrl" 0 15 (fontified nil)) . 853) (853 . 868) (#("nex" 0 3 (fontified nil)) . 853) (853 . 856) (#("nextLocationUrl" 0 15 (fontified nil)) . -853) (853 . 868) (#("nex" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -853) (undo-tree-id139 . -3) (undo-tree-id140 . -3) 856) nil (25846 21208 248783 454000) 0 nil])
([nil nil ((868 . 870)) nil (25846 21208 248781 220000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -868) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("	" 0 1 (fontified t)) . -869) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 870) nil (25846 21208 248780 308000) 0 nil])
([nil nil ((apply yas--snippet-revive 849 869 #s(yas--snippet nil (#s(yas--field 1 853 868 nil nil nil t nil)) nil 11 nil #s(yas--field 1 853 868 nil nil nil t nil) nil nil))) nil (25846 21208 248777 313000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -872) (872 . 873) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -872) (872 . 873) (870 . 873)) nil (25846 21208 248776 461000) 0 nil])
([nil nil ((873 . 875) (874 . 875) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 873) (873 . 875) (872 . 874)) nil (25846 21208 248775 148000) 0 nil])
([nil nil ((875 . 882)) nil (25846 21208 248773 255000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -875) (undo-tree-id128 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -876) (undo-tree-id129 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -877) (undo-tree-id130 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -878) (undo-tree-id131 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -879) (undo-tree-id132 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -880) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -881) (undo-tree-id134 . -1) 882) nil (25846 21208 248772 113000) 0 nil])
([nil nil ((875 . 882)) nil (25846 21208 248767 344000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -881) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 882) nil (25846 21208 248765 991000) 0 nil])
([nil nil ((881 . 884)) nil (25846 21208 248763 968000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 873 873 nil nil nil t nil)) nil 13 nil #s(yas--field 1 873 873 nil nil nil t nil) nil nil)) (879 . 896) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 879) (879 . 901) (#("Print" 0 5 (fontified nil)) . 879) (879 . 884) (#("Println" 0 7 (fontified nil)) . -879) (879 . 886) (#("Print" 0 5 (fontified t face tree-sitter-hl-face:property)) . -879) (undo-tree-id124 . -5) (undo-tree-id125 . -5) 884) nil (25846 21208 248762 405000) 0 nil])
([nil nil ((888 . 893) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 888) (887 . 888)) nil (25846 21208 248759 259000) 0 nil])
([nil nil ((apply yas--snippet-revive 873 873 #s(yas--snippet nil (#s(yas--field 1 873 873 nil nil nil t nil)) nil 13 nil #s(yas--field 1 873 873 nil nil nil t nil) nil nil)) (#("		fmt.Println(l/name)
" 0 2 (fontified t) 2 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t) 6 13 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 13 14 (fontified t face (rainbow-delimiters-depth-3-face)) 14 15 (fontified t face tree-sitter-hl-face:variable) 15 16 (fontified t face tree-sitter-hl-face:operator) 16 20 (fontified t face tree-sitter-hl-face:variable) 20 21 (fontified t face (rainbow-delimiters-depth-3-face)) 21 22 (fontified t)) . 873) (undo-tree-id112 . 2) (undo-tree-id113 . -19) (undo-tree-id114 . -19) (undo-tree-id115 . -21) (undo-tree-id116 . 9) (undo-tree-id117 . -14) (undo-tree-id118 . 2) (undo-tree-id119 . -21) (undo-tree-id120 . -14) (undo-tree-id121 . 2) (undo-tree-id122 . -14) (undo-tree-id123 . 2) 892) nil (25846 21208 248757 556000) 0 nil])
([nil nil ((#("var locationObject" 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t) 4 18 (fontified t face tree-sitter-hl-face:variable)) . 877) (undo-tree-id108 . -17) (undo-tree-id109 . -17) (undo-tree-id110 . -17) (undo-tree-id111 . -17)) nil (25846 21208 248748 739000) 0 nil])
([nil nil ((838 . 840)) nil (25846 21208 248745 2000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -839) (undo-tree-id107 . -1) 840) nil (25846 21208 248743 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 856 . 857) (nil fontified nil 839 . 857) (839 . 857)) nil (25846 21208 248731 357000) 0 nil])
([nil nil (856) nil (25846 21208 248730 275000) 0 nil])
([nil nil ((839 . 841)) nil (25846 21208 248723 833000) 0 nil])
([nil nil ((859 . 860) (t 25846 21208 258251 992000)) nil (25846 21572 340437 557000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -859) (undo-tree-id688 . -1) 860) nil (25846 21572 340436 174000) 0 nil])
([nil nil ((859 . 861)) nil (25846 21572 340434 872000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face tree-sitter-hl-face:type)) . -860) (undo-tree-id687 . -1) 861) nil (25846 21572 340434 311000) 0 nil])
([nil nil ((860 . 868)) nil (25846 21572 340433 399000) 0 nil])
([nil nil ((apply yas--snippet-revive 860 890 #s(yas--snippet nil nil nil 14 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 14 nil nil nil nil)) (860 . 890) (#("service.LocationResponseObject" 0 30 (fontified nil)) . 860) (860 . 890) (#("location" 0 8 (fontified nil)) . 860) (860 . 868) (#("service.LocationResponseObject" 0 30 (fontified nil)) . -860) (860 . 890) (#("location" 0 8 (fontified t face tree-sitter-hl-face:type)) . -860) (undo-tree-id685 . -8) (undo-tree-id686 . -8) 868) nil (25846 21572 340432 96000) 0 nil])
([nil nil ((924 . 927)) nil (25846 21572 340429 922000) 0 nil])
([nil nil ((927 . 931)) nil (25846 21572 340429 61000) 0 nil])
([nil nil ((apply yas--snippet-revive 927 941 #s(yas--snippet nil nil nil 15 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 15 nil nil nil nil)) (927 . 941) (#("locationObject" 0 14 (fontified nil)) . 927) (927 . 941) (#("loca" 0 4 (fontified nil)) . 927) (927 . 931) (#("locationObject" 0 14 (fontified nil)) . -927) (927 . 941) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -927) (undo-tree-id683 . -4) (undo-tree-id684 . -4) 931) nil (25846 21572 340428 99000) 0 nil])
([nil nil ((941 . 942)) nil (25846 21572 340424 742000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -941) (undo-tree-id681 . -1) (undo-tree-id682 . -1) 942) nil (25846 21572 340423 430000) 0 nil])
([nil nil ((941 . 950)) nil (25846 21572 340420 855000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -944) (undo-tree-id675 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -945) (undo-tree-id676 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -946) (undo-tree-id677 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -947) (undo-tree-id678 . -1) (#("g" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -948) (undo-tree-id679 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -949) (undo-tree-id680 . -1) 950) nil (25846 21572 340419 833000) 0 nil])
([nil nil ((944 . 953)) nil (25846 21572 340417 238000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 954 954 nil nil nil t nil)) nil 16 nil #s(yas--field 1 954 954 nil nil nil t nil) nil nil)) (950 . 965) (#("Get(${1:key string})" 0 20 (fontified nil)) . 950) (950 . 970) (#("Get" 0 3 (fontified nil)) . 950) (950 . 953) (#("Get" 0 3 (fontified t face tree-sitter-hl-face:property)) . -950) (undo-tree-id673 . -3) (undo-tree-id674 . -3) 953) nil (25846 21572 340416 667000) 0 nil])
([nil nil ((955 . 958) (#("key string" 0 3 (fontified nil face tree-sitter-hl-face:variable) 3 4 (fontified nil) 4 10 (fontified nil face tree-sitter-hl-face:variable)) . 955) (954 . 955)) nil (25846 21572 340415 134000) 0 nil])
([nil nil ((apply yas--snippet-revive 954 969 #s(yas--snippet nil nil nil 17 nil nil #s(yas--field 1 954 954 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 17 nil nil #s(yas--field 1 954 954 nil nil nil t nil) nil)) (954 . 969) (#("nextLocationUrl" 0 15 (fontified nil)) . 954) (954 . 969) (#("next" 0 4 (fontified nil)) . 954) (954 . 958) (#("nextLocationUrl" 0 15 (fontified nil)) . -954) (954 . 969) (#("next" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -954) (undo-tree-id671 . -4) (undo-tree-id672 . -4) 958) nil (25846 21572 340413 401000) 0 nil])
([nil nil ((apply yas--snippet-revive 950 970 #s(yas--snippet nil (#s(yas--field 1 954 954 nil nil nil t nil)) nil 16 nil #s(yas--field 1 954 954 nil nil nil t nil) nil nil))) nil (25846 21572 340410 976000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -980) (980 . 981) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -980) (980 . 981) (973 . 981)) nil (25846 21572 340410 194000) 0 nil])
([nil nil ((981 . 983) (982 . 983) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 981) (981 . 983) (980 . 982)) nil (25846 21572 340408 902000) 0 nil])
([nil nil ((#("	 = service.GetLocation(nextLocationUrl)
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face tree-sitter-hl-face:operator) 3 4 (fontified t) 4 11 (fontified t face tree-sitter-hl-face:variable) 11 12 (fontified t) 12 23 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 23 24 (fontified t face (rainbow-delimiters-depth-2-face)) 24 39 (fontified t face tree-sitter-hl-face:variable) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 41 (fontified t)) . 987) (undo-tree-id663 . 38) (undo-tree-id664 . -40) (undo-tree-id665 . -1) (undo-tree-id666 . 40) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -2) 989) nil (25846 21572 340407 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 974 . 975) (#("
" 0 1 (fontified nil)) . -1013) (971 . 1014) (971 . 972) 973) nil (25846 21572 340404 674000) 0 nil])
([nil nil ((#("	 = service.GetLocation(nextLocationUrl)
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t face tree-sitter-hl-face:operator) 3 4 (fontified t) 4 11 (fontified t face tree-sitter-hl-face:variable) 11 12 (fontified t) 12 23 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 23 24 (fontified t face (rainbow-delimiters-depth-3-face)) 24 39 (fontified t face tree-sitter-hl-face:variable) 39 40 (fontified t face (rainbow-delimiters-depth-3-face)) 40 41 (fontified t)) . 973) (undo-tree-id661 . -40) (undo-tree-id662 . -2) 975) nil (25846 21572 340404 143000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -1026) (985 . 1027) 984) nil (25846 21572 340401 398000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t) 2 3 (fontified t)) . 983) (undo-tree-id659 . -2) (undo-tree-id660 . -1) 984) nil (25846 21572 340400 827000) 0 nil])
([nil nil ((#("	
	} else {
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-2-face)) 4 5 (fontified t) 5 9 (fontified t face tree-sitter-hl-face:keyword) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t)) . 971) (undo-tree-id657 . -11) (undo-tree-id658 . -4)) nil (25846 21572 340399 394000) 0 nil])
([nil nil ((971 . 983)) nil (25846 21572 340397 911000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 971) (undo-tree-id656 . -1)) nil (25846 21572 340397 160000) 0 nil])
([nil nil ((982 . 992)) nil (25846 21572 340395 717000) 0 nil])
([nil nil ((apply yas--snippet-revive 984 998 #s(yas--snippet nil nil nil 18 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 18 nil nil nil nil)) (984 . 998) (#("locationObject" 0 14 (fontified nil)) . 984) (984 . 998) (#("location" 0 8 (fontified nil)) . 984) (984 . 992) (#("locationObject" 0 14 (fontified nil)) . -984) (984 . 998) (#("location" 0 8 (fontified t face tree-sitter-hl-face:variable)) . -984) (undo-tree-id654 . -8) (undo-tree-id655 . -8) 992) nil (25846 21572 340393 833000) 0 nil])
([nil nil ((921 . 922)) nil (25846 21572 340390 577000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -921) (undo-tree-id652 . -1) (undo-tree-id653 . -1) 922) nil (25846 21572 340389 435000) 0 nil])
([nil nil ((#("cache.Get(nextLocationUrl)" 0 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t) 6 9 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 9 10 (fontified t face (rainbow-delimiters-depth-3-face)) 10 25 (fontified t face tree-sitter-hl-face:variable) 25 26 (fontified t face (rainbow-delimiters-depth-3-face))) . 895) (undo-tree-id647 . -25) (undo-tree-id648 . -25) (undo-tree-id649 . -25) (undo-tree-id650 . -26) (undo-tree-id651 . -25)) nil (25846 21572 340387 221000) 0 nil])
([nil nil ((890 . 892)) nil (25846 21572 340384 315000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -891) (undo-tree-id646 . -1) 892) nil (25846 21572 340383 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 916 . 917) (nil fontified nil 891 . 917) (891 . 917)) nil (25846 21572 340382 51000) 0 nil])
([nil nil (916) nil (25846 21572 340381 89000) 0 nil])
([nil nil ((891 . 893)) nil (25846 21572 340380 748000) 0 nil])
([nil nil (918) nil (25846 21572 340380 337000) 0 nil])
([nil nil ((893 . 896)) nil (25846 21572 340379 876000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -894) (undo-tree-id644 . -1) (#(" " 0 1 (fontified t)) . -895) (undo-tree-id645 . -1) 896) nil (25846 21572 340379 205000) 0 nil])
([nil nil ((894 . 896)) nil (25846 21572 340377 512000) 0 nil])
([nil nil ((903 . 904)) nil (25846 21572 340376 500000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -903) (undo-tree-id643 . -1) 904) nil (25846 21572 340375 819000) 0 nil])
([nil nil ((893 . 899)) nil (25846 21572 340374 316000) 0 nil])
([nil nil ((896 . 897)) nil (25846 21572 340373 454000) 0 nil])
([nil nil ((934 . 936)) nil (25846 21572 340372 823000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -964) (undo-tree-id620 . -1) (#("G" 0 1 (fontified t face tree-sitter-hl-face:property)) . -965) (undo-tree-id621 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -966) (undo-tree-id622 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:property)) . -967) (undo-tree-id623 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -968) (undo-tree-id624 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -969) (undo-tree-id625 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -970) (undo-tree-id626 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -971) (undo-tree-id627 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -972) (undo-tree-id628 . -1) (#("L" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -973) (undo-tree-id629 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -974) (undo-tree-id630 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -975) (undo-tree-id631 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -976) (undo-tree-id632 . -1) (#("t" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -977) (undo-tree-id633 . -1) (#("i" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -978) (undo-tree-id634 . -1) (#("o" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -979) (undo-tree-id635 . -1) (#("n" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -980) (undo-tree-id636 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -981) (undo-tree-id637 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -982) (undo-tree-id638 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -983) (undo-tree-id639 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -984) (undo-tree-id640 . -1) (undo-tree-id641 . 1) (undo-tree-id642 . -1) 985) nil (25846 21572 340368 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -958) (undo-tree-id614 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -959) (undo-tree-id615 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -960) (undo-tree-id616 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -961) (undo-tree-id617 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -962) (undo-tree-id618 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -963) (undo-tree-id619 . -1) 964) nil (25846 21572 340352 474000) 0 nil])
([nil nil ((958 . 962)) nil (25846 21572 340348 597000) 0 nil])
([nil nil ((962 . 963)) nil (25846 21572 340348 366000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -962) (undo-tree-id613 . -1) 963) nil (25846 21572 340348 6000) 0 nil])
([nil nil ((962 . 963)) nil (25846 21572 340347 274000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -962) (undo-tree-id612 . -1) 963) nil (25846 21572 340346 563000) 0 nil])
([nil nil ((962 . 964)) nil (25846 21572 340345 962000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -962) (undo-tree-id610 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -963) (undo-tree-id611 . -1) 964) nil (25846 21572 340344 789000) 0 nil])
([nil nil ((1029 . 1032)) nil (25846 21572 340343 547000) 0 nil])
([nil nil ((1032 . 1038)) nil (25846 21572 340343 216000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) #s(yas--field 2 1054 1054 nil nil nil t nil)) nil 19 nil #s(yas--field 2 1054 1054 nil nil nil t nil) nil nil)) (1038 . 1081) (#("Add(${1:key string}, ${2:entry pokecache.CacheEntry})" 0 53 (fontified nil)) . 1038) (1038 . 1091) (#("Add" 0 3 (fontified nil)) . -1038) (1038 . 1041)) nil (25846 21572 340342 866000) 0 nil])
([nil nil ((1043 . 1045) (#("key string" 0 3 (fontified nil face tree-sitter-hl-face:variable) 3 4 (fontified nil) 4 10 (fontified nil face tree-sitter-hl-face:variable)) . 1043) (1042 . 1043)) nil (25846 21572 340341 994000) 0 nil])
([nil nil ((apply yas--snippet-revive 1042 1057 #s(yas--snippet nil nil nil 20 nil nil #s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 20 nil nil #s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) nil)) (1042 . 1057) (#("nextLocationUrl" 0 15 (fontified nil)) . 1042) (1042 . 1057) (#("nex" 0 3 (fontified nil)) . 1042) (1042 . 1045) (#("nextLocationUrl" 0 15 (fontified nil)) . -1042) (1042 . 1057) (#("nex" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1042) (undo-tree-id608 . -3) (undo-tree-id609 . -3) 1045) nil (25846 21572 340340 852000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1060) (1060 . 1061) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1060) (1060 . 1061) (1060 . 1061) (#("entry pokecache.CacheEntry" 0 5 (fontified nil face tree-sitter-hl-face:variable) 5 6 (fontified nil) 6 15 (fontified nil face tree-sitter-hl-face:variable) 15 16 (fontified nil) 16 26 (fontified nil face tree-sitter-hl-face:property)) . 1060) (1059 . 1060)) nil (25846 21572 340338 598000) 0 nil])
([nil nil ((1060 . 1063)) nil (25846 21572 340337 205000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1059) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1060) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1061) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1062) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1063) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . 1) (undo-tree-id607 . -1) 1064) nil (25846 21572 340335 311000) 0 nil])
([nil nil ((apply yas--snippet-revive 1038 1060 #s(yas--snippet nil (#s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) #s(yas--field 2 1054 1054 nil nil nil t nil)) nil 19 nil #s(yas--field 2 1054 1054 nil nil nil t nil) nil nil))) nil (25846 21572 340331 23000) 0 nil])
([nil nil ((1029 . 1032)) nil (25846 21572 340330 472000) 0 nil])
([nil nil ((1032 . 1034)) nil (25846 21572 340329 681000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1033) (undo-tree-id595 . -1) 1034) nil (25846 21572 340329 59000) 0 nil])
([nil nil ((1033 . 1049)) nil (25846 21572 340328 629000) 0 nil])
([nil nil ((apply yas--snippet-revive 1045 1054 #s(yas--snippet nil nil nil 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 21 nil nil nil nil)) (1045 . 1054) (#("pokecache" 0 9 (fontified nil)) . 1045) (1045 . 1054) (#("poke" 0 4 (fontified nil)) . 1045) (1045 . 1049) (#("pokecache" 0 9 (fontified nil)) . -1045) (1045 . 1054) (#("poke" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1045) (undo-tree-id593 . -4) (undo-tree-id594 . -4) 1049) nil (25846 21572 340327 366000) 0 nil])
([nil nil ((1054 . 1056)) nil (25846 21572 340325 973000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1054) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (#("." 0 1 (fontified t)) . -1055) (undo-tree-id591 . -1) (undo-tree-id592 . -1) 1056) nil (25846 21572 340325 422000) 0 nil])
([nil nil ((1054 . 1055)) nil (25846 21572 340323 479000) 0 nil])
([nil nil ((apply yas--snippet-revive 1055 1065 #s(yas--snippet nil nil nil 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 22 nil nil nil nil)) (1055 . 1065) (#("CacheEntry" 0 10 (fontified nil)) . 1055) (1055 . 1065) (#("CacheEntry" 0 10 (fontified nil)) . -1055) (1055 . 1065)) nil (25846 21572 340322 527000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1066) (1066 . 1067) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1066) (1066 . 1067) (1065 . 1067)) nil (25846 21572 340319 671000) 0 nil])
([nil nil ((1067 . 1070)) nil (25846 21572 340318 128000) 0 nil])
([nil nil ((1070 . 1078)) nil (25846 21572 340317 517000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1070) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1071) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1072) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1073) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1074) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#("N" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1075) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1076) (undo-tree-id587 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1077) (undo-tree-id588 . -1) 1078) nil (25846 21572 340315 223000) 0 nil])
([nil nil ((1043 . 1044)) nil (25846 21572 340307 418000) 0 nil])
([nil nil ((1071 . 1075)) nil (25846 21572 340306 586000) 0 nil])
([nil nil ((apply yas--snippet-revive 1071 1081 #s(yas--snippet nil nil nil 23 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 23 nil nil nil nil)) (1071 . 1081) (#("cacheEntry" 0 10 (fontified nil)) . 1071) (1071 . 1081) (#("cach" 0 4 (fontified nil)) . 1071) (1071 . 1075) (#("cacheEntry" 0 10 (fontified nil)) . -1071) (1071 . 1081) (#("cach" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1071) (undo-tree-id573 . -4) (undo-tree-id574 . -4) 1075) nil (25846 21572 340305 43000) 0 nil])
([nil nil ((1081 . 1082)) nil (25846 21572 340302 298000) 0 nil])
([nil nil ((1082 . 1083)) nil (25846 21572 340301 336000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1081) (undo-tree-id571 . -1) (#("v" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1082) (undo-tree-id572 . -1) 1083) nil (25846 21572 340300 435000) 0 nil])
([nil nil ((1081 . 1082)) nil (25846 21572 340298 842000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1081) (undo-tree-id570 . -1) 1082) nil (25846 21572 340297 689000) 0 nil])
([nil nil ((1081 . 1083)) nil (25846 21572 340296 537000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1082) (undo-tree-id569 . -1) 1083) nil (25846 21572 340295 495000) 0 nil])
([nil nil ((1082 . 1088)) nil (25846 21572 340294 343000) 0 nil])
([nil nil ((1088 . 1092)) nil (25846 21572 340293 612000) 0 nil])
([nil nil ((apply yas--snippet-revive 1088 1102 #s(yas--snippet nil nil nil 24 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 24 nil nil nil nil)) (1088 . 1102) (#("locationObject" 0 14 (fontified nil)) . 1088) (1088 . 1102) (#("loca" 0 4 (fontified nil)) . 1088) (1088 . 1092) (#("locationObject" 0 14 (fontified nil)) . -1088) (1088 . 1102) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1088) (undo-tree-id567 . -4) (undo-tree-id568 . -4) 1092) nil (25846 21572 340292 289000) 0 nil])
([nil nil ((1102 . 1105)) nil (25846 21572 340288 903000) 0 nil])
([nil nil ((1105 . 1110)) nil (25846 21572 340288 51000) 0 nil])
([nil nil ((apply yas--snippet-revive 1105 1115 #s(yas--snippet nil nil nil 25 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 25 nil nil nil nil)) (1105 . 1115) (#("cacheEntry" 0 10 (fontified nil)) . 1105) (1105 . 1115) (#("cache" 0 5 (fontified nil)) . 1105) (1105 . 1110) (#("cacheEntry" 0 10 (fontified nil)) . -1105) (1105 . 1115) (#("cache" 0 5 (fontified t face tree-sitter-hl-face:variable)) . -1105) (undo-tree-id565 . -5) (undo-tree-id566 . -5) 1110) nil (25846 21572 340286 899000) 0 nil])
([nil nil ((1115 . 1125)) nil (25846 21572 340283 322000) 0 nil])
([nil nil ((1125 . 1128)) nil (25846 21572 340282 480000) 0 nil])
([nil nil ((1102 . 1103)) nil (25846 21572 340281 719000) 0 nil])
([nil nil ((apply yas--snippet-revive 1103 1110 #s(yas--snippet nil nil nil 26 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 26 nil nil nil nil)) (1103 . 1110) (#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified nil)) . -1103) (1103 . 1110)) nil (25846 21572 340280 296000) 0 nil])
([nil nil ((#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified t face tree-sitter-hl-face:property)) . 1103)) nil (25846 21572 340277 882000) 0 nil])
([nil nil ((1103 . 1110) (#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110)) nil (25846 21572 340275 898000) 0 nil])
([nil nil ((#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified nil)) . 1103) (1103 . 1110) (#("Results" 0 7 (fontified t face tree-sitter-hl-face:property)) . 1103)) nil (25846 21572 340273 463000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1102)) nil (25846 21572 340271 660000) 0 nil])
([nil nil ((#(" = " 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:operator) 2 3 (fontified t)) . 1125)) nil (25846 21572 340270 678000) 0 nil])
([nil nil ((#(".createdAt" 0 1 (fontified t) 1 10 (fontified t face tree-sitter-hl-face:property)) . 1115) (undo-tree-id564 . -9)) nil (25846 21572 340269 506000) 0 nil])
([nil nil ((1105 . 1110) (#("cacheEntry" 0 10 (fontified nil)) . 1105) (1105 . 1115) (#("cache" 0 5 (fontified nil)) . 1105) (1105 . 1110) (#("cacheEntry" 0 10 (fontified nil)) . 1105) (1105 . 1115) (#("cacheEntry" 0 10 (fontified t face tree-sitter-hl-face:variable)) . 1105) (undo-tree-id563 . -9)) nil (25846 21572 340267 61000) 0 nil])
([nil nil ((#("cache" 0 5 (fontified t face tree-sitter-hl-face:variable)) . 1105) (undo-tree-id562 . -4)) nil (25846 21572 340263 704000) 0 nil])
([nil nil ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1102) (undo-tree-id561 . -2)) nil (25846 21572 340262 322000) 0 nil])
([nil nil ((1088 . 1092) (#("locationObject" 0 14 (fontified nil)) . 1088) (1088 . 1102) (#("loca" 0 4 (fontified nil)) . 1088) (1088 . 1092) (#("locationObject" 0 14 (fontified nil)) . 1088) (1088 . 1102) (#("locationObject" 0 14 (fontified t face tree-sitter-hl-face:variable)) . 1088) (undo-tree-id560 . -13)) nil (25846 21572 340260 87000) 0 nil])
([nil nil ((#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 1088) (undo-tree-id559 . -3)) nil (25846 21572 340256 481000) 0 nil])
([nil nil ((#("val = " 0 3 (fontified t face tree-sitter-hl-face:property) 3 4 (fontified t) 4 5 (fontified t face tree-sitter-hl-face:operator) 5 6 (fontified t)) . 1082) (undo-tree-id558 . -5)) nil (25846 21572 340255 148000) 0 nil])
([nil nil ((1082 . 1083)) nil (25846 21572 340253 755000) 0 nil])
([nil nil ((#(".a" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:property)) . 1081) (undo-tree-id557 . -1)) nil (25846 21572 340252 613000) 0 nil])
([nil nil ((1081 . 1082)) nil (25846 21572 340251 60000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1081)) nil (25846 21572 340249 567000) 0 nil])
([nil nil ((1081 . 1083)) nil (25846 21572 340248 405000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:property)) . 1082)) nil (25846 21572 340246 982000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1081)) nil (25846 21572 340246 21000) 0 nil])
([nil nil ((1071 . 1075) (#("cacheEntry" 0 10 (fontified nil)) . 1071) (1071 . 1081) (#("cach" 0 4 (fontified nil)) . 1071) (1071 . 1075) (#("cacheEntry" 0 10 (fontified nil)) . 1071) (1071 . 1081) (#("cacheEntry" 0 10 (fontified t face tree-sitter-hl-face:variable)) . 1071) (undo-tree-id556 . -9)) nil (25846 21572 340244 137000) 0 nil])
([nil nil ((#("cach" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 1071) (undo-tree-id555 . -3)) nil (25846 21572 340240 240000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 1043)) nil (25846 21572 340239 147000) 0 nil])
([nil nil ((1070 . 1078)) nil (25846 21572 340238 496000) 0 nil])
([nil nil ((#("cacheNtr" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable) 2 3 (fontified t face tree-sitter-hl-face:variable) 3 4 (fontified t face tree-sitter-hl-face:variable) 4 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t face tree-sitter-hl-face:variable) 6 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t face tree-sitter-hl-face:variable)) . 1070) (undo-tree-id554 . -7)) nil (25846 21572 340237 595000) 0 nil])
([nil nil ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1067) (undo-tree-id553 . -2)) nil (25846 21572 340236 122000) 0 nil])
([nil nil ((#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1065) (undo-tree-id548 . -1) (undo-tree-id549 . 1) (undo-tree-id550 . -2) (undo-tree-id551 . 2) (undo-tree-id552 . -1) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1066) (1066 . 1067) (#("}" 0 1 (fontified nil)) . 1066) (1066 . 1067)) nil (25846 21572 340234 569000) 0 nil])
([nil nil ((#("CacheEntry" 0 10 (fontified nil)) . 1055) (1055 . 1065) (#("CacheEntry" 0 10 (fontified nil)) . 1055) (1055 . 1065) (#("CacheEntry" 0 10 (fontified t face tree-sitter-hl-face:property)) . 1055) (undo-tree-id547 . -9)) nil (25846 21572 340230 741000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1054)) nil (25846 21572 340228 327000) 0 nil])
([nil nil ((1054 . 1056)) nil (25846 21572 340227 305000) 0 nil])
([nil nil ((#(",." 0 1 (fontified t) 1 2 (fontified t)) . 1054) (undo-tree-id546 . -1)) nil (25846 21572 340226 443000) 0 nil])
([nil nil ((1045 . 1049) (#("pokecache" 0 9 (fontified nil)) . 1045) (1045 . 1054) (#("poke" 0 4 (fontified nil)) . 1045) (1045 . 1049) (#("pokecache" 0 9 (fontified nil)) . 1045) (1045 . 1054) (#("pokecache" 0 9 (fontified t face tree-sitter-hl-face:variable)) . 1045) (undo-tree-id545 . -8)) nil (25846 21572 340224 369000) 0 nil])
([nil nil ((#("acheEntry = poke" 0 9 (fontified t face tree-sitter-hl-face:variable) 9 10 (fontified t) 10 11 (fontified t face tree-sitter-hl-face:operator) 11 12 (fontified t) 12 16 (fontified t face tree-sitter-hl-face:variable)) . 1033) (undo-tree-id544 . -15)) nil (25846 21572 340221 614000) 0 nil])
([nil nil ((1033 . 1034)) nil (25846 21572 340220 332000) 0 nil])
([nil nil ((#("ch" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable)) . 1032) (undo-tree-id543 . -1)) nil (25846 21572 340219 500000) 0 nil])
([nil nil ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1029) (undo-tree-id542 . -2)) nil (25846 21572 340218 177000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) #s(yas--field 2 1054 1054 nil nil nil t nil)) nil 19 nil #s(yas--field 2 1054 1054 nil nil nil t nil) nil nil))) nil (25846 21572 340216 935000) 0 nil])
([nil nil ((1059 . 1064)) nil (25846 21572 340215 943000) 0 nil])
([nil nil ((#("cre" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable) 2 3 (fontified t face tree-sitter-hl-face:variable)) . 1060)) nil (25846 21572 340215 71000) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1059) (undo-tree-id537 . 1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (1060 . 1086) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1060) (undo-tree-id540 . 1) (undo-tree-id541 . -1) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1060) (1060 . 1061) (#("}" 0 1 (fontified nil)) . 1060) (1060 . 1061)) nil (25846 21572 340213 659000) 0 nil])
([nil nil ((1042 . 1045) (#("nextLocationUrl" 0 15 (fontified nil)) . 1042) (1042 . 1057) (#("nex" 0 3 (fontified nil)) . 1042) (1042 . 1045) (#("nextLocationUrl" 0 15 (fontified nil)) . 1042) (1042 . 1057) (#("nextLocationUrl" 0 15 (fontified t face tree-sitter-hl-face:variable)) . 1042)) nil (25846 21572 340208 970000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 1042) (1043 . 1053) (#("ex" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 1043)) nil (25846 21572 340206 976000) 0 nil])
([nil nil ((#("Add" 0 3 (fontified nil)) . 1038) (1038 . 1041) (#("Add(${1:key string}, ${2:entry pokecache.CacheEntry})" 0 53 (fontified nil)) . 1038) (1038 . 1091) (#("Add(key string, entry pokecache.CacheEntry)" 0 3 (fontified t face tree-sitter-hl-face:type) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t) 8 14 (fontified t face tree-sitter-hl-face:variable) 14 16 (fontified t) 16 21 (fontified t face tree-sitter-hl-face:variable) 21 22 (fontified t) 22 31 (fontified t face tree-sitter-hl-face:variable) 31 32 (fontified t) 32 42 (fontified t face tree-sitter-hl-face:property) 42 43 (fontified t face (rainbow-delimiters-depth-3-face))) . 1038) (undo-tree-id533 . -16) (undo-tree-id534 . -4) (undo-tree-id535 . -16) (undo-tree-id536 . -43) (apply yas--snippet-revive 1038 1081 #s(yas--snippet nil (#s(yas--field 1 1042 1042 nil nil nil t #s(yas--field 2 1054 1054 nil nil nil t nil)) #s(yas--field 2 1054 1054 nil nil nil t nil)) nil 19 nil #s(yas--field 2 1054 1054 nil nil nil t nil) nil nil))) nil (25846 21572 340205 734000) 0 nil])
([nil nil ((#("cache." 0 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t)) . 1032) (undo-tree-id529 . -5) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6)) nil (25846 21572 340201 856000) 0 nil])
([nil nil ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1029) (undo-tree-id525 . -2) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3)) nil (25846 21572 340199 552000) 0 nil])
([nil nil ((962 . 964)) nil (25846 21572 340196 957000) 0 nil])
([nil nil ((#(".s" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:property)) . 962) (undo-tree-id524 . -1)) nil (25846 21572 340195 354000) 0 nil])
([nil nil ((962 . 963)) nil (25846 21572 340194 171000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 962)) nil (25846 21572 340193 350000) 0 nil])
([nil nil ((962 . 963)) nil (25846 21572 340192 578000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 962)) nil (25846 21572 340191 637000) 0 nil])
([nil nil ((#(" val" 0 1 (fontified t) 1 4 (fontified t face tree-sitter-hl-face:variable)) . 958) (undo-tree-id522 . -3) (undo-tree-id523 . -4)) nil (25846 21572 340190 885000) 0 nil])
([nil nil ((958 . 964)) nil (25846 21572 340188 921000) 0 nil])
([nil nil ((964 . 985)) nil (25846 21572 340188 481000) 0 nil])
([nil nil ((#("ok" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 934)) nil (25846 21572 340187 449000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 896)) nil (25846 21572 340186 96000) 0 nil])
([nil nil ((#("val ok" 0 3 (fontified t face tree-sitter-hl-face:variable) 3 4 (fontified t) 4 6 (fontified t face tree-sitter-hl-face:variable)) . 893) (undo-tree-id521 . -3)) nil (25846 21572 340185 134000) 0 nil])
([nil nil ((903 . 904)) nil (25846 21572 340183 491000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . 903) (undo-tree-id520 . -1)) nil (25846 21572 340182 509000) 0 nil])
([nil nil ((#("= " 0 1 (fontified t face tree-sitter-hl-face:operator) 1 2 (fontified t)) . 894)) nil (25846 21572 340181 6000) 0 nil])
([nil nil ((894 . 896)) nil (25846 21572 340179 874000) 0 nil])
([nil nil ((#(":+ " 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:operator) 2 3 (fontified t)) . 893) (undo-tree-id519 . -3)) nil (25846 21572 340178 712000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 891)) nil (25846 21572 340177 329000) 0 nil])
([nil nil ((#("cache.Get(nextLocationUrl)" 0 5 (fontified nil face tree-sitter-hl-face:variable) 5 6 (fontified nil) 6 7 (fontified nil face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 7 9 (fontified nil face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 9 10 (fontified nil face (rainbow-delimiters-depth-2-face)) 10 25 (fontified nil face tree-sitter-hl-face:variable) 25 26 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-2-face))) . 891) (undo-tree-id501 . -3) (undo-tree-id502 . -25) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -25) (undo-tree-id515 . 1) (undo-tree-id516 . -26) (undo-tree-id517 . 17) (undo-tree-id518 . -10) (nil rear-nonsticky t 916 . 917)) nil (25846 21572 340176 337000) 0 nil])
([nil nil ((891 . 892)) nil (25846 21572 340167 841000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 890) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1)) nil (25846 21572 340165 687000) 0 nil])
([nil nil ((895 . 921)) nil (25846 21572 340146 540000) 0 nil])
([nil nil ((921 . 922)) nil (25846 21572 340145 889000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 921) (undo-tree-id484 . -1)) nil (25846 21572 340144 757000) 0 nil])
([nil nil ((984 . 992) (#("locationObject" 0 14 (fontified nil)) . 984) (984 . 998) (#("location" 0 8 (fontified nil)) . 984) (984 . 992) (#("locationObject" 0 14 (fontified nil)) . 984) (984 . 998) (#("locationObject" 0 14 (fontified t face tree-sitter-hl-face:variable)) . 984)) nil (25846 21572 340143 605000) 0 nil])
([nil nil ((#("  location" 0 2 (fontified t) 2 10 (fontified t face tree-sitter-hl-face:variable)) . 982) (undo-tree-id483 . -10)) nil (25846 21572 340142 573000) 0 nil])
([nil nil ((971 . 973)) nil (25846 21572 340141 872000) 0 nil])
([nil nil ((#("	
	} else {
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-2-face)) 4 5 (fontified t) 5 9 (fontified t face tree-sitter-hl-face:keyword) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t)) . 971)) nil (25846 21572 340140 920000) 0 nil])
([nil nil ((971 . 983)) nil (25846 21572 340140 88000) 0 nil])
([nil nil ((983 . 986)) nil (25846 21572 340139 216000) 0 nil])
([nil nil ((#("
	 = service.GetLocation(nextLocationUrl)
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (rear-nonsticky t fontified nil) 3 4 (fontified nil face tree-sitter-hl-face:operator) 4 5 (fontified nil) 5 12 (fontified nil face tree-sitter-hl-face:variable) 12 13 (fontified nil) 13 24 (fontified nil face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 24 25 (fontified nil face (rainbow-delimiters-depth-3-face)) 25 40 (fontified nil face tree-sitter-hl-face:variable) 40 41 (fontified nil face (rainbow-delimiters-depth-3-face)) 41 42 (fontified nil)) . 985) (undo-tree-id482 . -41) (1026 . 1027)) nil (25846 21572 340138 425000) 0 nil])
([nil nil ((973 . 1014)) nil (25846 21572 340137 533000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 971) (#("	
	 = service.GetLocation(nextLocationUrl)
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil) 4 5 (fontified nil face tree-sitter-hl-face:operator) 5 6 (fontified nil) 6 13 (fontified nil face tree-sitter-hl-face:variable) 13 14 (fontified nil) 14 25 (fontified nil face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 25 26 (fontified nil face (rainbow-delimiters-depth-3-face)) 26 41 (fontified nil face tree-sitter-hl-face:variable) 41 42 (fontified nil face (rainbow-delimiters-depth-3-face)) 42 43 (fontified nil)) . 971) (undo-tree-id481 . -4) (1013 . 1014) (nil rear-nonsticky t 974 . 975)) nil (25846 21572 340136 762000) 0 nil])
([nil nil ((987 . 1028)) nil (25846 21572 340135 269000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified nil)) . 980) (undo-tree-id479 . -1) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 981) (981 . 983) (#("	" 0 1 (fontified t)) . 982) (#("		" 0 2 (fontified t)) . 981) (undo-tree-id480 . -2)) nil (25846 21572 340134 27000) 0 nil])
([nil nil ((#(" else {}" 0 1 (fontified nil) 1 5 (fontified nil face tree-sitter-hl-face:keyword) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-2-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-2-face))) . 973) (undo-tree-id471 . -8) (undo-tree-id472 . -7) (undo-tree-id473 . -7) (undo-tree-id474 . -8) (undo-tree-id475 . 1) (undo-tree-id476 . -8) (undo-tree-id477 . 2) (undo-tree-id478 . -7) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 980) (980 . 981) (#("}" 0 1 (fontified nil)) . 980) (980 . 981)) nil (25846 21572 340128 306000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 954 954 nil nil nil t nil)) nil 16 nil #s(yas--field 1 954 954 nil nil nil t nil) nil nil))) nil (25846 21572 340123 526000) 0 nil])
([nil nil ((954 . 958) (#("nextLocationUrl" 0 15 (fontified nil)) . 954) (954 . 969) (#("next" 0 4 (fontified nil)) . 954) (954 . 958) (#("nextLocationUrl" 0 15 (fontified nil)) . 954) (954 . 969) (#("nextLocationUrl" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable) 2 3 (fontified t face tree-sitter-hl-face:variable) 3 4 (fontified t face tree-sitter-hl-face:variable) 4 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t face tree-sitter-hl-face:variable) 6 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t face tree-sitter-hl-face:variable) 8 9 (fontified t face tree-sitter-hl-face:variable) 9 10 (fontified t face tree-sitter-hl-face:variable) 10 11 (fontified t face tree-sitter-hl-face:variable) 11 12 (fontified t face tree-sitter-hl-face:variable) 12 13 (fontified t face tree-sitter-hl-face:variable) 13 14 (fontified t face tree-sitter-hl-face:variable) 14 15 (fontified t face tree-sitter-hl-face:variable)) . 954)) nil (25846 21572 340122 64000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 954) (undo-tree-id468 . 1) (undo-tree-id469 . -1) (undo-tree-id470 . 1) (955 . 965) (#("ext" 0 3 (fontified t face tree-sitter-hl-face:variable)) . 955)) nil (25846 21572 340120 581000) 0 nil])
([nil nil ((950 . 953) (#("Get" 0 3 (fontified nil)) . 950) (950 . 953) (#("Get(${1:key string})" 0 20 (fontified nil)) . 950) (950 . 970) (#("Get(key string)" 0 1 (fontified t face tree-sitter-hl-face:type) 1 2 (fontified t face tree-sitter-hl-face:type) 2 3 (fontified t face tree-sitter-hl-face:type) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t) 8 14 (fontified t face tree-sitter-hl-face:variable) 14 15 (fontified t face (rainbow-delimiters-depth-3-face))) . 950) (undo-tree-id467 . -4) (apply yas--snippet-revive 950 965 #s(yas--snippet nil (#s(yas--field 1 954 954 nil nil nil t nil)) nil 16 nil #s(yas--field 1 954 954 nil nil nil t nil) nil nil))) nil (25846 21572 340118 146000) 0 nil])
([nil nil ((#("cache.Get" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable) 2 3 (fontified t face tree-sitter-hl-face:variable) 3 4 (fontified t face tree-sitter-hl-face:variable) 4 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t) 6 9 (fontified t face tree-sitter-hl-face:property)) . 944) (undo-tree-id466 . -8)) nil (25846 21572 340116 413000) 0 nil])
([nil nil ((944 . 950)) nil (25846 21572 340115 641000) 0 nil])
([nil nil ((#(" = change" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:operator) 2 3 (fontified t) 3 4 (fontified t face tree-sitter-hl-face:variable) 4 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t face tree-sitter-hl-face:variable) 6 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t face tree-sitter-hl-face:variable) 8 9 (fontified t face tree-sitter-hl-face:variable)) . 941) (undo-tree-id464 . -8) (undo-tree-id465 . -2)) nil (25846 21572 340114 960000) 0 nil])
([nil nil ((941 . 942)) nil (25846 21572 340113 908000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 941)) nil (25846 21572 340113 407000) 0 nil])
([nil nil ((927 . 931) (#("locationObject" 0 14 (fontified nil)) . 927) (927 . 941) (#("loca" 0 4 (fontified nil)) . 927) (927 . 931) (#("locationObject" 0 14 (fontified nil)) . 927) (927 . 941) (#("locationObject" 0 14 (fontified t face tree-sitter-hl-face:variable)) . 927) (undo-tree-id462 . -13) (undo-tree-id463 . -14)) nil (25846 21572 340112 285000) 0 nil])
([nil nil ((#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 927) (undo-tree-id461 . -3)) nil (25846 21572 340110 812000) 0 nil])
([nil nil ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 924) (undo-tree-id459 . -2) (undo-tree-id460 . -3)) nil (25846 21572 340109 810000) 0 nil])
([nil nil ((860 . 868) (#("service.LocationResponseObject" 0 30 (fontified nil)) . 860) (860 . 890) (#("location" 0 8 (fontified nil)) . 860) (860 . 868) (#("service.LocationResponseObject" 0 30 (fontified nil)) . 860) (860 . 890) (#("service.LocationResponseObject" 0 8 (fontified t) 8 30 (fontified t face tree-sitter-hl-face:type)) . 860) (undo-tree-id443 . -30) (undo-tree-id444 . -30) (undo-tree-id445 . -30) (undo-tree-id446 . -30) (undo-tree-id447 . -30) (undo-tree-id448 . -30) (undo-tree-id449 . -30) (undo-tree-id450 . -30) (undo-tree-id451 . -30) (undo-tree-id452 . -30) (undo-tree-id453 . -30) (undo-tree-id454 . -30) (undo-tree-id455 . -30) (undo-tree-id456 . -30) (undo-tree-id457 . -30) (undo-tree-id458 . -30)) nil (25846 21572 340108 17000) 0 nil])
([nil nil ((#("location" 0 8 (fontified t face tree-sitter-hl-face:type)) . 860) (undo-tree-id442 . -7)) nil (25846 21572 340101 945000) 0 nil])
([nil nil ((860 . 861)) nil (25846 21572 340101 264000) 0 nil])
([nil nil ((#(" C" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:type)) . 859) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1)) nil (25846 21572 340100 643000) 0 nil])
([nil nil ((859 . 860)) nil (25846 21572 340093 18000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 859)) nil (25846 21572 340091 896000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:type)) . -875) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:type)) . -876) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -877) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#("L" 0 1 (fontified t face tree-sitter-hl-face:type)) . -878) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:type)) . -879) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . -880) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:type)) . -881) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -882) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:type)) . -883) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:type)) . -884) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:type)) . -885) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:type)) . -886) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:type)) . -887) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:type)) . -888) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -889) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -890) (undo-tree-id395 . 1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#(" " 0 1 (fontified t)) . -891) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -892) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("
" 0 1 (fontified t)) . -893) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("	" 0 1 (fontified t)) . -894) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -895) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . 1) (undo-tree-id424 . -1) 896 (t 25846 21208 258251 992000)) nil (25846 21572 340086 566000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:type)) . -861) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:type)) . -862) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -863) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . -864) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:type)) . -865) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . -866) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:type)) . -867) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:type)) . -868) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("." 0 1 (fontified t)) . -869) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("G" 0 1 (fontified t face tree-sitter-hl-face:type)) . -870) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:type)) . -871) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -872) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -873) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:type)) . -874) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) 875) nil (25846 21572 340025 489000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -859) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("	" 0 1 (fontified t)) . -860) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("
" 0 1 (fontified t)) . -861) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("	" 0 1 (fontified t)) . -862) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 863) nil (25846 21572 339547 64000) 0 nil])
([nil nil ((860 . 862) (#("\"" 0 1 (fontified nil)) . -860) (860 . 861)) nil (25846 21572 339530 513000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -860) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("\"" 0 1 (fontified t)) . 861)) nil (25846 21572 339528 759000) 0 nil])
([nil nil ((860 . 861)) nil (25846 21572 339525 944000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -841) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -842) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -843) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -844) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 845) nil (25846 21572 339520 714000) 0 nil])
([nil nil ((#("var cache = pokecache.NewCache(300 * time.Second)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 9 (face tree-sitter-hl-face:variable fontified t) 9 10 (fontified t) 10 11 (face tree-sitter-hl-face:operator fontified t) 11 12 (fontified t) 12 21 (face tree-sitter-hl-face:variable fontified t) 21 22 (fontified t) 22 30 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 34 (face tree-sitter-hl-face:number fontified t) 34 35 (fontified t) 35 36 (face tree-sitter-hl-face:operator fontified t) 36 37 (fontified t) 37 41 (face tree-sitter-hl-face:variable fontified t) 41 42 (fontified t) 42 48 (face tree-sitter-hl-face:property fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 50 (fontified t)) . 194) (undo-tree-id11 . -4) (undo-tree-id12 . -16) (undo-tree-id13 . -16) (undo-tree-id14 . -49) 210 (t 25846 21572 447101 224000)) nil (25846 23080 795265 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 194)) nil (25846 23080 795261 575000) 0 nil])
([nil nil ((#("	\"GoPokedex/pokecache\"
	\"time\"
" 0 1 (fontified t) 1 22 (face tree-sitter-hl-face:string fontified t) 22 24 (fontified t) 24 30 (face tree-sitter-hl-face:string fontified t) 30 31 (fontified t)) . 66) (undo-tree-id0 . -30) (undo-tree-id1 . -30) (undo-tree-id2 . -30) (undo-tree-id3 . -1) (undo-tree-id4 . -22) (undo-tree-id5 . -24) (undo-tree-id6 . -30) (undo-tree-id7 . -7) (undo-tree-id8 . -30) (undo-tree-id9 . -7) (undo-tree-id10 . -30) 96) nil (25846 23080 795256 927000) 0 nil])
([nil nil ((251 . 254) (t 25846 23080 808505 387000)) nil (25846 23389 168766 371000) 0 nil])
([nil nil ((254 . 264)) nil (25846 23389 168765 990000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -262) (undo-tree-id24 . -1) (#("w" 0 1 (face tree-sitter-hl-face:property fontified t)) . -263) (undo-tree-id25 . -1) 264) nil (25846 23389 168765 429000) 0 nil])
([nil nil ((262 . 266)) nil (25846 23389 168763 866000) 0 nil])
([nil nil ((#("		errors.New()
" 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:variable fontified t) 8 9 (fontified t) 9 12 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t) 12 13 (face (rainbow-delimiters-depth-3-face) fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t) 14 15 (fontified t)) . 252) (undo-tree-id15 . -14) (undo-tree-id16 . -12) (undo-tree-id17 . -12) (undo-tree-id18 . -13) (undo-tree-id19 . 2) (undo-tree-id20 . 3) (undo-tree-id21 . -13) (undo-tree-id22 . 2) (undo-tree-id23 . -14) 264) nil (25846 23389 168762 584000) 0 nil])
([nil nil ((251 . 254)) nil (25846 23389 168736 756000) 0 nil])
([nil nil ((254 . 261)) nil (25846 23389 168736 275000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 265 276 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 265 276 nil nil nil nil nil) nil nil)) (261 . 277) (#("New(${1:text string})" 0 21 (fontified nil)) . 261) (261 . 282) (#("New" 0 3 (fontified nil)) . -261) (261 . 264)) nil (25846 23389 168735 373000) 0 nil])
([nil nil ((apply yas--snippet-revive 261 277 #s(yas--snippet nil (#s(yas--field 1 265 276 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 265 276 nil nil nil nil nil) nil nil))) nil (25846 23389 168729 432000) 0 nil])
([nil nil ((#("		errors.New(text string)
" 0 2 (fontified t) 2 9 (fontified t) 9 12 (face tree-sitter-hl-face:type fontified t) 12 13 (face (rainbow-delimiters-depth-3-face) fontified t) 13 17 (face tree-sitter-hl-face:variable fontified t) 17 18 (fontified t) 18 24 (face tree-sitter-hl-face:variable fontified t) 24 25 (face (rainbow-delimiters-depth-3-face) fontified t) 25 26 (fontified t)) . 252) (undo-tree-id26 . -12) (undo-tree-id27 . -25) (undo-tree-id28 . -26) (undo-tree-id29 . 13) (undo-tree-id30 . -13) (undo-tree-id31 . -12) (undo-tree-id32 . -12) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (undo-tree-id38 . 14) (undo-tree-id39 . -13) (undo-tree-id40 . 2) (undo-tree-id41 . -25) (undo-tree-id42 . -18) (undo-tree-id43 . -19) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -9) (undo-tree-id47 . -12) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -26) 264 (t 25846 23389 182070 256000)) nil (25846 23391 300120 403000) 0 nil])
([nil nil ((1374 . 1376) (t 25846 23391 314030 740000)) nil (25850 3005 46462 737000) 0 nil])
([nil nil ((1376 . 1383)) nil (25850 3005 46462 156000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1381) (undo-tree-id6 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1382) (undo-tree-id7 . -1) 1383) nil (25850 3005 46461 505000) 0 nil])
([nil nil ((1381 . 1383)) nil (25850 3005 46460 343000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1381) (undo-tree-id4 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1382) (undo-tree-id5 . -1) 1383) nil (25850 3005 46459 231000) 0 nil])
([nil nil ((1381 . 1385)) nil (25850 3005 46457 347000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1383) (undo-tree-id2 . -1) (#("k" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1384) (undo-tree-id3 . -1) 1385) nil (25850 3005 46456 235000) 0 nil])
([nil nil ((1383 . 1388)) nil (25850 3005 46454 252000) 0 nil])
([nil nil ((1390 . 1396) (#(")" 0 1 (fontified nil)) . -1389) (1389 . 1390) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1389) (1389 . 1390) (1388 . 1390)) nil (25850 3005 46453 280000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1395) (undo-tree-id1 . -1) 1396) nil (25850 3005 46452 148000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1398) (1398 . 1399) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1398) (1398 . 1399) (1395 . 1399)) nil (25850 3005 46450 956000) 0 nil])
([nil nil ((1399 . 1400) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1399) (1399 . 1400) (1398 . 1400)) nil (25850 3005 46450 385000) 0 nil])
([nil nil ((152 . 168)) nil (25850 3005 46449 984000) 0 nil])
([nil nil ((238 . 244)) nil (25850 3005 46449 753000) 0 nil])
([nil nil ((244 . 245)) nil (25850 3005 46449 232000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -244) (undo-tree-id0 . -1) 245) nil (25850 3005 46448 721000) 0 nil])
([nil nil ((244 . 248)) nil (25850 3005 46420 960000) 0 nil])
([nil nil ((248 . 249)) nil (25850 3005 46420 349000) 0 nil])
([nil nil ((249 . 254)) nil (25850 3005 46419 888000) 0 nil])
([nil nil ((514 . 530)) nil (25850 3005 46419 277000) 0 nil])
([nil nil ((697 . 713)) nil (25850 3005 46415 590000) 0 nil])
([nil nil ((1062 . 1067) (t 25850 3005 56154 262000)) nil (25850 3013 914892 933000) 0 nil])
([nil nil ((1067 . 1078)) nil (25850 3013 914888 494000) 0 nil])
([nil nil ((1469 . 1479) (t 25850 3014 17882 694000)) nil (25850 3025 778679 818000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1478) (undo-tree-id8 . -1) 1479) nil (25850 3025 778679 206000) 0 nil])
([nil nil ((1478 . 1485)) nil (25850 3025 778669 569000) 0 nil])
([nil nil ((#("	fmt.Println(\"prev: \", prevLocationsUrl == \"\")
" 0 1 (fontified t) 1 4 (fontified t face tree-sitter-hl-face:variable) 4 5 (fontified t) 5 12 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 12 13 (fontified t face (rainbow-delimiters-depth-2-face)) 13 21 (fontified t face tree-sitter-hl-face:string) 21 23 (fontified t) 23 39 (fontified t face tree-sitter-hl-face:variable) 39 40 (fontified t) 40 42 (fontified t face tree-sitter-hl-face:operator) 42 43 (fontified t) 43 45 (fontified t face tree-sitter-hl-face:string) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t)) . 1088) (undo-tree-id9 . 35) (undo-tree-id10 . -46) (undo-tree-id11 . -11) (undo-tree-id12 . -12) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -5) (undo-tree-id18 . -12) (undo-tree-id19 . -11) (undo-tree-id20 . -11) (undo-tree-id21 . -11) (undo-tree-id22 . -11) (undo-tree-id23 . -11) (undo-tree-id24 . -47) 1099 (t 25850 3025 882529 402000)) nil (25850 3041 430843 679000) 0 nil])
([nil nil ((1449 . 1470) (t 25850 3041 535073 945000)) nil (25850 3833 134567 820000) 0 nil])
([nil nil ((1470 . 1481)) nil (25850 3833 134566 928000) 0 nil])
([nil nil ((1481 . 1482)) nil (25850 3833 134566 317000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1498 1507 nil nil nil t nil)) nil 20 nil #s(yas--field 1 1498 1507 nil nil nil t nil) nil nil)) (1482 . 1518) (#("GetLocationArea(${1:locationArea string})" 0 41 (fontified nil)) . 1482) (1482 . 1523) (#("GetLocationArea" 0 15 (fontified nil)) . -1482) (1482 . 1497)) nil (25850 3833 134565 505000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1505) (1505 . 1506) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1505) (1505 . 1506) (1499 . 1506) (#("locationArea string" 0 12 (fontified nil face tree-sitter-hl-face:variable) 12 13 (fontified nil) 13 19 (fontified nil face tree-sitter-hl-face:variable)) . 1499) (1498 . 1499)) nil (25850 3833 134564 52000) 0 nil])
([nil nil ((1505 . 1506)) nil (25850 3833 134563 71000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face tree-sitter-hl-face:number)) . -1505) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 1506) nil (25850 3833 134562 399000) 0 nil])
([nil nil ((1505 . 1506)) nil (25850 3833 134561 297000) 0 nil])
([nil nil ((apply yas--snippet-revive 1482 1508 #s(yas--snippet nil (#s(yas--field 1 1498 1507 nil nil nil t nil)) nil 20 nil #s(yas--field 1 1498 1507 nil nil nil t nil) nil nil))) nil (25850 3833 134560 877000) 0 nil])
([nil nil ((1508 . 1510)) nil (25850 3833 134560 456000) 0 nil])
([nil nil ((1510 . 1529)) nil (25850 3833 134559 674000) 0 nil])
([nil nil ((apply yas--snippet-revive 1525 1543 #s(yas--snippet nil nil nil 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 21 nil nil nil nil)) (1525 . 1543) (#("locationAreaObject" 0 18 (fontified nil)) . 1525) (1525 . 1543) (#("loca" 0 4 (fontified nil)) . 1525) (1525 . 1529) (#("locationAreaObject" 0 18 (fontified nil)) . -1525) (1525 . 1543) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1525) (undo-tree-id193 . -4) (undo-tree-id194 . -4) 1529) nil (25850 3833 134558 853000) 0 nil])
([nil nil ((1543 . 1544)) nil (25850 3833 134556 689000) 0 nil])
([nil nil ((apply yas--snippet-revive 1544 1561 #s(yas--snippet nil nil nil 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 22 nil nil nil nil)) (1544 . 1561) (#("PokemonEncounters" 0 17 (fontified nil)) . 1544) (1544 . 1561) (#("PokemonEncounters" 0 17 (fontified nil)) . -1544) (1544 . 1561)) nil (25850 3833 134555 817000) 0 nil])
([nil nil ((1561 . 1562)) nil (25850 3833 134554 555000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1561) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 1562) nil (25850 3833 134553 643000) 0 nil])
([nil nil ((1561 . 1563)) nil (25850 3833 134552 190000) 0 nil])
([nil nil ((1563 . 1565)) nil (25850 3833 134551 289000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1563) (undo-tree-id189 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1564) (undo-tree-id190 . -1) 1565) nil (25850 3833 134550 427000) 0 nil])
([nil nil ((1563 . 1564)) nil (25850 3833 134549 225000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1563) (undo-tree-id188 . -1) 1564) nil (25850 3833 134548 774000) 0 nil])
([nil nil ((1563 . 1565)) nil (25850 3833 134547 832000) 0 nil])
([nil nil ((1565 . 1566)) nil (25850 3833 134547 231000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1565) (undo-tree-id187 . -1) 1566) nil (25850 3833 134546 550000) 0 nil])
([nil nil ((1565 . 1582)) nil (25850 3833 134545 398000) 0 nil])
([nil nil ((1582 . 1587)) nil (25850 3833 134544 837000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1584) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1585) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1586) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 1587) nil (25850 3833 134543 474000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -1580) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -1581) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1582) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1583) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 1584) nil (25850 3833 134540 288000) 0 nil])
([nil nil ((1580 . 1581)) nil (25850 3833 134536 591000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1580) (undo-tree-id172 . -1) 1581) nil (25850 3833 134536 80000) 0 nil])
([nil nil ((1582 . 1588) (#("]" 0 1 (fontified nil)) . -1581) (1581 . 1582) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1581) (1581 . 1582) (1580 . 1582)) nil (25850 3833 134535 219000) 0 nil])
([nil nil ((1588 . 1590)) nil (25850 3833 134534 46000) 0 nil])
([nil nil ((1590 . 1594)) nil (25850 3833 134533 616000) 0 nil])
([nil nil ((1594 . 1598)) nil (25850 3833 134532 984000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1597) (undo-tree-id171 . -1) 1598) nil (25850 3833 134532 373000) 0 nil])
([nil nil ((1597 . 1599)) nil (25850 3833 134531 411000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1597) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t)) . -1598) (undo-tree-id170 . -1) 1599) nil (25850 3833 134530 590000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1607) (1607 . 1608) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1607) (1607 . 1608) (1597 . 1608)) nil (25850 3833 134528 897000) 0 nil])
([nil nil ((1607 . 1611)) nil (25850 3833 134527 604000) 0 nil])
([nil nil ((apply yas--snippet-revive 1607 1615 #s(yas--snippet nil nil nil 23 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 23 nil nil nil nil)) (1607 . 1615) (#("pokemons" 0 8 (fontified nil)) . 1607) (1607 . 1615) (#("poke" 0 4 (fontified nil)) . 1607) (1607 . 1611) (#("pokemons" 0 8 (fontified nil)) . -1607) (1607 . 1615) (#("poke" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1607) (undo-tree-id167 . -4) (undo-tree-id168 . -4) 1611) nil (25850 3833 134526 492000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1618) (1618 . 1619) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1618) (1618 . 1619) (1616 . 1619)) nil (25850 3833 134523 507000) 0 nil])
([nil nil ((1619 . 1621) (1620 . 1621) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1619) (1619 . 1621) (1618 . 1620)) nil (25850 3833 134521 904000) 0 nil])
([nil nil ((1621 . 1626)) nil (25850 3833 134520 501000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1594) (undo-tree-id166 . -1) 1595) nil (25850 3833 134519 720000) 0 nil])
([nil nil ((1594 . 1596)) nil (25850 3833 134518 477000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1595) (undo-tree-id165 . -1) 1596) nil (25850 3833 134517 766000) 0 nil])
([nil nil ((1626 . 1628)) nil (25850 3833 134517 65000) 0 nil])
([nil nil ((apply yas--snippet-revive 1621 1633 #s(yas--snippet nil nil nil 24 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 24 nil nil nil nil)) (1621 . 1633) (#("pokemonNames" 0 12 (fontified nil)) . 1621) (1621 . 1633) (#("pokemon" 0 7 (fontified nil)) . 1621) (1621 . 1628) (#("pokemonNames" 0 12 (fontified nil)) . -1621) (1621 . 1633) (#("pokemon" 0 7 (fontified t face tree-sitter-hl-face:variable)) . -1621) (undo-tree-id163 . -7) (undo-tree-id164 . -7) 1628) nil (25850 3833 134516 123000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1634) (1634 . 1635) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1634) (1634 . 1635) (1633 . 1635)) nil (25850 3833 134513 758000) 0 nil])
([nil nil ((1634 . 1635)) nil (25850 3833 134513 27000) 0 nil])
([nil nil ((1636 . 1639)) nil (25850 3833 134512 426000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1580) (undo-tree-id153 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1581) (undo-tree-id154 . -1) (undo-tree-id155 . 1) (undo-tree-id156 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1582) (undo-tree-id157 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1583) (undo-tree-id158 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1584) (undo-tree-id159 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1585) (undo-tree-id160 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1586) (undo-tree-id161 . -1) (#("g" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1587) (undo-tree-id162 . -1) 1588) nil (25850 3833 134511 444000) 0 nil])
([nil nil ((1580 . 1585)) nil (25850 3833 134503 109000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1580) (undo-tree-id148 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1581) (undo-tree-id149 . -1) (#("k" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1582) (undo-tree-id150 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1583) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t)) . -1584) (undo-tree-id152 . -1) 1585) nil (25850 3833 134502 47000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1587) (1587 . 1588) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1587) (1587 . 1588) (1580 . 1588)) nil (25850 3833 134499 832000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1588) (1588 . 1589) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1588) (1588 . 1589) (1587 . 1589)) nil (25850 3833 134497 989000) 0 nil])
([nil nil ((1589 . 1597)) nil (25850 3833 134496 907000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1595) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t)) . -1596) (undo-tree-id147 . -1) 1597) nil (25850 3833 134496 55000) 0 nil])
([nil nil ((1595 . 1598)) nil (25850 3833 134494 733000) 0 nil])
([nil nil ((1650 . 1652)) nil (25850 3833 134494 472000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1650) (undo-tree-id144 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1651) (undo-tree-id145 . -1) 1652) nil (25850 3833 134493 911000) 0 nil])
([nil nil ((1650 . 1652)) nil (25850 3833 134492 799000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1651) (undo-tree-id143 . -1) 1652) nil (25850 3833 134492 429000) 0 nil])
([nil nil ((1651 . 1652)) nil (25850 3833 134490 906000) 0 nil])
([nil nil ((1652 . 1655)) nil (25850 3833 134490 515000) 0 nil])
([nil nil ((1655 . 1659)) nil (25850 3833 134490 24000) 0 nil])
([nil nil ((1659 . 1660)) nil (25850 3833 134488 972000) 0 nil])
([nil nil ((1561 . 1562)) nil (25850 3833 134488 561000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1561) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 1562) nil (25850 3833 134487 820000) 0 nil])
([nil nil ((1610 . 1611)) nil (25850 3833 134486 407000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1660) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 1661) nil (25850 3833 134485 686000) 0 nil])
([nil nil ((1660 . 1661)) nil (25850 3833 134483 752000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1657) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1658) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1659) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1660) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 1661) nil (25850 3833 134481 668000) 0 nil])
([nil nil ((1657 . 1658)) nil (25850 3833 134266 155000) 0 nil])
([nil nil ((apply yas--snippet-revive 1653 1665 #s(yas--snippet nil nil nil 25 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 25 nil nil nil nil)) (1653 . 1665) (#("Pokemon.Name" 0 12 (fontified nil)) . 1653) (1653 . 1665) (#("Pokem" 0 5 (fontified nil)) . 1653) (1653 . 1658) (#("Pokemon.Name" 0 12 (fontified nil)) . -1653) (1653 . 1665) (#("Pokem" 0 5 (fontified t face tree-sitter-hl-face:property)) . -1653) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) 1658) nil (25850 3833 134262 959000) 0 nil])
([nil nil ((1668 . 1670) (t 25850 3833 144880 570000)) nil (25850 3861 198383 716000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1668) (undo-tree-id411 . -1) (#("	" 0 1 (fontified t)) . -1669) (undo-tree-id412 . -1) 1670) nil (25850 3861 198382 724000) 0 nil])
([nil nil ((#("	var pokemonNames = make([]string, 5)
" 0 1 (fontified t) 1 4 (fontified t face tree-sitter-hl-face:keyword) 4 5 (fontified t) 5 17 (fontified t face tree-sitter-hl-face:variable) 17 18 (fontified t) 18 19 (fontified t face tree-sitter-hl-face:operator) 19 20 (fontified t) 20 24 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable)) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 33 (fontified t face tree-sitter-hl-face:type) 33 35 (fontified t) 35 36 (fontified t face tree-sitter-hl-face:number) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 38 (fontified t)) . 1562) (undo-tree-id406 . 28) (undo-tree-id407 . -37) (undo-tree-id408 . -37) (undo-tree-id409 . -37) (undo-tree-id410 . -9) 1571) nil (25850 3861 198381 222000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1595) (undo-tree-id388 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1596) (undo-tree-id389 . -1) (#("k" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1597) (undo-tree-id390 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1598) (undo-tree-id391 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1599) (undo-tree-id392 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1600) (undo-tree-id393 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1601) (undo-tree-id394 . -1) (#("N" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1602) (undo-tree-id395 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1603) (undo-tree-id396 . -1) (#("m" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -1604) (undo-tree-id397 . -1) (#("e" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -1605) (undo-tree-id398 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1606) (undo-tree-id399 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -1607) (undo-tree-id400 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1608) (undo-tree-id401 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -1609) (undo-tree-id402 . -1) (#(" " 0 1 (fontified t)) . -1610) (undo-tree-id403 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -1611) (undo-tree-id404 . -1) (#(" " 0 1 (fontified t)) . -1612) (undo-tree-id405 . -1) 1613) nil (25850 3861 198370 522000) 0 nil])
([nil nil ((1595 . 1599)) nil (25850 3861 198363 799000) 0 nil])
([nil nil ((1599 . 1600)) nil (25850 3861 198363 468000) 0 nil])
([nil nil ((1600 . 1603)) nil (25850 3861 198362 907000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1607 1621 nil nil nil t nil)) nil 26 nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil nil)) (1599 . 1616) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 1599) (1599 . 1621) (#("Prinv" 0 4 (fontified nil) 4 5 (fontified nil face tree-sitter-hl-face:property)) . 1599) (1599 . 1603) (#("Println" 0 7 (fontified nil)) . -1599) (1599 . 1606) (#("Prin" 0 4 (fontified t face tree-sitter-hl-face:property)) . -1599) (undo-tree-id386 . -4) (undo-tree-id387 . -4) 1603) nil (25850 3861 198361 986000) 0 nil])
([nil nil ((1608 . 1609) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 1608) (1607 . 1608)) nil (25850 3861 198360 343000) 0 nil])
([nil nil ((apply yas--snippet-revive 1609 1616 #s(yas--snippet nil nil nil 27 nil nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 27 nil nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil)) (1609 . 1616) (#("Pokemon" 0 7 (fontified nil)) . 1609) (1609 . 1616) (#("Pokemon" 0 7 (fontified nil)) . -1609) (1609 . 1616)) nil (25850 3861 198359 681000) 0 nil])
([nil nil ((1616 . 1617)) nil (25850 3861 198358 649000) 0 nil])
([nil nil ((apply yas--snippet-revive 1617 1621 #s(yas--snippet nil nil nil 28 nil nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 28 nil nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil)) (1617 . 1621) (#("Name" 0 4 (fontified nil)) . 1617) (1617 . 1621) (#("Name" 0 4 (fontified nil)) . -1617) (1617 . 1621)) nil (25850 3861 198358 108000) 0 nil])
([nil nil ((apply yas--snippet-revive 1599 1622 #s(yas--snippet nil (#s(yas--field 1 1607 1621 nil nil nil t nil)) nil 26 nil #s(yas--field 1 1607 1621 nil nil nil t nil) nil nil))) nil (25850 3861 198357 76000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1622) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("P" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1623) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1624) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("k" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1625) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1626) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1627) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1628) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1629) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("." 0 1 (fontified t)) . -1630) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("N" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1631) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1632) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1633) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1634) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 1635) nil (25850 3861 198351 536000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1567) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 1568 (t 25850 3861 303619 649000)) nil (25850 3867 365768 158000) 0 nil])
([nil nil ((1567 . 1568)) nil (25850 3867 365755 555000) 0 nil])
([nil nil ((1625 . 1627) (t 25850 3867 376564 393000)) nil (25850 3876 767465 242000) 0 nil])
([nil nil ((1627 . 1637)) nil (25850 3876 767461 676000) 0 nil])
([nil nil ((2150 . 2153) (t 25850 3876 778479 544000)) nil (25850 5241 592919 5000) 0 nil])
([nil nil ((2154 . 2161) (2153 . 2155) (#("\"" 0 1 (fontified nil)) . -2153) (2153 . 2154)) nil (25850 5241 592918 574000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -2165) (2165 . 2166) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -2165) (2165 . 2166) (2162 . 2166)) nil (25850 5241 592918 73000) 0 nil])
([nil nil ((2166 . 2169) (2167 . 2169) (#("			" 0 3 (fontified nil face (rainbow-delimiters-depth-3-face))) . 2166) (2166 . 2169) (2165 . 2167)) nil (25850 5241 592917 542000) 0 nil])
([nil nil ((2169 . 2170)) nil (25850 5241 592917 131000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -2169) (undo-tree-id476 . -1) 2170) nil (25850 5241 592916 450000) 0 nil])
([nil nil ((2170 . 2174) (2169 . 2171) (#("\"" 0 1 (fontified nil)) . -2169) (2169 . 2170)) nil (25850 5241 592915 699000) 0 nil])
([nil nil ((2177 . 2179) (#("\"" 0 1 (fontified nil)) . -2177) (2175 . 2178)) nil (25850 5241 592915 7000) 0 nil])
([nil nil ((2178 . 2185)) nil (25850 5241 592914 476000) 0 nil])
([nil nil ((2186 . 2187)) nil (25850 5241 592914 236000) 0 nil])
([nil nil ((2187 . 2191)) nil (25850 5241 592913 925000) 0 nil])
([nil nil ((2191 . 2193) (#("\"" 0 1 (fontified nil)) . -2191) (2191 . 2192)) nil (25850 5241 592913 575000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -2191) (undo-tree-id475 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . 2192)) nil (25850 5241 592912 683000) 0 nil])
([nil nil ((2191 . 2194)) nil (25850 5241 592911 671000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2204 2230 nil nil nil t nil)) nil 35 nil #s(yas--field 1 2204 2230 nil nil nil t nil) nil nil)) (2191 . 2211) (#("Description: ${1:string}," 0 25 (fontified nil)) . 2191) (2191 . 2216) (#("Des" 0 3 (fontified nil)) . 2191) (2191 . 2194) (#("Description" 0 11 (fontified nil)) . -2191) (2191 . 2202) (#("Des" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -2191) (undo-tree-id473 . -3) (undo-tree-id474 . -3) 2194) nil (25850 5241 592910 709000) 0 nil])
([nil nil ((2205 . 2211) (2204 . 2206) (#("\"" 0 1 (fontified nil)) . -2204) (#("string" 0 6 (fontified nil face tree-sitter-hl-face:variable)) . 2205) (2204 . 2205)) nil (25850 5241 592909 407000) 0 nil])
([nil nil ((2211 . 2229)) nil (25850 5241 592908 966000) 0 nil])
([nil nil ((apply yas--snippet-revive 2191 2231 #s(yas--snippet nil (#s(yas--field 1 2204 2230 nil nil nil t nil)) nil 35 nil #s(yas--field 1 2204 2230 nil nil nil t nil) nil nil))) nil (25850 5241 592908 786000) 0 nil])
([nil nil ((2231 . 2235)) nil (25850 5241 592908 335000) 0 nil])
([nil nil ((2235 . 2238)) nil (25850 5241 592908 64000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2245 2252 nil nil nil t nil)) nil 36 nil #s(yas--field 1 2245 2252 nil nil nil t nil) nil nil)) (2235 . 2274) (#("Callback: ${1:func(params ...string) error}," 0 44 (fontified nil)) . 2235) (2235 . 2279) (#("Cal" 0 3 (fontified nil)) . 2235) (2235 . 2238) (#("Callback" 0 8 (fontified nil)) . -2235) (2235 . 2243) (#("Cal" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -2235) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) 2238) nil (25850 5241 592907 213000) 0 nil])
([nil nil ((2246 . 2249) (#("func(params ...string) error" 0 4 (fontified nil face tree-sitter-hl-face:keyword) 4 5 (fontified nil face (rainbow-delimiters-depth-4-face)) 5 11 (fontified nil face tree-sitter-hl-face:variable) 11 12 (fontified nil) 12 15 (fontified nil face tree-sitter-hl-face:operator) 15 21 (fontified nil face tree-sitter-hl-face:type) 21 22 (fontified nil face (rainbow-delimiters-depth-4-face)) 22 23 (fontified nil) 23 28 (fontified nil face tree-sitter-hl-face:type)) . 2246) (undo-tree-id468 . -28) (2245 . 2246)) nil (25850 5241 592904 107000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -2247) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -2248) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 2249) nil (25850 5241 592903 115000) 0 nil])
([nil nil ((2247 . 2249)) nil (25850 5241 592896 452000) 0 nil])
([nil nil ((apply yas--snippet-revive 2245 2252 #s(yas--snippet nil nil nil 37 nil nil #s(yas--field 1 2245 2252 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 37 nil nil #s(yas--field 1 2245 2252 nil nil nil t nil) nil)) (2245 . 2252) (#("explore" 0 7 (fontified nil)) . 2245) (undo-tree-id418 . -7) (2245 . 2252) (#("expl" 0 4 (fontified nil)) . 2245) (undo-tree-id419 . -4) (2245 . 2249) (#("explore" 0 7 (fontified nil)) . -2245) (undo-tree-id420 . -7) (2245 . 2252) (#("expl" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -2245) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -1) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -3) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) 2249) nil (25850 5241 592895 250000) 0 nil])
([nil nil ((apply yas--snippet-revive 2235 2253 #s(yas--snippet nil (#s(yas--field 1 2245 2252 nil nil nil t nil)) nil 36 nil #s(yas--field 1 2245 2252 nil nil nil t nil) nil nil))) nil (25850 5241 592877 316000) 0 nil])
([nil nil ((2257 . 2258)) nil (25850 5241 592873 930000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . 2169) (t 25850 5241 603097 61000)) nil (25850 5541 955697 505000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t)) . 2173)) nil (25850 5541 955697 164000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (tree-sitter-hl-face:function tree-sitter-hl-face:variable))) . -1414) (undo-tree-id479 . -1) 1415) nil (25850 5541 955696 373000) 0 nil])
([nil nil ((1414 . 1415)) nil (25850 5541 955695 311000) 0 nil])
([nil nil ((1414 . 1421)) nil (25850 5541 955694 299000) 0 nil])
([nil nil ((2250 . 2257)) nil (25850 5541 955693 527000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -2257) (undo-tree-id477 . -1) (undo-tree-id478 . -1) 2258) nil (25850 5541 955692 696000) 0 nil])
([nil current ((2257 . 2258)) nil (25850 5541 955683 268000) 0 nil])
nil
