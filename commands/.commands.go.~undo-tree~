(undo-tree-save-format-version . 1)
"8923533d6296adef56ad551236f1067ed3fb9cb4"
[nil nil nil nil (25843 6661 306926 985000) 0 nil]
([nil nil ((1 . 4) (t 25843 6214 926680 604000)) nil (25843 6661 306925 733000) 0 nil])
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 4) nil (25843 6661 306924 922000) 0 nil])
([nil nil ((3 . 4)) nil (25843 6661 306923 559000) 0 nil])
([nil nil ((1 . 17) (#("pac" 0 3 (fontified nil)) . 1) (1 . 4) (#("package commands" 0 16 (fontified nil)) . -1) (1 . 17) (#("pac" 0 3 (face tree-sitter-hl-face:variable fontified t)) . -1) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -3) (undo-tree-id7 . -1) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) 4) nil (25843 6661 306922 106000) 0 nil])
([nil nil ((17 . 19)) nil (25843 6661 306860 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19 . 20) (#("
" 0 1 (fontified nil)) . -488) (19 . 489) (t 25843 6661 311599 547000)) nil (25843 11040 455619 239000) 0 nil])
([nil nil ((488 . 490)) nil (25843 11040 455617 646000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -510) (510 . 511) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -510) (510 . 511) (490 . 511)) nil (25843 11040 455616 474000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -513) (513 . 514) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -513) (513 . 514) (511 . 514)) nil (25843 11040 455614 520000) 0 nil])
([nil nil ((514 . 515) (#("	" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 514) (514 . 515) (513 . 515)) nil (25843 11040 455612 497000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -516) (516 . 517) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -516) (516 . 517) (511 . 517)) nil (25843 11040 455610 453000) 0 nil])
([nil nil ((516 . 522)) nil (25843 11040 455608 18000) 0 nil])
([nil nil ((523 . 533)) nil (25843 11040 455607 187000) 0 nil])
([nil nil ((537 . 544)) nil (25843 11040 455606 415000) 0 nil])
([nil nil ((535 . 537)) nil (25843 11040 455605 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 538 . 539) (#("
" 0 1 (fontified nil)) . -789) (537 . 790) 536) nil (25843 11040 455603 991000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 536) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (25843 11040 455601 466000) 0 nil])
([nil nil ((796 . 797)) nil (25843 11040 455579 746000) 0 nil])
([nil nil ((797 . 802)) nil (25843 11040 455578 374000) 0 nil])
([nil nil ((804 . 805)) nil (25843 11040 455572 383000) 0 nil])
([nil nil ((18 . 19) (t 25843 11040 556514 987000)) nil (25843 11060 253567 332000) 0 nil])
([nil nil ((19 . 21)) nil (25843 11060 253566 130000) 0 nil])
([nil nil ((21 . 25)) nil (25843 11060 253565 188000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -22) (undo-tree-id20 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -23) (undo-tree-id21 . -1) (#("o" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -24) (undo-tree-id22 . -1) 25) nil (25843 11060 253563 606000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -27) (27 . 28) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -27) (27 . 28) (22 . 28)) nil (25843 11060 253547 316000) 0 nil])
([nil nil ((28 . 29) (#("	" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 28) (28 . 29) (27 . 29)) nil (25843 11060 253545 482000) 0 nil])
([nil nil ((30 . 33) (29 . 31) (#("\"" 0 1 (fontified nil)) . -29) (29 . 30)) nil (25843 11060 253544 40000) 0 nil])
([nil nil ((34 . 36)) nil (25843 11060 253542 487000) 0 nil])
([nil nil ((37 . 43) (36 . 38) (#("\"" 0 1 (fontified nil)) . -36) (36 . 37)) nil (25843 11060 253533 450000) 0 nil])
([nil nil ((#("\\" 0 1 (face tree-sitter-hl-face:escape syntax-table (9) fontified t)) . -333) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:string tree-sitter-hl-face:escape) fontified t)) . -334) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 335 (t 25843 11060 261623 302000)) nil (25843 11079 845555 81000) 0 nil])
([nil nil ((#("l" 0 1 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -323) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property) fontified t)) . -324) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 325) nil (25843 11079 845545 814000) 0 nil])
([nil nil ((331 . 335)) nil (25843 11079 845522 50000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . -53) (undo-tree-id47 . -1) 54 (t 25843 11079 945738 718000)) nil (25843 11525 659400 924000) 0 nil])
([nil nil ((53 . 54)) nil (25843 11525 659398 249000) 0 nil])
([nil nil ((#("C" 0 1 (face tree-sitter-hl-face:type fontified t)) . -53) (undo-tree-id46 . -1) 54) nil (25843 11525 659396 696000) 0 nil])
([nil nil ((53 . 54)) nil (25843 11525 659377 197000) 0 nil])
([nil nil ((53 . 54) (#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . 53) (171 . 172) (#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . 171) (551 . 552) (#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . 551) (585 . 586) (#("c" 0 1 (face tree-sitter-hl-face:type fontified t)) . 585) (t 25843 11525 760043 222000)) nil (25843 11569 874086 919000) 0 nil])
([nil nil ((74 . 75) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -74) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 75 (612 . 613) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 612) (722 . 723) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 722) (t 25843 11569 972850 325000)) nil (25843 11778 618525 26000) 0 nil])
([nil nil ((94 . 95) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . 94) (396 . 397) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . 396) (636 . 637) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 636) (746 . 747) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 746)) nil (25843 11778 618515 317000) 0 nil])
([nil nil ((114 . 115) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . 114) (676 . 677) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 676) (782 . 783) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 782)) nil (25843 11778 618510 367000) 0 nil])
([nil nil ((516 . 518) (t 25843 11778 718257 109000)) nil (25843 15182 128441 902000) 0 nil])
([nil nil ((518 . 534)) nil (25843 15182 128441 330000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -533) (undo-tree-id142 . -1) 534) nil (25843 15182 128440 769000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -543) (543 . 544) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -543) (543 . 544) (535 . 544) (#(")" 0 1 (fontified nil)) . -534) (534 . 535) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -534) (534 . 535) (533 . 535)) nil (25843 15182 128439 978000) 0 nil])
([nil nil ((544 . 545) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 544) (544 . 545) (543 . 545)) nil (25843 15182 128439 16000) 0 nil])
([nil nil ((545 . 546)) nil (25843 15182 128438 185000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -545) (undo-tree-id141 . -1) 546) nil (25843 15182 128437 543000) 0 nil])
([nil nil ((545 . 549)) nil (25843 15182 128436 612000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -545) (undo-tree-id137 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -546) (undo-tree-id138 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -547) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t)) . -548) (undo-tree-id140 . -1) 549) nil (25843 15182 128435 610000) 0 nil])
([nil nil ((545 . 556)) nil (25843 15182 128433 796000) 0 nil])
([nil nil ((556 . 561)) nil (25843 15182 128433 145000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -557) (undo-tree-id136 . -1) 558) nil (25843 15182 128432 504000) 0 nil])
([nil nil ((557 . 559)) nil (25843 15182 128431 712000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -558) (undo-tree-id135 . -1) 559) nil (25843 15182 128431 332000) 0 nil])
([nil nil ((558 . 563)) nil (25843 15182 128430 650000) 0 nil])
([nil nil ((566 . 571)) nil (25843 15182 128430 79000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -570) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 571) nil (25843 15182 128429 769000) 0 nil])
([nil nil ((44 . 45)) nil (25843 15182 128428 727000) 0 nil])
([nil nil ((#("Å±" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -44) (undo-tree-id132 . -1) 45) nil (25843 15182 128428 326000) 0 nil])
([nil nil ((44 . 46)) nil (25843 15182 128427 94000) 0 nil])
([nil nil ((47 . 51) (46 . 48) (#("\"" 0 1 (fontified nil)) . -46) (46 . 47)) nil (25843 15182 128426 332000) 0 nil])
([nil nil ((47 . 57) (#("GoPo" 0 4 (fontified nil)) . 47) (47 . 51) (#("GoPokedex/" 0 10 (fontified nil)) . -47) (47 . 57) (#("GoPo" 0 4 (fontified t face tree-sitter-hl-face:string)) . -47) (undo-tree-id130 . -4) (undo-tree-id131 . -4) 51) nil (25843 15182 128425 100000) 0 nil])
([nil nil ((57 . 60)) nil (25843 15182 128423 267000) 0 nil])
([nil nil ((57 . 64) (#("ser" 0 3 (fontified nil)) . 57) (57 . 60) (#("service" 0 7 (fontified nil)) . -57) (57 . 64) (#("ser" 0 3 (fontified t face tree-sitter-hl-face:string)) . -57) (undo-tree-id128 . -3) (undo-tree-id129 . -3) 60) nil (25843 15182 128422 585000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -587) (undo-tree-id124 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -588) (undo-tree-id125 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -589) (undo-tree-id126 . -1) (#("L" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -590) (undo-tree-id127 . -1) 591) nil (25843 15182 128420 351000) 0 nil])
([nil nil ((587 . 590)) nil (25843 15182 128418 157000) 0 nil])
([nil nil ((587 . 594) (#("ser" 0 3 (fontified nil)) . 587) (587 . 590) (#("service" 0 7 (fontified nil)) . -587) (587 . 594) (#("ser" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -587) (undo-tree-id122 . -3) (undo-tree-id123 . -3) 590) nil (25843 15182 128417 436000) 0 nil])
([nil nil ((594 . 595)) nil (25843 15182 128415 953000) 0 nil])
([nil nil ((595 . 623) (#("GetLocation" 0 11 (fontified nil)) . -595) (595 . 606)) nil (25843 15182 128415 242000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -607) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -608) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("1" 0 1 (fontified t face tree-sitter-hl-face:number)) . -609) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#(":" 0 1 (fontified t)) . -610) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -611) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -612) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -613) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t)) . -614) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -615) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -616) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -617) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -618) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -619) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("g" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -620) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -621) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . 1) (undo-tree-id121 . -1) 622) nil (25843 15182 128412 907000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -606) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 607)) nil (25843 15182 128231 77000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -605) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 606) nil (25843 15182 128229 975000) 0 nil])
([nil nil ((605 . 606)) nil (25843 15182 128228 642000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 607 607 nil nil nil t nil)) nil 6 nil #s(yas--field 1 607 607 nil nil nil t nil) nil nil)) (595 . 618) (#("GetLocation(${1:url string})" 0 28 (fontified nil)) . 595) (595 . 623) (#("GetLocation" 0 11 (fontified nil)) . 595) (595 . 606) (#("GetLocation" 0 11 (fontified t face tree-sitter-hl-face:property)) . -595) (undo-tree-id84 . -11) (undo-tree-id85 . -11) 606) nil (25843 15182 128227 781000) 0 nil])
([nil nil ((#("url string" 0 3 (fontified nil face tree-sitter-hl-face:variable) 3 4 (fontified nil) 4 10 (fontified nil face tree-sitter-hl-face:variable)) . 608) (607 . 608)) nil (25843 15182 128226 148000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -607) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 608) nil (25843 15182 128225 436000) 0 nil])
([nil nil ((apply yas--snippet-revive 595 608 #s(yas--snippet nil (#s(yas--field 1 607 607 nil nil nil t nil)) nil 6 nil #s(yas--field 1 607 607 nil nil nil t nil) nil nil))) nil (25843 15182 128224 24000) 0 nil])
([nil nil ((564 . 566)) nil (25843 15182 128223 333000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -565) (undo-tree-id81 . -1) 566) nil (25843 15182 128222 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 565 . 566) (#("
" 0 1 (fontified nil)) . -619) (565 . 620)) nil (25843 15182 128222 110000) 0 nil])
([nil nil ((566 . 569)) nil (25843 15182 128221 730000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -568) (undo-tree-id80 . -1) 569) nil (25843 15182 128221 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -564) (undo-tree-id79 . -1) 565) nil (25843 15182 128220 848000) 0 nil])
([nil nil ((663 . 666)) nil (25843 15182 128220 307000) 0 nil])
([nil nil ((667 . 669)) nil (25843 15182 128219 836000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15182 128219 345000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15182 128218 854000) 0 nil])
([nil nil ((539 . 556)) nil (25843 15182 128218 493000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -554) (undo-tree-id77 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -555) (undo-tree-id78 . -1) 556) nil (25843 15182 128217 982000) 0 nil])
([nil nil ((554 . 556)) nil (25843 15182 128217 141000) 0 nil])
([nil nil ((#("\"https://pokeapi.co/api/v2/location-area\"" 0 1 (fontified t face tree-sitter-hl-face:string) 1 39 (fontified t face tree-sitter-hl-face:string) 39 40 (rear-nonsticky t fontified t face tree-sitter-hl-face:string) 40 41 (fontified t face tree-sitter-hl-face:string)) . 598) (undo-tree-id71 . -40) (undo-tree-id72 . 38) (undo-tree-id73 . -40) (undo-tree-id74 . -40) (undo-tree-id75 . -40) (undo-tree-id76 . -40) 638) nil (25843 15182 128216 750000) 0 nil])
([nil nil ((556 . 559)) nil (25843 15182 128214 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 599 . 600) (nil fontified nil 559 . 600) (559 . 600) 558) nil (25843 15182 128214 496000) 0 nil])
([nil nil ((#("  const url = 
" 0 2 (fontified t) 2 7 (fontified t face tree-sitter-hl-face:keyword) 7 8 (fontified t) 8 11 (fontified t face tree-sitter-hl-face:variable) 11 12 (fontified t) 12 13 (fontified t face tree-sitter-hl-face:operator) 13 14 (fontified t) 14 15 (fontified t)) . 628) (undo-tree-id63 . 1) (undo-tree-id64 . -13) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . 1) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) 641) nil (25843 15182 128213 875000) 0 nil])
([nil nil ((674 . 676)) nil (25843 15182 128209 487000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -670) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -671) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -672) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 673) nil (25843 15182 128208 835000) 0 nil])
([nil nil ((670 . 674)) nil (25843 15182 128205 910000) 0 nil])
([nil nil ((apply yas--snippet-revive 670 683 #s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 7 nil nil nil nil)) (670 . 683) (#("commandMapUrl" 0 13 (fontified nil)) . 670) (670 . 683) (#("comm" 0 4 (fontified nil)) . 670) (670 . 674) (#("commandMapUrl" 0 13 (fontified nil)) . -670) (670 . 683) (#("comm" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -670) (undo-tree-id52 . -4) (undo-tree-id53 . -4) 674) nil (25843 15182 128205 158000) 0 nil])
([nil nil ((684 . 686)) nil (25843 15182 128203 726000) 0 nil])
([nil nil ((686 . 693)) nil (25843 15182 128203 45000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -686) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -687) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -688) (undo-tree-id43 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -689) (undo-tree-id44 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -690) (undo-tree-id45 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -691) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id47 . -1) (#("
" 0 1 (fontified t)) . -693) (undo-tree-id48 . -1) (#("	" 0 1 (fontified t)) . -694) (undo-tree-id49 . -1) (#("
" 0 1 (fontified t)) . -695) (undo-tree-id50 . -1) (#("	" 0 1 (fontified t)) . -696) (undo-tree-id51 . -1) 697) nil (25843 15182 128201 582000) 0 nil])
([nil nil ((686 . 690)) nil (25843 15182 128195 561000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -689) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 690) nil (25843 15182 128195 60000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -686) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -687) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -688) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 689) nil (25843 15182 128193 567000) 0 nil])
([nil nil ((686 . 690)) nil (25843 15182 128190 962000) 0 nil])
([nil nil ((690 . 694)) nil (25843 15182 128190 241000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -690) (undo-tree-id29 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -691) (undo-tree-id30 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -692) (undo-tree-id31 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -693) (undo-tree-id32 . -1) 694) nil (25843 15182 128189 439000) 0 nil])
([nil nil ((690 . 691)) nil (25843 15182 128187 616000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -690) (undo-tree-id28 . -1) 691) nil (25843 15182 128187 65000) 0 nil])
([nil nil ((690 . 699)) nil (25843 15182 128186 83000) 0 nil])
([nil nil ((699 . 712)) nil (25843 15182 128185 412000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:type)) . -710) (undo-tree-id26 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:type)) . -711) (undo-tree-id27 . -1) 712) nil (25843 15182 128184 450000) 0 nil])
([nil nil ((710 . 713)) nil (25843 15182 128183 288000) 0 nil])
([nil nil ((713 . 715)) nil (25843 15182 128182 727000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:type)) . -713) (undo-tree-id24 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:type)) . -714) (undo-tree-id25 . -1) 715) nil (25843 15182 128182 15000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -718) (718 . 719) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -718) (718 . 719) (713 . 719)) nil (25843 15182 128180 853000) 0 nil])
([nil nil ((719 . 721) (720 . 721) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 719) (719 . 721) (718 . 720)) nil (25843 15182 128180 52000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -692) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -693) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 694) nil (25843 15182 128179 50000) 0 nil])
([nil nil ((692 . 694)) nil (25843 15182 128176 575000) 0 nil])
([nil nil ((694 . 700)) nil (25843 15182 128176 24000) 0 nil])
([nil nil ((722 . 723)) nil (25843 15182 128175 513000) 0 nil])
([nil nil ((728 . 732)) nil (25843 15182 128174 852000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -728) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -729) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -730) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -731) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 732) nil (25843 15182 128174 361000) 0 nil])
([nil nil ((728 . 734)) nil (25843 15182 128171 395000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:property)) . -732) (undo-tree-id10 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:property)) . -733) (undo-tree-id11 . -1) 734) nil (25843 15182 128170 644000) 0 nil])
([nil nil ((732 . 736)) nil (25843 15182 128169 131000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 740 746 nil nil nil t nil)) nil 8 nil #s(yas--field 1 740 746 nil nil nil t nil) nil nil)) (732 . 749) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 732) (732 . 754) (#("Prin" 0 4 (fontified nil)) . 732) (732 . 736) (#("Println" 0 7 (fontified nil)) . -732) (732 . 739) (#("Prin" 0 4 (fontified t face tree-sitter-hl-face:property)) . -732) (undo-tree-id8 . -4) (undo-tree-id9 . -4) 736) nil (25843 15182 128167 839000) 0 nil])
([nil nil ((741 . 746) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 741) (740 . 741)) nil (25843 15182 128166 75000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -742) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -743) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:property)) . -744) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -745) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 746) nil (25843 15182 128164 953000) 0 nil])
([nil nil ((742 . 746)) nil (25843 15182 128132 132000) 0 nil])
([nil nil ((apply yas--snippet-revive 732 747 #s(yas--snippet nil (#s(yas--field 1 740 746 nil nil nil t nil)) nil 8 nil #s(yas--field 1 740 746 nil nil nil t nil) nil nil))) nil (25843 15182 128131 601000) 0 nil])
([nil nil ((690 . 692)) nil (25843 15182 128128 385000) 0 nil])
([nil nil ((752 . 754) (t 25843 15182 134793 630000)) nil (25843 15249 899488 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -752) (undo-tree-id156 . -1) (#("	" 0 1 (fontified t)) . -753) (undo-tree-id157 . -1) 754) nil (25843 15249 899487 303000) 0 nil])
([nil nil ((752 . 754)) nil (25843 15249 899485 480000) 0 nil])
([nil nil ((754 . 764)) nil (25843 15249 899485 69000) 0 nil])
([nil nil ((627 . 629)) nil (25843 15249 899484 448000) 0 nil])
([nil nil ((754 . 756)) nil (25843 15249 899483 376000) 0 nil])
([nil nil ((756 . 761)) nil (25843 15249 899482 715000) 0 nil])
([nil nil ((apply yas--snippet-revive 756 769 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (756 . 769) (#("commandMapUrl" 0 13 (fontified nil)) . 756) (756 . 769) (#("comma" 0 5 (fontified nil)) . 756) (756 . 761) (#("commandMapUrl" 0 13 (fontified nil)) . -756) (756 . 769) (#("comma" 0 5 (fontified t face tree-sitter-hl-face:variable)) . -756) (undo-tree-id154 . -5) (undo-tree-id155 . -5) 761) nil (25843 15249 899481 853000) 0 nil])
([nil nil ((769 . 772)) nil (25843 15249 899479 559000) 0 nil])
([nil nil ((772 . 776)) nil (25843 15249 899479 28000) 0 nil])
([nil nil ((538 . 539)) nil (25843 15249 899477 966000) 0 nil])
([nil nil ((539 . 547)) nil (25843 15249 899477 315000) 0 nil])
([nil nil ((547 . 560)) nil (25843 15249 899476 713000) 0 nil])
([nil nil ((623 . 627)) nil (25843 15249 899475 742000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -555) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -556) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -557) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -558) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:constant\.builtin)) . -559) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 560) nil (25843 15249 899474 399000) 0 nil])
([nil nil ((555 . 561)) nil (25843 15249 899236 3000) 0 nil])
([nil nil ((627 . 629)) nil (25843 15249 899235 392000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -628) (undo-tree-id143 . -1) 629) nil (25843 15249 899234 590000) 0 nil])
([nil nil ((628 . 630)) nil (25843 15249 899227 527000) 0 nil])
([nil nil ((630 . 646)) nil (25843 15249 899224 451000) 0 nil])
([nil nil ((822 . 825) (t 25843 15250 250 300000)) nil (25843 15280 29642 859000) 0 nil])
([nil nil ((#("	commandMapUrl = locatio
" 0 1 (fontified t) 1 14 (fontified t face tree-sitter-hl-face:variable) 14 15 (fontified t) 15 16 (fontified t face tree-sitter-hl-face:operator) 16 17 (fontified t) 17 24 (fontified t face tree-sitter-hl-face:variable) 24 25 (fontified t)) . 801) (undo-tree-id178 . 1) (undo-tree-id179 . -24) (undo-tree-id180 . -23) (undo-tree-id181 . -23) 824) nil (25843 15280 29642 218000) 0 nil])
([nil nil ((800 . 802)) nil (25843 15280 29640 324000) 0 nil])
([nil nil ((816 . 818)) nil (25843 15280 29640 74000) 0 nil])
([nil nil ((818 . 821)) nil (25843 15280 29639 543000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -819) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -820) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 821) nil (25843 15280 29639 42000) 0 nil])
([nil nil ((819 . 828)) nil (25843 15280 29637 138000) 0 nil])
([nil nil ((#("var nextCommand string 
" 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t) 4 15 (fontified t face tree-sitter-hl-face:variable) 15 16 (fontified t) 16 22 (fontified t face tree-sitter-hl-face:type) 22 23 (fontified t) 23 24 (fontified t)) . 624) (undo-tree-id158 . 14) (undo-tree-id159 . -23) (undo-tree-id160 . -9) (undo-tree-id161 . -4) (undo-tree-id162 . -9) (undo-tree-id163 . -9) (undo-tree-id164 . -9) (undo-tree-id165 . -9) (undo-tree-id166 . -4) (undo-tree-id167 . -15) (undo-tree-id168 . -9) (undo-tree-id169 . -9) (undo-tree-id170 . -9) (undo-tree-id171 . -9) (undo-tree-id172 . -9) (undo-tree-id173 . -24) 633) nil (25843 15280 29634 523000) 0 nil])
([nil nil ((804 . 806) (t 25843 15280 130011 433000)) nil (25843 15393 28457 680000) 0 nil])
([nil nil ((651 . 652)) nil (25843 15393 28457 79000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -654) (654 . 655) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -654) (654 . 655) (652 . 655)) nil (25843 15393 28456 458000) 0 nil])
([nil nil ((654 . 661)) nil (25843 15393 28455 987000) 0 nil])
([nil nil ((apply yas--snippet-revive 654 667 #s(yas--snippet nil nil nil 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 10 nil nil nil nil)) (654 . 667) (#("commandMapUrl" 0 13 (fontified nil)) . 654) (654 . 667) (#("command" 0 7 (fontified nil)) . 654) (654 . 661) (#("commandMapUrl" 0 13 (fontified nil)) . -654) (654 . 667) (#("command" 0 7 (fontified t face tree-sitter-hl-face:variable)) . -654) (undo-tree-id211 . -7) (undo-tree-id212 . -7) 661) nil (25843 15393 28455 5000) 0 nil])
([nil nil ((667 . 674)) nil (25843 15393 28452 520000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -677) (677 . 678) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -677) (677 . 678) (675 . 678)) nil (25843 15393 28451 629000) 0 nil])
([nil nil ((678 . 680) (679 . 680) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 678) (678 . 680) (677 . 679)) nil (25843 15393 28450 527000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28449 324000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -680) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -681) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -682) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 684) nil (25843 15393 28448 653000) 0 nil])
([nil nil ((680 . 681)) nil (25843 15393 28446 269000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -680) (undo-tree-id202 . -1) 681) nil (25843 15393 28445 878000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28445 16000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -680) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -681) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -682) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 684) nil (25843 15393 28444 165000) 0 nil])
([nil nil ((680 . 684)) nil (25843 15393 28441 249000) 0 nil])
([nil nil ((684 . 687)) nil (25843 15393 28440 999000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 692 718 nil nil nil t nil)) nil 11 nil #s(yas--field 1 692 718 nil nil nil t nil) nil nil)) (684 . 701) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 684) (684 . 706) (#("Pri" 0 3 (fontified nil)) . 684) (684 . 687) (#("Println" 0 7 (fontified nil)) . -684) (684 . 691) (#("Pri" 0 3 (fontified t face tree-sitter-hl-face:property)) . -684) (undo-tree-id192 . -3) (undo-tree-id193 . -3) 687) nil (25843 15393 28440 308000) 0 nil])
([nil nil ((693 . 701) (692 . 694) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -692) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 693) (692 . 693)) nil (25843 15393 28438 634000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -698) (undo-tree-id189 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -699) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -700) (undo-tree-id191 . -1) 701) nil (25843 15393 28437 592000) 0 nil])
([nil nil ((698 . 701)) nil (25843 15393 28435 468000) 0 nil])
([nil nil ((701 . 717)) nil (25843 15393 28434 917000) 0 nil])
([nil nil ((717 . 718)) nil (25843 15393 28434 416000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -717) (undo-tree-id188 . -1) 718) nil (25843 15393 28433 705000) 0 nil])
([nil nil ((apply yas--snippet-revive 684 719 #s(yas--snippet nil (#s(yas--field 1 692 718 nil nil nil t nil)) nil 11 nil #s(yas--field 1 692 718 nil nil nil t nil) nil nil))) nil (25843 15393 28432 563000) 0 nil])
([nil nil ((717 . 725)) nil (25843 15393 28432 82000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -715) (undo-tree-id186 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -716) (undo-tree-id187 . -1) 717) nil (25843 15393 28431 421000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:string)) . -711) (undo-tree-id182 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -712) (undo-tree-id183 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -713) (undo-tree-id184 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:string)) . -714) (undo-tree-id185 . -1) 715) nil (25843 15393 28428 425000) 0 nil])
([nil nil ((711 . 720)) nil (25843 15393 28416 824000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 859) (undo-tree-id286 . -1) (t 25843 15393 36127 507000)) nil (25843 15449 724214 214000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -892) (892 . 893) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -892) (892 . 893) (886 . 893)) nil (25843 15449 724213 483000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -901) (901 . 902) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -901) (901 . 902) (893 . 902)) nil (25843 15449 724212 732000) 0 nil])
([nil nil ((902 . 903) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 902) (902 . 903) (901 . 903)) nil (25843 15449 724212 171000) 0 nil])
([nil nil ((730 . 733)) nil (25843 15449 724211 780000) 0 nil])
([nil nil ((733 . 735)) nil (25843 15449 724211 509000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -733) (undo-tree-id284 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -734) (undo-tree-id285 . -1) 735) nil (25843 15449 724210 748000) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil)) . -712) (undo-tree-id261 . -1) (#("c" 0 1 (fontified nil)) . -713) (undo-tree-id262 . -1) (#("a" 0 1 (fontified t)) . -714) (undo-tree-id263 . -1) (#("t" 0 1 (fontified t)) . -715) (undo-tree-id264 . -1) (#("i" 0 1 (fontified t)) . -716) (undo-tree-id265 . -1) (#("o" 0 1 (fontified t)) . -717) (undo-tree-id266 . -1) (#("n" 0 1 (fontified t)) . -718) (undo-tree-id267 . -1) (#("s" 0 1 (fontified t)) . -719) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -720) (undo-tree-id269 . -1) (#("t" 0 1 (fontified t)) . -721) (undo-tree-id270 . -1) (#("o" 0 1 (fontified t)) . -722) (undo-tree-id271 . -1) (#(" " 0 1 (fontified t)) . -723) (undo-tree-id272 . -1) (#("s" 0 1 (fontified t)) . -724) (undo-tree-id273 . -1) (#("h" 0 1 (fontified t)) . -725) (undo-tree-id274 . -1) (#("o" 0 1 (fontified t)) . -726) (undo-tree-id275 . -1) (#("w" 0 1 (fontified t)) . -727) (undo-tree-id276 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . -728) (undo-tree-id277 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -729) (undo-tree-id278 . -1) (undo-tree-id279 . 1) (undo-tree-id280 . -1) (#("
" 0 1 (fontified t)) . -730) (undo-tree-id281 . -1) (#("	" 0 1 (fontified t)) . -731) (undo-tree-id282 . -1) (#("	" 0 1 (fontified t)) . -732) (undo-tree-id283 . -1) 733) nil (25843 15449 724207 762000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -691) (undo-tree-id240 . -1) (#("\"" 0 1 (fontified t)) . -692) (undo-tree-id241 . -1) (#("N" 0 1 (fontified t)) . -693) (undo-tree-id242 . -1) (#("o" 0 1 (fontified t)) . -694) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id244 . -1) (#("m" 0 1 (fontified t)) . -696) (undo-tree-id245 . -1) (#("o" 0 1 (fontified t)) . -697) (undo-tree-id246 . -1) (#("r" 0 1 (fontified t)) . -698) (undo-tree-id247 . -1) (#("e" 0 1 (fontified t)) . -699) (undo-tree-id248 . -1) (#(" " 0 1 (fontified t)) . -700) (undo-tree-id249 . -1) (#("a" 0 1 (fontified t)) . -701) (undo-tree-id250 . -1) (#("v" 0 1 (fontified t)) . -702) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t)) . -703) (undo-tree-id252 . -1) (#("i" 0 1 (fontified t)) . -704) (undo-tree-id253 . -1) (#("l" 0 1 (fontified t)) . -705) (undo-tree-id254 . -1) (#("a" 0 1 (fontified t)) . -706) (undo-tree-id255 . -1) (#("b" 0 1 (fontified t)) . -707) (undo-tree-id256 . -1) (#("l" 0 1 (fontified t)) . -708) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t)) . -709) (undo-tree-id258 . -1) (#(" " 0 1 (fontified t)) . -710) (undo-tree-id259 . -1) (#("l" 0 1 (fontified t)) . -711) (undo-tree-id260 . -1) 712) nil (25843 15449 724196 50000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face tree-sitter-hl-face:property)) . -684) (undo-tree-id233 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:property)) . -685) (undo-tree-id234 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:property)) . -686) (undo-tree-id235 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -687) (undo-tree-id236 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:property)) . -688) (undo-tree-id237 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:property)) . -689) (undo-tree-id238 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -690) (undo-tree-id239 . -1) 691) nil (25843 15449 724186 312000) 0 nil])
([nil nil ((684 . 685)) nil (25843 15449 723941 143000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -681) (undo-tree-id229 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -682) (undo-tree-id230 . -1) (#("." 0 1 (fontified t)) . -683) (undo-tree-id231 . -1) (#("E" 0 1 (fontified t face tree-sitter-hl-face:property)) . -684) (undo-tree-id232 . -1) 685) nil (25843 15449 723940 362000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -680) (undo-tree-id228 . -1) 681) nil (25843 15449 723938 809000) 0 nil])
([nil nil ((680 . 687)) nil (25843 15449 723938 208000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 691 700 nil nil nil t nil)) nil 12 nil #s(yas--field 1 691 700 nil nil nil t nil) nil nil)) (687 . 703) (#("New(${1:text string})" 0 21 (fontified nil)) . 687) (687 . 708) (#("New" 0 3 (fontified nil)) . -687) (687 . 690)) nil (25843 15449 723937 757000) 0 nil])
([nil nil ((692 . 699) (691 . 693) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -691) (#("text string" 0 4 (fontified nil face tree-sitter-hl-face:variable) 4 5 (fontified nil) 5 11 (fontified nil face tree-sitter-hl-face:variable)) . 692) (691 . 692)) nil (25843 15449 723936 755000) 0 nil])
([nil nil ((apply yas--snippet-revive 687 701 #s(yas--snippet nil (#s(yas--field 1 691 700 nil nil nil t nil)) nil 12 nil #s(yas--field 1 691 700 nil nil nil t nil) nil nil))) nil (25843 15449 723936 54000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -680) (undo-tree-id218 . -1) (#("r" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -681) (undo-tree-id219 . -1) (#("r" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -682) (undo-tree-id220 . -1) (#("o" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -683) (undo-tree-id221 . -1) (#("r" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -684) (undo-tree-id222 . -1) (#("s" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -685) (undo-tree-id223 . -1) (#("." 0 1 (fontified t)) . -686) (undo-tree-id224 . -1) (#("N" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -687) (undo-tree-id225 . -1) (#("e" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -688) (undo-tree-id226 . -1) (#("w" 0 1 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -689) (undo-tree-id227 . -1) 690) nil (25843 15449 723934 220000) 0 nil])
([nil nil ((680 . 689)) nil (25843 15449 723930 754000) 0 nil])
([nil nil ((apply yas--snippet-revive 684 691 #s(yas--snippet nil nil nil 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 13 nil nil nil nil)) (684 . 691) (#("Println" 0 7 (fontified nil)) . 684) (684 . 691) (#("Print" 0 5 (fontified nil)) . 684) (684 . 689) (#("Println" 0 7 (fontified nil)) . -684) (684 . 691) (#("Print" 0 5 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property))) . -684) (undo-tree-id216 . -5) (undo-tree-id217 . -5) 689) nil (25843 15449 723929 762000) 0 nil])
([nil nil ((700 . 704)) nil (25843 15449 723927 287000) 0 nil])
([nil nil ((704 . 714)) nil (25843 15449 723926 776000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -713) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 714) nil (25843 15449 723925 755000) 0 nil])
([nil nil ((713 . 728)) nil (25843 15449 723915 115000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -906) (906 . 907) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -906) (906 . 907) (903 . 907) (t 25843 15449 732689 501000)) nil (25843 15568 35731 124000) 0 nil])
([nil nil ((906 . 910)) nil (25843 15568 35730 683000) 0 nil])
([nil nil ((apply yas--snippet-revive 906 917 #s(yas--snippet nil nil nil 14 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 14 nil nil nil nil)) (906 . 917) (#("prevCommand" 0 11 (fontified nil)) . 906) (906 . 917) (#("prev" 0 4 (fontified nil)) . 906) (906 . 910) (#("prevCommand" 0 11 (fontified nil)) . -906) (906 . 917) (#("prev" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -906) (undo-tree-id350 . -4) (undo-tree-id351 . -4) 910) nil (25843 15568 35729 942000) 0 nil])
([nil nil ((917 . 924)) nil (25843 15568 35728 78000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -927) (927 . 928) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -927) (927 . 928) (925 . 928)) nil (25843 15568 35727 657000) 0 nil])
([nil nil ((928 . 930) (929 . 930) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 928) (928 . 930) (927 . 929)) nil (25843 15568 35727 106000) 0 nil])
([nil nil ((930 . 937)) nil (25843 15568 35726 725000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 941 977 nil nil nil t nil)) nil 15 nil #s(yas--field 1 941 977 nil nil nil t nil) nil nil)) (937 . 953) (#("New(${1:text string})" 0 21 (fontified nil)) . 937) (937 . 958) (#("New" 0 3 (fontified nil)) . -937) (937 . 940)) nil (25843 15568 35726 415000) 0 nil])
([nil nil ((942 . 945) (941 . 943) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -941) (#("text string" 0 4 (fontified nil face tree-sitter-hl-face:variable) 4 5 (fontified nil) 5 11 (fontified nil face tree-sitter-hl-face:variable)) . 942) (941 . 942)) nil (25843 15568 35725 804000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -942) (undo-tree-id347 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -943) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -944) (undo-tree-id349 . -1) 945) nil (25843 15568 35724 962000) 0 nil])
([nil nil ((942 . 944)) nil (25843 15568 35723 840000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face tree-sitter-hl-face:string)) . -942) (undo-tree-id345 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -943) (undo-tree-id346 . -1) 944) nil (25843 15568 35722 948000) 0 nil])
([nil nil ((942 . 946)) nil (25843 15568 35721 836000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:string)) . -943) (undo-tree-id342 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -944) (undo-tree-id343 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -945) (undo-tree-id344 . -1) 946) nil (25843 15568 35721 285000) 0 nil])
([nil nil ((943 . 945)) nil (25843 15568 35462 190000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face tree-sitter-hl-face:string)) . -942) (undo-tree-id339 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -943) (undo-tree-id340 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:string)) . -944) (undo-tree-id341 . -1) 945) nil (25843 15568 35461 559000) 0 nil])
([nil nil ((942 . 957)) nil (25843 15568 35460 207000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:string)) . -956) (undo-tree-id338 . -1) 957) nil (25843 15568 35459 906000) 0 nil])
([nil nil ((956 . 959)) nil (25843 15568 35459 475000) 0 nil])
([nil nil ((959 . 961)) nil (25843 15568 35459 315000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -960) (undo-tree-id337 . -1) 961) nil (25843 15568 35458 924000) 0 nil])
([nil nil ((960 . 976)) nil (25843 15568 35458 423000) 0 nil])
([nil nil ((apply yas--snippet-revive 937 978 #s(yas--snippet nil (#s(yas--field 1 941 977 nil nil nil t nil)) nil 15 nil #s(yas--field 1 941 977 nil nil nil t nil) nil nil))) nil (25843 15568 35458 193000) 0 nil])
([nil nil ((978 . 981)) nil (25843 15568 35457 872000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -978) (undo-tree-id334 . -1) (#("	" 0 1 (fontified t)) . -979) (undo-tree-id335 . -1) (#("	" 0 1 (fontified t)) . -980) (undo-tree-id336 . -1) 981) nil (25843 15568 35457 331000) 0 nil])
([nil nil ((981 . 983)) nil (25843 15568 35456 319000) 0 nil])
([nil nil ((983 . 1004)) nil (25843 15568 35455 899000) 0 nil])
([nil nil ((1004 . 1011)) nil (25843 15568 35455 678000) 0 nil])
([nil nil ((1011 . 1014)) nil (25843 15568 35455 348000) 0 nil])
([nil nil ((1014 . 1015)) nil (25843 15568 35455 117000) 0 nil])
([nil nil ((1015 . 1017)) nil (25843 15568 35454 776000) 0 nil])
([nil nil ((1017 . 1025)) nil (25843 15568 35454 606000) 0 nil])
([nil nil ((apply yas--snippet-revive 1025 1029 #s(yas--snippet nil nil nil 16 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 16 nil nil nil nil)) (1025 . 1029) (#("chan" 0 4 (fontified nil)) . 1025) (1014 . 1029) (#("chan" 0 4 (fontified nil)) . -1014) (1014 . 1018) (#("GetLocation" 0 11 (fontified t face tree-sitter-hl-face:type)) . -1014) (undo-tree-id332 . -11) (undo-tree-id333 . -11) 1025) nil (25843 15568 35453 935000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1025) (undo-tree-id328 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1026) (undo-tree-id329 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1027) (undo-tree-id330 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:type)) . -1028) (undo-tree-id331 . -1) 1029) nil (25843 15568 35452 652000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1026) (1026 . 1027) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1026) (1026 . 1027) (1025 . 1027)) nil (25843 15568 35450 248000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -1003) (undo-tree-id327 . -1) 1004) nil (25843 15568 35448 905000) 0 nil])
([nil nil ((1025 . 1028)) nil (25843 15568 35447 853000) 0 nil])
([nil nil ((apply yas--snippet-revive 1025 1036 #s(yas--snippet nil nil nil 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 17 nil nil nil nil)) (1025 . 1036) (#("prevCommand" 0 11 (fontified nil)) . 1025) (1025 . 1036) (#("pre" 0 3 (fontified nil)) . 1025) (1025 . 1028) (#("prevCommand" 0 11 (fontified nil)) . -1025) (1025 . 1036) (#("pre" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1025) (undo-tree-id325 . -3) (undo-tree-id326 . -3) 1028) nil (25843 15568 35446 731000) 0 nil])
([nil nil ((624 . 625)) nil (25843 15568 35444 978000) 0 nil])
([nil nil ((539 . 540)) nil (25843 15568 35444 387000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -673) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -674) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:constant\.builtin)) . -675) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 676) nil (25843 15568 35443 255000) 0 nil])
([nil nil ((673 . 675) (#("\"" 0 1 (fontified nil)) . -673) (673 . 674)) nil (25843 15568 35432 465000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -673) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . 674)) nil (25843 15568 35431 142000) 0 nil])
([nil nil ((673 . 676)) nil (25843 15568 35417 777000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -673) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -674) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:constant\.builtin)) . -675) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 676 (t 25843 15568 40785 961000)) nil (25843 15575 770073 147000) 0 nil])
([nil nil ((673 . 675) (#("\"" 0 1 (fontified nil)) . -673) (673 . 674)) nil (25843 15575 770039 174000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -922) (undo-tree-id433 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -923) (undo-tree-id434 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:constant\.builtin)) . -924) (undo-tree-id435 . -1) 925 (t 25843 15575 777727 310000)) nil (25843 15624 868837 800000) 0 nil])
([nil nil ((922 . 924) (#("\"" 0 1 (fontified nil)) . -922) (922 . 923)) nil (25843 15624 868836 117000) 0 nil])
([nil nil ((1002 . 1003)) nil (25843 15624 868835 727000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1002) (undo-tree-id432 . -1) 1003) nil (25843 15624 868835 386000) 0 nil])
([nil nil ((1037 . 1039)) nil (25843 15624 868834 314000) 0 nil])
([nil nil ((1039 . 1045)) nil (25843 15624 868834 134000) 0 nil])
([nil nil ((1045 . 1060)) nil (25843 15624 868833 853000) 0 nil])
([nil nil ((apply yas--snippet-revive 1056 1079 #s(yas--snippet nil nil nil 18 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 18 nil nil nil nil)) (1056 . 1079) (#("locationsObject.Results" 0 23 (fontified nil)) . 1056) (1056 . 1079) (#("loca" 0 4 (fontified nil)) . 1056) (1056 . 1060) (#("locationsObject.Results" 0 23 (fontified nil)) . -1056) (1056 . 1079) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1056) (undo-tree-id430 . -4) (undo-tree-id431 . -4) 1060) nil (25843 15624 868833 102000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1081) (1081 . 1082) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1081) (1081 . 1082) (1079 . 1082)) nil (25843 15624 868831 569000) 0 nil])
([nil nil ((1082 . 1084) (1083 . 1084) (#("		" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1082) (1082 . 1084) (1081 . 1083)) nil (25843 15624 868830 958000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1086 . 1087) (#("
" 0 1 (fontified nil)) . -1106) (1084 . 1107) 1083) nil (25843 15624 868830 266000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t) 2 3 (fontified t)) . 1082) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -1) 1083) nil (25843 15624 868829 445000) 0 nil])
([nil nil ((1106 . 1108)) nil (25843 15624 868827 271000) 0 nil])
([nil nil ((1108 . 1113)) nil (25843 15624 868826 830000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1111) (undo-tree-id424 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1112) (undo-tree-id425 . -1) 1113) nil (25843 15624 868826 99000) 0 nil])
([nil nil ((1111 . 1118)) nil (25843 15624 868818 655000) 0 nil])
([nil nil ((930 . 937)) nil (25843 15624 868815 619000) 0 nil])
([nil nil ((731 . 734) (t 25843 15624 877356 198000)) nil (25843 15634 686274 198000) 0 nil])
([nil nil ((734 . 743)) nil (25843 15634 686270 611000) 0 nil])
([nil nil ((739 . 740) (t 25843 15634 788281 514000)) nil (25843 15637 810477 632000) 0 nil])
([nil nil ((872 . 874) (t 25843 15637 818258 693000)) nil (25843 15671 134860 918000) 0 nil])
([nil nil ((874 . 877)) nil (25843 15671 134860 608000) 0 nil])
([nil nil ((apply yas--snippet-revive 874 885 #s(yas--snippet nil nil nil 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 19 nil nil nil nil)) (874 . 885) (#("prevCommand" 0 11 (fontified nil)) . 874) (874 . 885) (#("pre" 0 3 (fontified nil)) . 874) (874 . 877) (#("prevCommand" 0 11 (fontified nil)) . -874) (874 . 885) (#("pre" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -874) (undo-tree-id465 . -3) (undo-tree-id466 . -3) 877) nil (25843 15671 134859 816000) 0 nil])
([nil nil ((885 . 892)) nil (25843 15671 134858 43000) 0 nil])
([nil nil ((apply yas--snippet-revive 888 901 #s(yas--snippet nil nil nil 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 20 nil nil nil nil)) (888 . 901) (#("commandMapUrl" 0 13 (fontified nil)) . 888) (888 . 901) (#("comm" 0 4 (fontified nil)) . 888) (888 . 892) (#("commandMapUrl" 0 13 (fontified nil)) . -888) (888 . 901) (#("comm" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -888) (undo-tree-id463 . -4) (undo-tree-id464 . -4) 892) nil (25843 15671 134857 251000) 0 nil])
([nil nil ((901 . 903)) nil (25843 15671 134855 699000) 0 nil])
([nil nil ((903 . 907)) nil (25843 15671 134855 298000) 0 nil])
([nil nil ((907 . 911)) nil (25843 15671 134854 897000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 916 #s(yas--snippet nil nil nil 21 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 21 nil nil nil nil)) (903 . 916) (#("commandMapUrl" 0 13 (fontified nil)) . 903) (903 . 916) (#("commandM" 0 8 (fontified nil)) . 903) (903 . 911) (#("commandMapUrl" 0 13 (fontified nil)) . -903) (903 . 916) (#("commandM" 0 8 (fontified t face tree-sitter-hl-face:variable)) . -903) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -7) (undo-tree-id453 . -7) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) 911) nil (25843 15671 134853 815000) 0 nil])
([nil nil ((916 . 919)) nil (25843 15671 134848 285000) 0 nil])
([nil nil ((919 . 923)) nil (25843 15671 134847 804000) 0 nil])
([nil nil ((apply yas--snippet-revive 919 938 #s(yas--snippet nil nil nil 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 22 nil nil nil nil)) (919 . 938) (#("locationObject.Next" 0 19 (fontified nil)) . 919) (919 . 938) (#("loca" 0 4 (fontified nil)) . 919) (919 . 923) (#("locationObject.Next" 0 19 (fontified nil)) . -919) (919 . 938) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -919) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -1) (undo-tree-id439 . -2) (undo-tree-id440 . -3) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) 923) nil (25843 15671 134844 978000) 0 nil])
([nil nil ((1192 . 1194) (t 25843 15671 143008 162000)) nil (25843 15779 185889 56000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -888) (undo-tree-id559 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -889) (undo-tree-id560 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -890) (undo-tree-id561 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -891) (undo-tree-id562 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -892) (undo-tree-id563 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -893) (undo-tree-id564 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -894) (undo-tree-id565 . -1) (#("M" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -895) (undo-tree-id566 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -896) (undo-tree-id567 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -897) (undo-tree-id568 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -898) (undo-tree-id569 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -899) (undo-tree-id570 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -900) (undo-tree-id571 . -1) 901) nil (25843 15779 185887 704000) 0 nil])
([nil nil ((888 . 892)) nil (25843 15779 185881 462000) 0 nil])
([nil nil ((apply yas--snippet-revive 888 902 #s(yas--snippet nil nil nil 23 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 23 nil nil nil nil)) (888 . 902) (#("locationObject" 0 14 (fontified nil)) . 888) (888 . 902) (#("loca" 0 4 (fontified nil)) . 888) (888 . 892) (#("locationObject" 0 14 (fontified nil)) . -888) (888 . 902) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -888) (undo-tree-id557 . -4) (undo-tree-id558 . -4) 892) nil (25843 15779 185880 310000) 0 nil])
([nil nil ((902 . 903)) nil (25843 15779 185878 887000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 911 #s(yas--snippet nil nil nil 24 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 24 nil nil nil nil)) (903 . 911) (#("Previous" 0 8 (fontified nil)) . 903) (903 . 911) (#("Previous" 0 8 (fontified nil)) . -903) (903 . 911)) nil (25843 15779 185878 427000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -902) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("P" 0 1 (fontified t face tree-sitter-hl-face:property)) . -903) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:property)) . -904) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -905) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("v" 0 1 (fontified t face tree-sitter-hl-face:property)) . -906) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:property)) . -907) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:property)) . -908) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:property)) . -909) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -910) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 911) nil (25843 15779 185875 531000) 0 nil])
([nil nil ((902 . 903)) nil (25843 15779 185839 133000) 0 nil])
([nil nil ((apply yas--snippet-revive 903 911 #s(yas--snippet nil nil nil 25 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 25 nil nil nil nil)) (903 . 911) (#("Previous" 0 8 (fontified nil)) . 903) (903 . 911) (#("Previous" 0 8 (fontified nil)) . -903) (903 . 911)) nil (25843 15779 185836 7000) 0 nil])
([nil nil ((1204 . 1216) (t 25843 15779 287200 101000)) nil (25843 15865 425811 815000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1215) (undo-tree-id627 . -1) (undo-tree-id628 . -1) 1216) nil (25843 15865 425811 244000) 0 nil])
([nil nil ((1215 . 1227)) nil (25843 15865 425803 650000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1226) (undo-tree-id626 . -1) 1227) nil (25843 15865 425803 29000) 0 nil])
([nil nil ((1226 . 1227)) nil (25843 15865 425802 478000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1226) (undo-tree-id625 . -1) 1227) nil (25843 15865 425802 17000) 0 nil])
([nil nil ((1226 . 1227)) nil (25843 15865 425801 345000) 0 nil])
([nil nil ((apply yas--snippet-revive 1218 1238 #s(yas--snippet nil nil nil 26 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 26 nil nil nil nil)) (1218 . 1238) (#("locationsObject.Next" 0 20 (fontified nil)) . 1218) (1218 . 1238) (#("locationO" 0 9 (fontified nil)) . 1218) (1218 . 1227) (#("locationsObject.Next" 0 20 (fontified nil)) . -1218) (1218 . 1238) (#("locationO" 0 9 (fontified t face tree-sitter-hl-face:variable)) . -1218) (undo-tree-id623 . -9) (undo-tree-id624 . -9) 1227) nil (25843 15865 425800 514000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1233) (undo-tree-id618 . -1) (#("N" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1234) (undo-tree-id619 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1235) (undo-tree-id620 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1236) (undo-tree-id621 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:property)) . -1237) (undo-tree-id622 . -1) 1238) nil (25843 15865 425798 200000) 0 nil])
([nil nil ((1233 . 1234)) nil (25843 15865 425796 106000) 0 nil])
([nil nil ((apply yas--snippet-revive 1234 1242 #s(yas--snippet nil nil nil 27 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 27 nil nil nil nil)) (1234 . 1242) (#("Previous" 0 8 (fontified nil)) . 1234) (1234 . 1242) (#("Previous" 0 8 (fontified nil)) . -1234) (1234 . 1242)) nil (25843 15865 425795 585000) 0 nil])
([nil nil ((1242 . 1244)) nil (25843 15865 425794 974000) 0 nil])
([nil nil ((1244 . 1262)) nil (25843 15865 425794 553000) 0 nil])
([nil nil ((apply yas--snippet-revive 1258 1273 #s(yas--snippet nil nil nil 28 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 28 nil nil nil nil)) (1258 . 1273) (#("locationsObject" 0 15 (fontified nil)) . 1258) (1258 . 1273) (#("loca" 0 4 (fontified nil)) . 1258) (1258 . 1262) (#("locationsObject" 0 15 (fontified nil)) . -1258) (1258 . 1273) (#("loca" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1258) (undo-tree-id616 . -4) (undo-tree-id617 . -4) 1262) nil (25843 15865 425793 892000) 0 nil])
([nil nil ((1273 . 1278)) nil (25843 15865 425792 148000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1244) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1245) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1246) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1247) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1248) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1249) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1250) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1251) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1252) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1253) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1254) (undo-tree-id615 . -1) 1255) nil (25843 15865 425790 605000) 0 nil])
([nil nil ((1244 . 1250)) nil (25843 15865 425617 241000) 0 nil])
([nil nil ((apply yas--snippet-revive 1244 1257 #s(yas--snippet nil nil nil 29 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 29 nil nil nil nil)) (1244 . 1257) (#("commandMapUrl" 0 13 (fontified nil)) . 1244) (1244 . 1257) (#("comman" 0 6 (fontified nil)) . 1244) (1244 . 1250) (#("commandMapUrl" 0 13 (fontified nil)) . -1244) (1244 . 1257) (#("comman" 0 6 (fontified t face tree-sitter-hl-face:variable)) . -1244) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -2) (undo-tree-id575 . -3) (undo-tree-id576 . -4) (undo-tree-id577 . -5) (undo-tree-id578 . -6) (undo-tree-id579 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) 1250) nil (25843 15865 425614 375000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -567) (undo-tree-id633 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -568) (undo-tree-id634 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -569) (undo-tree-id635 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -570) (undo-tree-id636 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -571) (undo-tree-id637 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -572) (undo-tree-id638 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -573) (undo-tree-id639 . -1) (#("M" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -574) (undo-tree-id640 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -575) (undo-tree-id641 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -576) (undo-tree-id642 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -577) (undo-tree-id643 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -578) (undo-tree-id644 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -579) (undo-tree-id645 . -1) 580 (t 25843 15865 433561 97000)) nil (25843 15927 127748 462000) 0 nil])
([nil nil ((567 . 580)) nil (25843 15927 127743 653000) 0 nil])
([nil nil ((567 . 572) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 567) (569 . 570) (#("mm" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable)) . 569) (572 . 575) (#("dMap" 0 1 (fontified t face tree-sitter-hl-face:variable) 1 2 (fontified t face tree-sitter-hl-face:variable) 2 3 (fontified t face tree-sitter-hl-face:variable) 3 4 (fontified t face tree-sitter-hl-face:variable)) . 573) 578 (656 . 661) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 656) (658 . 659) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 658) (661 . 664) (#("dMap" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 662) 656 (790 . 795) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 790) (792 . 793) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 792) (795 . 798) (#("dMap" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 796) 790 (913 . 918) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 913) (915 . 916) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 915) (918 . 921) (#("dMap" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 919) 913 (1244 . 1249) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1244) (1246 . 1247) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 1246) (1249 . 1252) (#("dMap" 0 4 (fontified t face tree-sitter-hl-face:variable)) . 1250) 1244 (t 25843 15865 433561 97000)) nil (25843 15927 127741 910000) 0 nil])
([nil nil ((548 . 549) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 548) (550 . 551) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 550) (undo-tree-id629 . -2) (undo-tree-id630 . -1) (553 . 556) (554 . 558) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 554) (undo-tree-id631 . -1) 550 (884 . 885) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 884) (886 . 887) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 886) (889 . 892) (890 . 894) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 890) 880 (1008 . 1009) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1008) (1010 . 1011) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 1010) (1013 . 1016) (1014 . 1018) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1014) 1004 (1133 . 1134) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1133) (1135 . 1136) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 1135) (1138 . 1141) (1139 . 1143) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1139) 1129 (1216 . 1217) (#("C" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1216) (1218 . 1219) (#("mm" 0 2 (fontified t face tree-sitter-hl-face:variable)) . 1218) (1221 . 1224) (1222 . 1226) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1222) (undo-tree-id632 . -1) 1212) nil (25843 15927 127736 439000) 0 nil])
([nil nil ((1625 . 1628) (t 25843 15927 137105 551000)) nil (25843 16067 458908 29000) 0 nil])
([nil nil ((1629 . 1632) (1628 . 1630) (#("\"" 0 1 (fontified nil)) . -1628) (1628 . 1629)) nil (25843 16067 458907 668000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1636) (1636 . 1637) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1636) (1636 . 1637) (1633 . 1637)) nil (25843 16067 458907 17000) 0 nil])
([nil nil ((1637 . 1640) (1638 . 1640) (#("			" 0 3 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1637) (1637 . 1640) (1636 . 1638)) nil (25843 16067 458906 476000) 0 nil])
([nil nil ((1640 . 1641)) nil (25843 16067 458906 145000) 0 nil])
([nil nil ((1647 . 1650) (1646 . 1648) (#("\"" 0 1 (fontified nil)) . -1646) (1641 . 1647)) nil (25843 16067 458905 574000) 0 nil])
([nil nil ((1651 . 1652)) nil (25843 16067 458905 283000) 0 nil])
([nil nil ((1652 . 1656)) nil (25843 16067 458905 33000) 0 nil])
([nil nil ((1656 . 1659)) nil (25843 16067 458904 612000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1669 1699 nil nil nil t nil)) nil 30 nil #s(yas--field 1 1669 1699 nil nil nil t nil) nil nil)) (1656 . 1676) (#("Description: ${1:string}," 0 25 (fontified nil)) . 1656) (1656 . 1681) (#("Des" 0 3 (fontified nil)) . 1656) (1656 . 1659) (#("Description" 0 11 (fontified nil)) . -1656) (1656 . 1667) (#("Des" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1656) (undo-tree-id676 . -3) (undo-tree-id677 . -3) 1659) nil (25843 16067 458903 670000) 0 nil])
([nil nil ((1669 . 1671) (#("\"" 0 1 (fontified nil)) . -1669) (#("string" 0 6 (fontified nil face tree-sitter-hl-face:variable)) . 1670) (1669 . 1670)) nil (25843 16067 458901 847000) 0 nil])
([nil nil ((1670 . 1684)) nil (25843 16067 458901 476000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1679) (undo-tree-id671 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1680) (undo-tree-id672 . -1) (#("x" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1681) (undo-tree-id673 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1682) (undo-tree-id674 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -1683) (undo-tree-id675 . -1) 1684) nil (25843 16067 458900 735000) 0 nil])
([nil nil ((1679 . 1688)) nil (25843 16067 458898 621000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1687) (undo-tree-id670 . -1) 1688) nil (25843 16067 458898 330000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1679) (undo-tree-id662 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1680) (undo-tree-id663 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1681) (undo-tree-id664 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1682) (undo-tree-id665 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1683) (undo-tree-id666 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1684) (undo-tree-id667 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1685) (undo-tree-id668 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1686) (undo-tree-id669 . -1) 1687) nil (25843 16067 458896 717000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1680) (1680 . 1681) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -1680) (1680 . 1681) (1679 . 1681)) nil (25843 16067 458893 722000) 0 nil])
([nil nil ((1680 . 1685)) nil (25843 16067 458893 191000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -1684) (undo-tree-id661 . -1) 1685) nil (25843 16067 458892 630000) 0 nil])
([nil nil ((1685 . 1686)) nil (25843 16067 458891 908000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1679) (undo-tree-id660 . -1) 1680) nil (25843 16067 458891 518000) 0 nil])
([nil nil ((1675 . 1676)) nil (25843 16067 458890 876000) 0 nil])
([nil nil ((1686 . 1691)) nil (25843 16067 458890 696000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1690) (undo-tree-id659 . -1) 1691) nil (25843 16067 458890 235000) 0 nil])
([nil nil ((1690 . 1698)) nil (25843 16067 458889 624000) 0 nil])
([nil nil ((1698 . 1699)) nil (25843 16067 458889 283000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1698) (undo-tree-id658 . -1) 1699) nil (25843 16067 458888 903000) 0 nil])
([nil nil ((apply yas--snippet-revive 1656 1700 #s(yas--snippet nil (#s(yas--field 1 1669 1699 nil nil nil t nil)) nil 30 nil #s(yas--field 1 1669 1699 nil nil nil t nil) nil nil))) nil (25843 16067 458888 292000) 0 nil])
([nil nil ((1700 . 1704)) nil (25843 16067 458888 51000) 0 nil])
([nil nil ((1704 . 1708)) nil (25843 16067 458887 801000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1714 1724 nil nil nil t nil)) nil 31 nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil nil)) (1704 . 1727) (#("Callback: ${1:func() error}," 0 28 (fontified nil)) . 1704) (1704 . 1732) (#("Call" 0 4 (fontified nil)) . 1704) (1704 . 1708) (#("Callback" 0 8 (fontified nil)) . -1704) (1704 . 1712) (#("Call" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1704) (undo-tree-id656 . -4) (undo-tree-id657 . -4) 1708) nil (25843 16067 458887 360000) 0 nil])
([nil nil ((1715 . 1720) (#("func() error" 0 4 (fontified nil face tree-sitter-hl-face:keyword) 4 5 (fontified nil face (rainbow-delimiters-depth-4-face)) 5 6 (fontified nil face (rainbow-delimiters-depth-4-face)) 6 7 (fontified nil) 7 12 (fontified nil face tree-sitter-hl-face:type)) . 1715) (1714 . 1715)) nil (25843 16067 458885 587000) 0 nil])
([nil nil ((apply yas--snippet-revive 1714 1724 #s(yas--snippet nil nil nil 32 nil nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 32 nil nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil)) (1714 . 1724) (#("commandMap" 0 10 (fontified nil)) . 1714) (1714 . 1724) (#("comman" 0 6 (fontified nil)) . 1714) (1714 . 1720) (#("commandMap" 0 10 (fontified nil)) . -1714) (1714 . 1724) (#("comman" 0 6 (fontified t face tree-sitter-hl-face:variable)) . -1714) (undo-tree-id654 . -6) (undo-tree-id655 . -6) 1720) nil (25843 16067 458884 755000) 0 nil])
([nil nil ((apply yas--snippet-revive 1704 1725 #s(yas--snippet nil (#s(yas--field 1 1714 1724 nil nil nil t nil)) nil 31 nil #s(yas--field 1 1714 1724 nil nil nil t nil) nil nil))) nil (25843 16067 458883 162000) 0 nil])
([nil nil ((1729 . 1730)) nil (25843 16067 458882 731000) 0 nil])
([nil nil ((1730 . 1733)) nil (25843 16067 458882 120000) 0 nil])
([nil nil ((1734 . 1738) (1733 . 1735) (#("\"" 0 1 (fontified nil)) . -1733) (1733 . 1734)) nil (25843 16067 458881 459000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -1742) (1742 . 1743) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1742) (1742 . 1743) (1739 . 1743)) nil (25843 16067 458880 557000) 0 nil])
([nil nil ((1743 . 1746) (1744 . 1746) (#("			" 0 3 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1743) (1743 . 1746) (1742 . 1744)) nil (25843 16067 458879 806000) 0 nil])
([nil nil ((1746 . 1749)) nil (25843 16067 458879 335000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1752 1758 nil nil nil t nil)) nil 33 nil #s(yas--field 1 1752 1758 nil nil nil t nil) nil nil)) (1746 . 1759) (#("Name: ${1:string}," 0 18 (fontified nil)) . 1746) (1746 . 1764) (#("Nam" 0 3 (fontified nil)) . 1746) (1746 . 1749) (#("Name" 0 4 (fontified nil)) . -1746) (1746 . 1750) (#("Nam" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1746) (undo-tree-id652 . -3) (undo-tree-id653 . -3) 1749) nil (25843 16067 458878 443000) 0 nil])
([nil nil ((1753 . 1757) (1752 . 1754) (#("\"" 0 1 (fontified nil)) . -1752) (#("string" 0 6 (fontified nil face tree-sitter-hl-face:variable)) . 1753) (1752 . 1753)) nil (25843 16067 458875 688000) 0 nil])
([nil nil ((apply yas--snippet-revive 1746 1759 #s(yas--snippet nil (#s(yas--field 1 1752 1758 nil nil nil t nil)) nil 33 nil #s(yas--field 1 1752 1758 nil nil nil t nil) nil nil))) nil (25843 16067 458875 57000) 0 nil])
([nil nil ((1759 . 1763)) nil (25843 16067 458874 526000) 0 nil])
([nil nil ((1763 . 1766)) nil (25843 16067 458873 784000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1776 1808 nil nil nil t nil)) nil 34 nil #s(yas--field 1 1776 1808 nil nil nil t nil) nil nil)) (1763 . 1783) (#("Description: ${1:string}," 0 25 (fontified nil)) . 1763) (1763 . 1788) (#("Des" 0 3 (fontified nil)) . 1763) (1763 . 1766) (#("Description" 0 11 (fontified nil)) . -1763) (1763 . 1774) (#("Des" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1763) (undo-tree-id650 . -3) (undo-tree-id651 . -3) 1766) nil (25843 16067 458872 522000) 0 nil])
([nil nil ((1777 . 1795) (1776 . 1778) (#("\"" 0 1 (fontified nil)) . -1776) (#("string" 0 6 (fontified nil face tree-sitter-hl-face:variable)) . 1777) (1776 . 1777)) nil (25843 16067 458869 967000) 0 nil])
([nil nil ((1795 . 1807)) nil (25843 16067 458868 615000) 0 nil])
([nil nil ((apply yas--snippet-revive 1763 1809 #s(yas--snippet nil (#s(yas--field 1 1776 1808 nil nil nil t nil)) nil 34 nil #s(yas--field 1 1776 1808 nil nil nil t nil) nil nil))) nil (25843 16067 458867 643000) 0 nil])
([nil nil ((1809 . 1813)) nil (25843 16067 458867 403000) 0 nil])
([nil nil ((1813 . 1816)) nil (25843 16067 458866 691000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1823 1834 nil nil nil t nil)) nil 35 nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil nil)) (1813 . 1836) (#("Callback: ${1:func() error}," 0 28 (fontified nil)) . 1813) (1813 . 1841) (#("Cal" 0 3 (fontified nil)) . 1813) (1813 . 1816) (#("Callback" 0 8 (fontified nil)) . -1813) (1813 . 1821) (#("Cal" 0 3 (fontified t face tree-sitter-hl-face:variable)) . -1813) (undo-tree-id648 . -3) (undo-tree-id649 . -3) 1816) nil (25843 16067 458865 900000) 0 nil])
([nil nil ((1824 . 1828) (#("func() error" 0 4 (fontified nil face tree-sitter-hl-face:keyword) 4 5 (fontified nil face (rainbow-delimiters-depth-4-face)) 5 6 (fontified nil face (rainbow-delimiters-depth-4-face)) 6 7 (fontified nil) 7 12 (fontified nil face tree-sitter-hl-face:type)) . 1824) (1823 . 1824)) nil (25843 16067 458862 974000) 0 nil])
([nil nil ((apply yas--snippet-revive 1823 1834 #s(yas--snippet nil nil nil 36 nil nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 36 nil nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil)) (1823 . 1834) (#("commandMapB" 0 11 (fontified nil)) . 1823) (1823 . 1834) (#("comma" 0 5 (fontified nil)) . 1823) (1823 . 1828) (#("commandMapB" 0 11 (fontified nil)) . -1823) (1823 . 1834) (#("comma" 0 5 (fontified t face tree-sitter-hl-face:variable)) . -1823) (undo-tree-id646 . -5) (undo-tree-id647 . -5) 1828) nil (25843 16067 458861 511000) 0 nil])
([nil nil ((apply yas--snippet-revive 1813 1835 #s(yas--snippet nil (#s(yas--field 1 1823 1834 nil nil nil t nil)) nil 35 nil #s(yas--field 1 1823 1834 nil nil nil t nil) nil nil))) nil (25843 16067 458852 124000) 0 nil])
([nil nil ((1839 . 1840)) nil (25843 16067 458848 978000) 0 nil])
([nil nil ((1009 . 1011) (t 25843 16067 560074 439000)) nil (25843 16752 21851 881000) 0 nil])
([nil nil ((1011 . 1019)) nil (25843 16752 21851 430000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1023 1031 nil nil nil t nil)) nil 37 nil #s(yas--field 1 1023 1031 nil nil nil t nil) nil nil)) (1015 . 1032) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 1015) (1015 . 1037) (#("Prin" 0 4 (fontified nil)) . 1015) (1015 . 1019) (#("Println" 0 7 (fontified nil)) . -1015) (1015 . 1022) (#("Prin" 0 4 (fontified t face tree-sitter-hl-face:property)) . -1015) (undo-tree-id694 . -4) (undo-tree-id695 . -4) 1019) nil (25843 16752 21850 699000) 0 nil])
([nil nil ((1023 . 1025) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1023) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 1024) (1023 . 1024)) nil (25843 16752 21848 465000) 0 nil])
([nil nil ((1024 . 1027)) nil (25843 16752 21847 954000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1024) (undo-tree-id691 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1025) (undo-tree-id692 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:string)) . -1026) (undo-tree-id693 . -1) 1027) nil (25843 16752 21847 323000) 0 nil])
([nil nil ((1024 . 1030)) nil (25843 16752 21845 850000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face tree-sitter-hl-face:string)) . 1029) (undo-tree-id690 . -1) (1030 . 1031)) nil (25843 16752 21845 419000) 0 nil])
([nil nil ((apply yas--snippet-revive 1015 1032 #s(yas--snippet nil (#s(yas--field 1 1023 1031 nil nil nil t nil)) nil 37 nil #s(yas--field 1 1023 1031 nil nil nil t nil) nil nil))) nil (25843 16752 21844 638000) 0 nil])
([nil nil ((1010 . 1011)) nil (25843 16752 21844 297000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1010)) nil (25843 16752 21843 916000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . 1029) (1029 . 1030) (#("\"" 0 1 (fontified nil)) . -1029) (1029 . 1030)) nil (25843 16752 21843 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1029) (undo-tree-id689 . -1) 1030) nil (25843 16752 21842 574000) 0 nil])
([nil nil ((1029 . 1030)) nil (25843 16752 21841 842000) 0 nil])
([nil nil ((1031 . 1033)) nil (25843 16752 21841 502000) 0 nil])
([nil nil ((1033 . 1037)) nil (25843 16752 21840 810000) 0 nil])
([nil nil ((apply yas--snippet-revive 1033 1049 #s(yas--snippet nil nil nil 38 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 38 nil nil nil nil)) (1033 . 1049) (#("prevLocationsUrl" 0 16 (fontified nil)) . 1033) (1033 . 1049) (#("prec" 0 4 (fontified nil)) . 1033) (1033 . 1037) (#("prevLocationsUrl" 0 16 (fontified nil)) . -1033) (1033 . 1049) (#("prec" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -1033) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -2) (undo-tree-id681 . -3) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) 1037) nil (25843 16752 21838 346000) 0 nil])
([nil nil ((1053 . 1055) (#("\"" 0 1 (fontified nil)) . -1053) (1049 . 1054) (t 25843 16752 125113 456000)) nil (25843 16789 526121 385000) 0 nil])
([nil nil ((1086 . 1089) (t 25843 16789 533844 144000)) nil (25843 17074 268025 746000) 0 nil])
([nil nil ((1089 . 1091)) nil (25843 17074 268025 315000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1089) (undo-tree-id699 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1090) (undo-tree-id700 . -1) 1091) nil (25843 17074 268024 644000) 0 nil])
([nil nil ((1089 . 1093)) nil (25843 17074 268023 81000) 0 nil])
([nil nil ((1093 . 1094)) nil (25843 17074 268022 440000) 0 nil])
([nil nil ((1094 . 1095)) nil (25843 17074 268021 789000) 0 nil])
([nil nil ((1095 . 1096)) nil (25843 17074 268021 157000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1101 1117 nil nil nil t nil)) nil 39 nil #s(yas--field 1 1101 1117 nil nil nil t nil) nil nil)) (1093 . 1110) (#("Println(${1:a ...any})" 0 22 (fontified nil)) . 1093) (1093 . 1115) (#("Pri" 0 3 (fontified nil)) . 1093) (1093 . 1096) (#("Println" 0 7 (fontified nil)) . -1093) (1093 . 1100) (#("Pri" 0 3 (fontified t face tree-sitter-hl-face:property)) . -1093) (undo-tree-id697 . -3) (undo-tree-id698 . -3) 1096) nil (25843 17074 268019 955000) 0 nil])
([nil nil ((1102 . 1116) (1101 . 1103) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1101) (#("a ...any" 0 1 (fontified nil face tree-sitter-hl-face:variable) 1 2 (fontified nil) 2 5 (fontified nil face tree-sitter-hl-face:operator) 5 8 (fontified nil face tree-sitter-hl-face:variable)) . 1102) (1101 . 1102)) nil (25843 17074 268016 238000) 0 nil])
([nil nil ((1116 . 1117)) nil (25843 17074 268015 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1116) (undo-tree-id696 . -1) 1117) nil (25843 17074 268014 555000) 0 nil])
([nil nil ((apply yas--snippet-revive 1093 1118 #s(yas--snippet nil (#s(yas--field 1 1101 1117 nil nil nil t nil)) nil 39 nil #s(yas--field 1 1101 1117 nil nil nil t nil) nil nil))) nil (25843 17074 268004 95000) 0 nil])
([nil current ((#("		fmt.Println(\"Error happened\")
" 0 2 (fontified t) 2 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t) 6 13 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 13 14 (fontified t face (rainbow-delimiters-depth-3-face)) 14 30 (fontified t face tree-sitter-hl-face:string) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 32 (fontified t)) . 1087) (undo-tree-id701 . 1) (undo-tree-id702 . -31) (undo-tree-id703 . -14) (undo-tree-id704 . 3) (undo-tree-id705 . -30) (undo-tree-id706 . -30) (undo-tree-id707 . -30) (undo-tree-id708 . -30) (undo-tree-id709 . -30) (undo-tree-id710 . -30) (undo-tree-id711 . -30) (undo-tree-id712 . -30) (undo-tree-id713 . -30) (undo-tree-id714 . 2) (undo-tree-id715 . -31) (undo-tree-id716 . 19) (undo-tree-id717 . -14) (undo-tree-id718 . -30) (undo-tree-id719 . -30) (undo-tree-id720 . -30) (undo-tree-id721 . -32) 1117 (t 25843 17074 277797 254000)) nil (25843 17090 797208 667000) 0 nil])
nil
